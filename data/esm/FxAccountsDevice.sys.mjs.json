[
  {
    "type": "class",
    "id": "FxAccountsDevice",
    "line": 55,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 56,
        "params": [
          {
            "type": "params",
            "id": "fxai",
            "line": 56
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "getLocalId",
        "line": 77,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getDefaultLocalName",
        "line": 86,
        "params": [],
        "comments": [
          {
            "description": "Generate a client name if we don't have a useful one yet",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Generate a client name if we don't have a useful one yet",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Generate a client name if we don't have a useful one yet",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getLocalName",
        "line": 143,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "setLocalName",
        "line": 164,
        "params": [
          {
            "type": "params",
            "id": "newName",
            "line": 164
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getLocalType",
        "line": 176,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "recentDeviceList",
        "line": 188,
        "params": [],
        "comments": [
          {
            "description": "Returns the most recently fetched device list, or `null` if the list hasn't been fetched yet. This is synchronous, so that consumers like Send Tab can render the device list right away, without waiting for it to refresh.",
            "tags": [
              {
                "tag": "type",
                "name": "",
                "type": "?Array",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @type {?Array}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@type",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{?Array}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Returns the most recently fetched device list, or `null` if the list",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Returns the most recently fetched device list, or `null` if the list",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * hasn't been fetched yet. This is synchronous, so that consumers like",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "hasn't been fetched yet. This is synchronous, so that consumers like",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * Send Tab can render the device list right away, without waiting for",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Send Tab can render the device list right away, without waiting for",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * it to refresh.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "it to refresh.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @type {?Array}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@type",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{?Array}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "refreshDeviceList",
        "line": 206,
        "params": [],
        "comments": [
          {
            "description": "Refreshes the device list. After this function returns, consumers can access the new list using the `recentDeviceList` getter. Note that multiple concurrent calls to `refreshDeviceList` will only refresh the list once.",
            "tags": [
              {
                "tag": "param",
                "name": "options.ignoreCached",
                "type": "Boolean",
                "optional": true,
                "description": "If `true`, forces a refresh, even if the cached device list is still fresh. Defaults to `false`.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param  {Boolean} [options.ignoreCached]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": "  ",
                      "name": "[options.ignoreCached]",
                      "postName": "",
                      "type": "{Boolean}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *         If `true`, forces a refresh, even if the cached device list is",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "If `true`, forces a refresh, even if the cached device list is",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *         still fresh. Defaults to `false`.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "still fresh. Defaults to `false`.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "return",
                "name": "",
                "type": "Promise<Boolean>",
                "optional": false,
                "description": "`true` if the list was refreshed, `false` if the cached list is fresh. Rejects if an error occurs refreshing the list or device push registration.",
                "problems": [],
                "source": [
                  {
                    "number": 10,
                    "source": "   * @return {Promise<Boolean>}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@return",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{Promise<Boolean>}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *         `true` if the list was refreshed, `false` if the cached list is",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "`true` if the list was refreshed, `false` if the cached list is",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *         fresh. Rejects if an error occurs refreshing the list or device",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "fresh. Rejects if an error occurs refreshing the list or device",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *         push registration.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "push registration.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Refreshes the device list. After this function returns, consumers can",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Refreshes the device list. After this function returns, consumers can",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * access the new list using the `recentDeviceList` getter. Note that",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "access the new list using the `recentDeviceList` getter. Note that",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * multiple concurrent calls to `refreshDeviceList` will only refresh the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "multiple concurrent calls to `refreshDeviceList` will only refresh the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * list once.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "list once.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param  {Boolean} [options.ignoreCached]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": "  ",
                  "name": "[options.ignoreCached]",
                  "postName": "",
                  "type": "{Boolean}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *         If `true`, forces a refresh, even if the cached device list is",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If `true`, forces a refresh, even if the cached device list is",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *         still fresh. Defaults to `false`.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "still fresh. Defaults to `false`.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * @return {Promise<Boolean>}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@return",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{Promise<Boolean>}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *         `true` if the list was refreshed, `false` if the cached list is",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "`true` if the list was refreshed, `false` if the cached list is",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *         fresh. Rejects if an error occurs refreshing the list or device",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "fresh. Rejects if an error occurs refreshing the list or device",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *         push registration.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "push registration.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_refreshRemoteDevice",
        "line": 258,
        "params": [
          {
            "type": "params",
            "id": "currentState",
            "line": 258
          },
          {
            "type": "params",
            "id": "accountData",
            "line": 258
          },
          {
            "type": "params",
            "id": "remoteDevices",
            "line": 258
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "updateDeviceRegistration",
        "line": 292,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "updateDeviceRegistrationIfNecessary",
        "line": 304,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "reset",
        "line": 310,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_withCurrentAccountState",
        "line": 325,
        "params": [
          {
            "type": "params",
            "id": "func",
            "line": 325
          }
        ],
        "comments": [
          {
            "description": "Here begin our internal helper methods. Many of these methods take the current account state as first argument, in order to avoid racing our state updates with e.g. the uer signing out while we're in the middle of an update. If this does happen, the resulting promise will be rejected rather than persisting stale state.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Here begin our internal helper methods.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Here begin our internal helper methods.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * Many of these methods take the current account state as first argument,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Many of these methods take the current account state as first argument,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * in order to avoid racing our state updates with e.g. the uer signing",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "in order to avoid racing our state updates with e.g. the uer signing",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * out while we're in the middle of an update. If this does happen, the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "out while we're in the middle of an update. If this does happen, the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * resulting promise will be rejected rather than persisting stale state.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "resulting promise will be rejected rather than persisting stale state.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_withVerifiedAccountState",
        "line": 338,
        "params": [
          {
            "type": "params",
            "id": "func",
            "line": 338
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_checkDeviceUpdateNeeded",
        "line": 349,
        "params": [
          {
            "type": "params",
            "id": "device",
            "line": 349
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_checkRemoteCommandsUpdateNeeded",
        "line": 368,
        "params": [
          {
            "type": "params",
            "id": "remoteAvailableCommands",
            "line": 368
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_updateDeviceRegistrationIfNecessary",
        "line": 397,
        "params": [
          {
            "type": "params",
            "id": "currentState",
            "line": 397
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_registerOrUpdateDevice",
        "line": 417,
        "params": [
          {
            "type": "params",
            "id": "currentState",
            "line": 417
          },
          {
            "type": "params",
            "id": "signedInUser",
            "line": 417
          }
        ],
        "comments": [
          {
            "description": "If you change what we send to the FxA servers during device registration,",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " If you change what we send to the FxA servers during device registration,",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If you change what we send to the FxA servers during device registration,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "you'll have to bump the DEVICE_REGISTRATION_VERSION number to force older",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " you'll have to bump the DEVICE_REGISTRATION_VERSION number to force older",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "you'll have to bump the DEVICE_REGISTRATION_VERSION number to force older",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "devices to re-register when Firefox updates.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " devices to re-register when Firefox updates.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "devices to re-register when Firefox updates.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_handleDeviceError",
        "line": 491,
        "params": [
          {
            "type": "params",
            "id": "currentState",
            "line": 491
          },
          {
            "type": "params",
            "id": "error",
            "line": 491
          },
          {
            "type": "params",
            "id": "sessionToken",
            "line": 491
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_recoverFromUnknownDevice",
        "line": 521,
        "params": [
          {
            "type": "params",
            "id": "currentState",
            "line": 521
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_recoverFromDeviceSessionConflict",
        "line": 540,
        "params": [
          {
            "type": "params",
            "id": "currentState",
            "line": 540
          },
          {
            "type": "params",
            "id": "error",
            "line": 540
          },
          {
            "type": "params",
            "id": "sessionToken",
            "line": 540
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_logErrorAndResetDeviceRegistrationVersion",
        "line": 588,
        "params": [
          {
            "type": "params",
            "id": "currentState",
            "line": 588
          },
          {
            "type": "params",
            "id": "error",
            "line": 588
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "observe",
        "line": 608,
        "params": [
          {
            "type": "params",
            "id": "subject",
            "line": 608
          },
          {
            "type": "params",
            "id": "topic",
            "line": 608
          },
          {
            "type": "params",
            "id": "data",
            "line": 608
          }
        ],
        "comments": [
          {
            "description": "Kick off a background refresh when a device is connected or disconnected.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Kick off a background refresh when a device is connected or disconnected.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Kick off a background refresh when a device is connected or disconnected.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      }
    ]
  }
]