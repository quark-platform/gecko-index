[
  {
    "type": "variable-declaration",
    "id": "QuickSuggestRemoteSettings",
    "line": 281
  },
  {
    "type": "class",
    "id": "SuggestionsMap",
    "line": 293,
    "methods": [
      {
        "type": "method",
        "id": "get",
        "line": 303,
        "params": [
          {
            "type": "params",
            "id": "keyword",
            "line": 303
          }
        ],
        "comments": [
          {
            "description": "Returns the list of suggestions for a keyword.",
            "tags": [
              {
                "tag": "param",
                "name": "keyword",
                "type": "string",
                "optional": false,
                "description": "The keyword.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {string} keyword",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "keyword",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *   The keyword.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The keyword.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "",
                "type": "Array",
                "optional": false,
                "description": "The array of suggestions for the keyword. If the keyword isn't in the map, the array will be empty.",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @returns {Array}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{Array}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *   The array of suggestions for the keyword. If the keyword isn't in the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The array of suggestions for the keyword. If the keyword isn't in the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *   map, the array will be empty.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "map, the array will be empty.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Returns the list of suggestions for a keyword.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Returns the list of suggestions for a keyword.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {string} keyword",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "keyword",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *   The keyword.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The keyword.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @returns {Array}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{Array}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *   The array of suggestions for the keyword. If the keyword isn't in the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The array of suggestions for the keyword. If the keyword isn't in the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *   map, the array will be empty.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "map, the array will be empty.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "add",
        "line": 330,
        "params": [
          {
            "type": "params",
            "id": "suggestions",
            "line": 331
          }
        ],
        "comments": [
          {
            "description": "Adds a list of suggestion objects to the results map. Each suggestion must have a property whose value is an array of keyword strings. The suggestion's keywords will be taken from this array either exactly as they are specified or by generating new keywords from them; see `mapKeyword`.",
            "tags": [
              {
                "tag": "param",
                "name": "suggestions",
                "type": "Array",
                "optional": false,
                "description": "Array of suggestion objects.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {Array} suggestions",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "suggestions",
                      "postName": "",
                      "type": "{Array}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *   Array of suggestion objects.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Array of suggestion objects.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options",
                "type": "object",
                "optional": false,
                "description": "Options object.",
                "problems": [],
                "source": [
                  {
                    "number": 9,
                    "source": "   * @param {object} options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": "",
                      "type": "{object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *   Options object.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Options object.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.keywordsProperty",
                "type": "string",
                "optional": false,
                "description": "The name of the keywords property in each suggestion.",
                "problems": [],
                "source": [
                  {
                    "number": 11,
                    "source": "   * @param {string} options.keywordsProperty",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.keywordsProperty",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *   The name of the keywords property in each suggestion.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The name of the keywords property in each suggestion.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.mapKeyword",
                "type": "Function",
                "optional": false,
                "description": "If null, the keywords for each suggestion will be taken from the keywords array exactly as they are specified. Otherwise, this function will be called for each string in the array, and it should return an array of strings. The suggestion's final list of keywords will be the union of all strings returned by this function. See also the `MAP_KEYWORD_*` consts.",
                "problems": [],
                "source": [
                  {
                    "number": 13,
                    "source": "   * @param {Function} options.mapKeyword",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.mapKeyword",
                      "postName": "",
                      "type": "{Function}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   *   If null, the keywords for each suggestion will be taken from the keywords",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "If null, the keywords for each suggestion will be taken from the keywords",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "   *   array exactly as they are specified. Otherwise, this function will be",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "array exactly as they are specified. Otherwise, this function will be",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   *   called for each string in the array, and it should return an array of",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "called for each string in the array, and it should return an array of",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "   *   strings. The suggestion's final list of keywords will be the union of all",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "strings. The suggestion's final list of keywords will be the union of all",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   *   strings returned by this function. See also the `MAP_KEYWORD_*` consts.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "strings returned by this function. See also the `MAP_KEYWORD_*` consts.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 19,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 20,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Adds a list of suggestion objects to the results map. Each suggestion must",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Adds a list of suggestion objects to the results map. Each suggestion must",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * have a property whose value is an array of keyword strings. The",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "have a property whose value is an array of keyword strings. The",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * suggestion's keywords will be taken from this array either exactly as they",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "suggestion's keywords will be taken from this array either exactly as they",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * are specified or by generating new keywords from them; see `mapKeyword`.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "are specified or by generating new keywords from them; see `mapKeyword`.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {Array} suggestions",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "suggestions",
                  "postName": "",
                  "type": "{Array}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *   Array of suggestion objects.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Array of suggestion objects.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * @param {object} options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": "",
                  "type": "{object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *   Options object.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Options object.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * @param {string} options.keywordsProperty",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.keywordsProperty",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *   The name of the keywords property in each suggestion.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The name of the keywords property in each suggestion.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   * @param {Function} options.mapKeyword",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.mapKeyword",
                  "postName": "",
                  "type": "{Function}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   *   If null, the keywords for each suggestion will be taken from the keywords",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If null, the keywords for each suggestion will be taken from the keywords",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   *   array exactly as they are specified. Otherwise, this function will be",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "array exactly as they are specified. Otherwise, this function will be",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   *   called for each string in the array, and it should return an array of",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "called for each string in the array, and it should return an array of",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   *   strings. The suggestion's final list of keywords will be the union of all",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "strings. The suggestion's final list of keywords will be the union of all",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   *   strings returned by this function. See also the `MAP_KEYWORD_*` consts.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "strings returned by this function. See also the `MAP_KEYWORD_*` consts.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "clear",
        "line": 399,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "MAP_KEYWORD_PREFIXES_STARTING_AT_FIRST_WORD",
        "line": 412,
        "params": [],
        "comments": [
          {
            "description": "",
            "tags": [
              {
                "tag": "returns",
                "name": "",
                "type": "Function",
                "optional": false,
                "description": "A `mapKeyword` function that maps a keyword to an array containing the keyword's first word plus every subsequent prefix of the keyword. The strings in `KEYWORD_PREFIXES_TO_TREAT_AS_SINGLE_WORDS` will modify this behavior: When a full keyword starts with one of the prefixes in that list, the generated prefixes will start at that prefix instead of the first word.",
                "problems": [],
                "source": [
                  {
                    "number": 2,
                    "source": "   * @returns {Function}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{Function}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 3,
                    "source": "   *   A `mapKeyword` function that maps a keyword to an array containing the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "A `mapKeyword` function that maps a keyword to an array containing the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 4,
                    "source": "   *   keyword's first word plus every subsequent prefix of the keyword. The",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "keyword's first word plus every subsequent prefix of the keyword. The",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *   strings in `KEYWORD_PREFIXES_TO_TREAT_AS_SINGLE_WORDS` will modify this",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "strings in `KEYWORD_PREFIXES_TO_TREAT_AS_SINGLE_WORDS` will modify this",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *   behavior: When a full keyword starts with one of the prefixes in that",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "behavior: When a full keyword starts with one of the prefixes in that",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *   list, the generated prefixes will start at that prefix instead of the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "list, the generated prefixes will start at that prefix instead of the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *   first word.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "first word.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * @returns {Function}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{Function}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *   A `mapKeyword` function that maps a keyword to an array containing the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A `mapKeyword` function that maps a keyword to an array containing the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *   keyword's first word plus every subsequent prefix of the keyword. The",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "keyword's first word plus every subsequent prefix of the keyword. The",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *   strings in `KEYWORD_PREFIXES_TO_TREAT_AS_SINGLE_WORDS` will modify this",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "strings in `KEYWORD_PREFIXES_TO_TREAT_AS_SINGLE_WORDS` will modify this",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *   behavior: When a full keyword starts with one of the prefixes in that",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "behavior: When a full keyword starts with one of the prefixes in that",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *   list, the generated prefixes will start at that prefix instead of the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "list, the generated prefixes will start at that prefix instead of the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *   first word.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "first word.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "get"
      }
    ]
  }
]