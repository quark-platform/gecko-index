[
  {
    "type": "class",
    "id": "FeatureCallout",
    "line": 23,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 39,
        "params": [],
        "comments": [
          {
            "description": "",
            "tags": [
              {
                "tag": "typedef",
                "name": "FeatureCalloutOptions",
                "type": "Object",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 2,
                    "source": "   * @typedef {Object} FeatureCalloutOptions",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@typedef",
                      "postTag": " ",
                      "name": "FeatureCalloutOptions",
                      "postName": "",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "win",
                "type": "Window",
                "optional": false,
                "description": "window in which messages will be rendered",
                "problems": [],
                "source": [
                  {
                    "number": 3,
                    "source": "   * @property {Window} win window in which messages will be rendered",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "win",
                      "postName": " ",
                      "type": "{Window}",
                      "postType": " ",
                      "description": "window in which messages will be rendered",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "prefName",
                "type": "String",
                "optional": false,
                "description": "name of the pref used to track progress through a given feature tour, e.g. \"browser.pdfjs.feature-tour\"",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @property {String} prefName name of the pref used to track progress through",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "prefName",
                      "postName": " ",
                      "type": "{String}",
                      "postType": " ",
                      "description": "name of the pref used to track progress through",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *   a given feature tour, e.g. \"browser.pdfjs.feature-tour\"",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "a given feature tour, e.g. \"browser.pdfjs.feature-tour\"",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "page",
                "type": "String",
                "optional": true,
                "description": "string to pass as the page when requesting messages from ASRouter and sending telemetry. for browser chrome, the string \"chrome\" is used",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @property {String} [page] string to pass as the page when requesting",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[page]",
                      "postName": " ",
                      "type": "{String}",
                      "postType": " ",
                      "description": "string to pass as the page when requesting",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *   messages from ASRouter and sending telemetry. for browser chrome, the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "messages from ASRouter and sending telemetry. for browser chrome, the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *   string \"chrome\" is used",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "string \"chrome\" is used",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "browser",
                "type": "MozBrowser",
                "optional": true,
                "description": "<browser> element responsible for the feature callout. for content pages, this is the browser element that the callout is being shown in. for chrome, this is the active browser",
                "problems": [],
                "source": [
                  {
                    "number": 9,
                    "source": "   * @property {MozBrowser} [browser] <browser> element responsible for the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[browser]",
                      "postName": " ",
                      "type": "{MozBrowser}",
                      "postType": " ",
                      "description": "<browser> element responsible for the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *   feature callout. for content pages, this is the browser element that the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "feature callout. for content pages, this is the browser element that the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *   callout is being shown in. for chrome, this is the active browser",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "callout is being shown in. for chrome, this is the active browser",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "theme",
                "type": "FeatureCalloutTheme",
                "optional": true,
                "description": "@see FeatureCallout.themePresets",
                "problems": [],
                "source": [
                  {
                    "number": 12,
                    "source": "   * @property {FeatureCalloutTheme} [theme] @see FeatureCallout.themePresets",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[theme]",
                      "postName": " ",
                      "type": "{FeatureCalloutTheme}",
                      "postType": " ",
                      "description": "@see FeatureCallout.themePresets",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * @typedef {Object} FeatureCalloutOptions",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@typedef",
                  "postTag": " ",
                  "name": "FeatureCalloutOptions",
                  "postName": "",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * @property {Window} win window in which messages will be rendered",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "win",
                  "postName": " ",
                  "type": "{Window}",
                  "postType": " ",
                  "description": "window in which messages will be rendered",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @property {String} prefName name of the pref used to track progress through",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "prefName",
                  "postName": " ",
                  "type": "{String}",
                  "postType": " ",
                  "description": "name of the pref used to track progress through",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *   a given feature tour, e.g. \"browser.pdfjs.feature-tour\"",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "a given feature tour, e.g. \"browser.pdfjs.feature-tour\"",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @property {String} [page] string to pass as the page when requesting",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[page]",
                  "postName": " ",
                  "type": "{String}",
                  "postType": " ",
                  "description": "string to pass as the page when requesting",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *   messages from ASRouter and sending telemetry. for browser chrome, the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "messages from ASRouter and sending telemetry. for browser chrome, the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *   string \"chrome\" is used",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "string \"chrome\" is used",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * @property {MozBrowser} [browser] <browser> element responsible for the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[browser]",
                  "postName": " ",
                  "type": "{MozBrowser}",
                  "postType": " ",
                  "description": "<browser> element responsible for the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *   feature callout. for content pages, this is the browser element that the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "feature callout. for content pages, this is the browser element that the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *   callout is being shown in. for chrome, this is the active browser",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "callout is being shown in. for chrome, this is the active browser",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   * @property {FeatureCalloutTheme} [theme] @see FeatureCallout.themePresets",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[theme]",
                  "postName": " ",
                  "type": "{FeatureCalloutTheme}",
                  "postType": " ",
                  "description": "@see FeatureCallout.themePresets",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "",
            "tags": [
              {
                "tag": "param",
                "name": "options",
                "type": "FeatureCalloutOptions",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 1,
                    "source": "* @param {FeatureCalloutOptions} options ",
                    "tokens": {
                      "start": "",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": " ",
                      "type": "{FeatureCalloutOptions}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 2,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "* @param {FeatureCalloutOptions} options ",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": " ",
                  "type": "{FeatureCalloutOptions}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "_loadPageEventManager",
        "line": 99,
        "params": [],
        "comments": [
          {
            "description": "Get the page event manager and instantiate it if necessary. Only used by _attachPageEventListeners, since we don't want to do this unnecessary work if a message with page event listeners hasn't loaded. Other consumers should use `this._pageEventManager?.property` instead.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Get the page event manager and instantiate it if necessary. Only used by",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Get the page event manager and instantiate it if necessary. Only used by",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * _attachPageEventListeners, since we don't want to do this unnecessary work",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "_attachPageEventListeners, since we don't want to do this unnecessary work",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * if a message with page event listeners hasn't loaded. Other consumers",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "if a message with page event listeners hasn't loaded. Other consumers",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * should use `this._pageEventManager?.property` instead.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "should use `this._pageEventManager?.property` instead.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "_addPositionListeners",
        "line": 106,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_removePositionListeners",
        "line": 117,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_handlePrefChange",
        "line": 128,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "handleEvent",
        "line": 171,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 171
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_addCalloutLinkElements",
        "line": 239,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_createContainer",
        "line": 270,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_positionCallout",
        "line": 314,
        "params": [],
        "comments": [
          {
            "description": "Set callout's position relative to parent element",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Set callout's position relative to parent element",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Set callout's position relative to parent element",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_setupWindowFunctions",
        "line": 671,
        "params": [],
        "comments": [
          {
            "description": "Expose top level functions expected by the aboutwelcome bundle.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "* Expose top level functions expected by the aboutwelcome bundle. ",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Expose top level functions expected by the aboutwelcome bundle. ",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_clearWindowFunctions",
        "line": 699,
        "params": [],
        "comments": [
          {
            "description": "Clean up the functions defined above.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "* Clean up the functions defined above. ",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Clean up the functions defined above. ",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "endTour",
        "line": 711,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_dismiss",
        "line": 746,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_addScriptsAndRender",
        "line": 755,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_observeRender",
        "line": 790,
        "params": [
          {
            "type": "params",
            "id": "container",
            "line": 790
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_loadConfig",
        "line": 802,
        "params": [],
        "comments": [
          {
            "description": "Request a message from ASRouter, targeting the `browser` and `page` values passed to the constructor. The message content is stored in this.config, which is returned by AWGetFeatureConfig. The aboutwelcome bundle will use that function to get the content. It will only be called when the bundle loads, so the bundle must be reloaded for a new message to be rendered.",
            "tags": [
              {
                "tag": "returns",
                "name": "true",
                "type": "Promise<boolean>",
                "optional": false,
                "description": "if a message is loaded, false if not.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @returns {Promise<boolean>} true if a message is loaded, false if not.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "true",
                      "postName": " ",
                      "type": "{Promise<boolean>}",
                      "postType": " ",
                      "description": "if a message is loaded, false if not.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Request a message from ASRouter, targeting the `browser` and `page` values",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Request a message from ASRouter, targeting the `browser` and `page` values",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * passed to the constructor. The message content is stored in this.config,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "passed to the constructor. The message content is stored in this.config,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * which is returned by AWGetFeatureConfig. The aboutwelcome bundle will use",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "which is returned by AWGetFeatureConfig. The aboutwelcome bundle will use",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * that function to get the content. It will only be called when the bundle",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "that function to get the content. It will only be called when the bundle",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * loads, so the bundle must be reloaded for a new message to be rendered.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "loads, so the bundle must be reloaded for a new message to be rendered.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @returns {Promise<boolean>} true if a message is loaded, false if not.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "true",
                  "postName": " ",
                  "type": "{Promise<boolean>}",
                  "postType": " ",
                  "description": "if a message is loaded, false if not.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_renderCallout",
        "line": 840,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_attachPageEventListeners",
        "line": 873,
        "params": [
          {
            "type": "params",
            "id": "listeners",
            "line": 873
          }
        ],
        "comments": [
          {
            "description": "For each member of the screen's page_event_listeners array, add a listener.",
            "tags": [
              {
                "tag": "param",
                "name": "listeners",
                "type": "Array<PageEventListener>",
                "optional": false,
                "description": "An array of listeners to set up",
                "problems": [],
                "source": [
                  {
                    "number": 3,
                    "source": "   * @param {Array<PageEventListener>} listeners An array of listeners to set up",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "listeners",
                      "postName": " ",
                      "type": "{Array<PageEventListener>}",
                      "postType": " ",
                      "description": "An array of listeners to set up",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 4,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "typedef",
                "name": "PageEventListener",
                "type": "Object",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @typedef {Object} PageEventListener",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@typedef",
                      "postTag": " ",
                      "name": "PageEventListener",
                      "postName": "",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "params",
                "type": "PageEventListenerParams",
                "optional": false,
                "description": "Event listener parameters",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @property {PageEventListenerParams} params Event listener parameters",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "params",
                      "postName": " ",
                      "type": "{PageEventListenerParams}",
                      "postType": " ",
                      "description": "Event listener parameters",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "action",
                "type": "PageEventListenerAction",
                "optional": false,
                "description": "Sent when the event fires",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @property {PageEventListenerAction} action Sent when the event fires",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "action",
                      "postName": " ",
                      "type": "{PageEventListenerAction}",
                      "postType": " ",
                      "description": "Sent when the event fires",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "typedef",
                "name": "PageEventListenerParams",
                "type": "Object",
                "optional": false,
                "description": "See PageEventManager.jsm",
                "problems": [],
                "source": [
                  {
                    "number": 9,
                    "source": "   * @typedef {Object} PageEventListenerParams See PageEventManager.jsm",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@typedef",
                      "postTag": " ",
                      "name": "PageEventListenerParams",
                      "postName": " ",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "See PageEventManager.jsm",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "type",
                "type": "String",
                "optional": false,
                "description": "Event type string e.g. `click`",
                "problems": [],
                "source": [
                  {
                    "number": 10,
                    "source": "   * @property {String} type Event type string e.g. `click`",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "type",
                      "postName": " ",
                      "type": "{String}",
                      "postType": " ",
                      "description": "Event type string e.g. `click`",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "selectors",
                "type": "String",
                "optional": false,
                "description": "Target selector, e.g. `tag.class, #id[attr]`",
                "problems": [],
                "source": [
                  {
                    "number": 11,
                    "source": "   * @property {String} selectors Target selector, e.g. `tag.class, #id[attr]`",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "selectors",
                      "postName": " ",
                      "type": "{String}",
                      "postType": " ",
                      "description": "Target selector, e.g. `tag.class, #id[attr]`",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "options",
                "type": "PageEventListenerOptions",
                "optional": true,
                "description": "addEventListener options",
                "problems": [],
                "source": [
                  {
                    "number": 12,
                    "source": "   * @property {PageEventListenerOptions} [options] addEventListener options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[options]",
                      "postName": " ",
                      "type": "{PageEventListenerOptions}",
                      "postType": " ",
                      "description": "addEventListener options",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "typedef",
                "name": "PageEventListenerOptions",
                "type": "Object",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 14,
                    "source": "   * @typedef {Object} PageEventListenerOptions",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@typedef",
                      "postTag": " ",
                      "name": "PageEventListenerOptions",
                      "postName": "",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "capture",
                "type": "Boolean",
                "optional": true,
                "description": "Use event capturing phase?",
                "problems": [],
                "source": [
                  {
                    "number": 15,
                    "source": "   * @property {Boolean} [capture] Use event capturing phase?",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[capture]",
                      "postName": " ",
                      "type": "{Boolean}",
                      "postType": " ",
                      "description": "Use event capturing phase?",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "once",
                "type": "Boolean",
                "optional": true,
                "description": "Remove listener after first event?",
                "problems": [],
                "source": [
                  {
                    "number": 16,
                    "source": "   * @property {Boolean} [once] Remove listener after first event?",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[once]",
                      "postName": " ",
                      "type": "{Boolean}",
                      "postType": " ",
                      "description": "Remove listener after first event?",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "preventDefault",
                "type": "Boolean",
                "optional": true,
                "description": "Prevent default action?",
                "problems": [],
                "source": [
                  {
                    "number": 17,
                    "source": "   * @property {Boolean} [preventDefault] Prevent default action?",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[preventDefault]",
                      "postName": " ",
                      "type": "{Boolean}",
                      "postType": " ",
                      "description": "Prevent default action?",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "typedef",
                "name": "PageEventListenerAction",
                "type": "Object",
                "optional": false,
                "description": "Action sent to AboutWelcomeParent",
                "problems": [],
                "source": [
                  {
                    "number": 19,
                    "source": "   * @typedef {Object} PageEventListenerAction Action sent to AboutWelcomeParent",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@typedef",
                      "postTag": " ",
                      "name": "PageEventListenerAction",
                      "postName": " ",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "Action sent to AboutWelcomeParent",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "type",
                "type": "String",
                "optional": true,
                "description": "Action type, e.g. `OPEN_URL`",
                "problems": [],
                "source": [
                  {
                    "number": 20,
                    "source": "   * @property {String} [type] Action type, e.g. `OPEN_URL`",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[type]",
                      "postName": " ",
                      "type": "{String}",
                      "postType": " ",
                      "description": "Action type, e.g. `OPEN_URL`",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "data",
                "type": "Object",
                "optional": true,
                "description": "Extra data, properties depend on action type",
                "problems": [],
                "source": [
                  {
                    "number": 21,
                    "source": "   * @property {Object} [data] Extra data, properties depend on action type",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[data]",
                      "postName": " ",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "Extra data, properties depend on action type",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "dismiss",
                "type": "Boolean",
                "optional": true,
                "description": "Dismiss screen after performing action?",
                "problems": [],
                "source": [
                  {
                    "number": 22,
                    "source": "   * @property {Boolean} [dismiss] Dismiss screen after performing action?",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[dismiss]",
                      "postName": " ",
                      "type": "{Boolean}",
                      "postType": " ",
                      "description": "Dismiss screen after performing action?",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 23,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 24,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * For each member of the screen's page_event_listeners array, add a listener.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "For each member of the screen's page_event_listeners array, add a listener.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * @param {Array<PageEventListener>} listeners An array of listeners to set up",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "listeners",
                  "postName": " ",
                  "type": "{Array<PageEventListener>}",
                  "postType": " ",
                  "description": "An array of listeners to set up",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @typedef {Object} PageEventListener",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@typedef",
                  "postTag": " ",
                  "name": "PageEventListener",
                  "postName": "",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @property {PageEventListenerParams} params Event listener parameters",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "params",
                  "postName": " ",
                  "type": "{PageEventListenerParams}",
                  "postType": " ",
                  "description": "Event listener parameters",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @property {PageEventListenerAction} action Sent when the event fires",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "action",
                  "postName": " ",
                  "type": "{PageEventListenerAction}",
                  "postType": " ",
                  "description": "Sent when the event fires",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * @typedef {Object} PageEventListenerParams See PageEventManager.jsm",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@typedef",
                  "postTag": " ",
                  "name": "PageEventListenerParams",
                  "postName": " ",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "See PageEventManager.jsm",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * @property {String} type Event type string e.g. `click`",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "type",
                  "postName": " ",
                  "type": "{String}",
                  "postType": " ",
                  "description": "Event type string e.g. `click`",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * @property {String} selectors Target selector, e.g. `tag.class, #id[attr]`",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "selectors",
                  "postName": " ",
                  "type": "{String}",
                  "postType": " ",
                  "description": "Target selector, e.g. `tag.class, #id[attr]`",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   * @property {PageEventListenerOptions} [options] addEventListener options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[options]",
                  "postName": " ",
                  "type": "{PageEventListenerOptions}",
                  "postType": " ",
                  "description": "addEventListener options",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   * @typedef {Object} PageEventListenerOptions",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@typedef",
                  "postTag": " ",
                  "name": "PageEventListenerOptions",
                  "postName": "",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   * @property {Boolean} [capture] Use event capturing phase?",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[capture]",
                  "postName": " ",
                  "type": "{Boolean}",
                  "postType": " ",
                  "description": "Use event capturing phase?",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   * @property {Boolean} [once] Remove listener after first event?",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[once]",
                  "postName": " ",
                  "type": "{Boolean}",
                  "postType": " ",
                  "description": "Remove listener after first event?",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   * @property {Boolean} [preventDefault] Prevent default action?",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[preventDefault]",
                  "postName": " ",
                  "type": "{Boolean}",
                  "postType": " ",
                  "description": "Prevent default action?",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   * @typedef {Object} PageEventListenerAction Action sent to AboutWelcomeParent",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@typedef",
                  "postTag": " ",
                  "name": "PageEventListenerAction",
                  "postName": " ",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "Action sent to AboutWelcomeParent",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   * @property {String} [type] Action type, e.g. `OPEN_URL`",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[type]",
                  "postName": " ",
                  "type": "{String}",
                  "postType": " ",
                  "description": "Action type, e.g. `OPEN_URL`",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "   * @property {Object} [data] Extra data, properties depend on action type",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[data]",
                  "postName": " ",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "Extra data, properties depend on action type",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 22,
                "source": "   * @property {Boolean} [dismiss] Dismiss screen after performing action?",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[dismiss]",
                  "postName": " ",
                  "type": "{Boolean}",
                  "postType": " ",
                  "description": "Dismiss screen after performing action?",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 23,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 24,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_handlePageEventAction",
        "line": 892,
        "params": [
          {
            "type": "params",
            "id": "action",
            "line": 892
          },
          {
            "type": "params",
            "id": "event",
            "line": 892
          }
        ],
        "comments": [
          {
            "description": "Perform an action in response to a page event.",
            "tags": [
              {
                "tag": "param",
                "name": "action",
                "type": "PageEventListenerAction",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 3,
                    "source": "   * @param {PageEventListenerAction} action",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "action",
                      "postName": "",
                      "type": "{PageEventListenerAction}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "event",
                "type": "Event",
                "optional": false,
                "description": "Triggering event",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {Event} event Triggering event",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "event",
                      "postName": " ",
                      "type": "{Event}",
                      "postType": " ",
                      "description": "Triggering event",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Perform an action in response to a page event.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Perform an action in response to a page event.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * @param {PageEventListenerAction} action",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "action",
                  "postName": "",
                  "type": "{PageEventListenerAction}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {Event} event Triggering event",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "event",
                  "postName": " ",
                  "type": "{Event}",
                  "postType": " ",
                  "description": "Triggering event",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_getUniqueElementIdentifier",
        "line": 924,
        "params": [
          {
            "type": "params",
            "id": "target",
            "line": 924
          }
        ],
        "comments": [
          {
            "description": "For a given element, calculate a unique string that identifies it.",
            "tags": [
              {
                "tag": "param",
                "name": "target",
                "type": "Element",
                "optional": false,
                "description": "Element to calculate the selector for",
                "problems": [],
                "source": [
                  {
                    "number": 3,
                    "source": "   * @param {Element} target Element to calculate the selector for",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "target",
                      "postName": " ",
                      "type": "{Element}",
                      "postType": " ",
                      "description": "Element to calculate the selector for",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "Computed",
                "type": "String",
                "optional": false,
                "description": "event target selector, e.g. `button#next`",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @returns {String} Computed event target selector, e.g. `button#next`",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "Computed",
                      "postName": " ",
                      "type": "{String}",
                      "postType": " ",
                      "description": "event target selector, e.g. `button#next`",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * For a given element, calculate a unique string that identifies it.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "For a given element, calculate a unique string that identifies it.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * @param {Element} target Element to calculate the selector for",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "target",
                  "postName": " ",
                  "type": "{Element}",
                  "postType": " ",
                  "description": "Element to calculate the selector for",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @returns {String} Computed event target selector, e.g. `button#next`",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "Computed",
                  "postName": " ",
                  "type": "{String}",
                  "postType": " ",
                  "description": "event target selector, e.g. `button#next`",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "showFeatureCallout",
        "line": 952,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_initTheme",
        "line": 1032,
        "params": [
          {
            "type": "params",
            "id": "theme",
            "line": 1032
          }
        ],
        "comments": [
          {
            "description": "",
            "tags": [
              {
                "tag": "typedef",
                "name": "FeatureCalloutTheme",
                "type": "Object",
                "optional": false,
                "description": "An object with a set of custom color schemes and/or a preset key. If both are provided, the preset will be applied first, then the custom themes will override the preset values.",
                "problems": [],
                "source": [
                  {
                    "number": 2,
                    "source": "   * @typedef {Object} FeatureCalloutTheme An object with a set of custom color",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@typedef",
                      "postTag": " ",
                      "name": "FeatureCalloutTheme",
                      "postName": " ",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "An object with a set of custom color",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 3,
                    "source": "   *   schemes and/or a preset key. If both are provided, the preset will be",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "schemes and/or a preset key. If both are provided, the preset will be",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 4,
                    "source": "   *   applied first, then the custom themes will override the preset values.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "applied first, then the custom themes will override the preset values.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "preset",
                "type": "String",
                "optional": true,
                "description": "Key of {@link FeatureCallout.themePresets}",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @property {String} [preset] Key of {@link FeatureCallout.themePresets}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[preset]",
                      "postName": " ",
                      "type": "{String}",
                      "postType": " ",
                      "description": "Key of {@link FeatureCallout.themePresets}",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "light",
                "type": "ColorScheme",
                "optional": true,
                "description": "Custom light scheme",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @property {ColorScheme} [light] Custom light scheme",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[light]",
                      "postName": " ",
                      "type": "{ColorScheme}",
                      "postType": " ",
                      "description": "Custom light scheme",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "dark",
                "type": "ColorScheme",
                "optional": true,
                "description": "Custom dark scheme",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @property {ColorScheme} [dark] Custom dark scheme",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[dark]",
                      "postName": " ",
                      "type": "{ColorScheme}",
                      "postType": " ",
                      "description": "Custom dark scheme",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "hcm",
                "type": "ColorScheme",
                "optional": true,
                "description": "Custom high contrast scheme",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @property {ColorScheme} [hcm] Custom high contrast scheme",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[hcm]",
                      "postName": " ",
                      "type": "{ColorScheme}",
                      "postType": " ",
                      "description": "Custom high contrast scheme",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "all",
                "type": "ColorScheme",
                "optional": true,
                "description": "Custom scheme that will be applied in all cases, but overridden by the other schemes if they are present. This is useful if the values are already controlled by the browser theme.",
                "problems": [],
                "source": [
                  {
                    "number": 9,
                    "source": "   * @property {ColorScheme} [all] Custom scheme that will be applied in all",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[all]",
                      "postName": " ",
                      "type": "{ColorScheme}",
                      "postType": " ",
                      "description": "Custom scheme that will be applied in all",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *   cases, but overridden by the other schemes if they are present. This is",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "cases, but overridden by the other schemes if they are present. This is",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *   useful if the values are already controlled by the browser theme.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "useful if the values are already controlled by the browser theme.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "property",
                "name": "simulateContent",
                "type": "Boolean",
                "optional": true,
                "description": "Set to true if the feature callout exists in the browser chrome but is meant to be displayed over the content area to appear as if it is part of the page. This will cause the styles to use a media query targeting the content instead of the chrome, so that if the browser theme doesn't match the content color scheme, the callout will correctly follow the content scheme. This is currently used for the feature callouts displayed over the PDF.js viewer.",
                "problems": [],
                "source": [
                  {
                    "number": 12,
                    "source": "   * @property {Boolean} [simulateContent] Set to true if the feature callout",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@property",
                      "postTag": " ",
                      "name": "[simulateContent]",
                      "postName": " ",
                      "type": "{Boolean}",
                      "postType": " ",
                      "description": "Set to true if the feature callout",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *   exists in the browser chrome but is meant to be displayed over the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "exists in the browser chrome but is meant to be displayed over the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   *   content area to appear as if it is part of the page. This will cause the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "content area to appear as if it is part of the page. This will cause the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "   *   styles to use a media query targeting the content instead of the chrome,",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "styles to use a media query targeting the content instead of the chrome,",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   *   so that if the browser theme doesn't match the content color scheme, the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "so that if the browser theme doesn't match the content color scheme, the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "   *   callout will correctly follow the content scheme. This is currently used",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "callout will correctly follow the content scheme. This is currently used",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   *   for the feature callouts displayed over the PDF.js viewer.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "for the feature callouts displayed over the PDF.js viewer.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 19,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 20,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * @typedef {Object} FeatureCalloutTheme An object with a set of custom color",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@typedef",
                  "postTag": " ",
                  "name": "FeatureCalloutTheme",
                  "postName": " ",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "An object with a set of custom color",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *   schemes and/or a preset key. If both are provided, the preset will be",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "schemes and/or a preset key. If both are provided, the preset will be",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *   applied first, then the custom themes will override the preset values.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "applied first, then the custom themes will override the preset values.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @property {String} [preset] Key of {@link FeatureCallout.themePresets}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[preset]",
                  "postName": " ",
                  "type": "{String}",
                  "postType": " ",
                  "description": "Key of {@link FeatureCallout.themePresets}",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @property {ColorScheme} [light] Custom light scheme",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[light]",
                  "postName": " ",
                  "type": "{ColorScheme}",
                  "postType": " ",
                  "description": "Custom light scheme",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @property {ColorScheme} [dark] Custom dark scheme",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[dark]",
                  "postName": " ",
                  "type": "{ColorScheme}",
                  "postType": " ",
                  "description": "Custom dark scheme",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @property {ColorScheme} [hcm] Custom high contrast scheme",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[hcm]",
                  "postName": " ",
                  "type": "{ColorScheme}",
                  "postType": " ",
                  "description": "Custom high contrast scheme",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * @property {ColorScheme} [all] Custom scheme that will be applied in all",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[all]",
                  "postName": " ",
                  "type": "{ColorScheme}",
                  "postType": " ",
                  "description": "Custom scheme that will be applied in all",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *   cases, but overridden by the other schemes if they are present. This is",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "cases, but overridden by the other schemes if they are present. This is",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *   useful if the values are already controlled by the browser theme.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "useful if the values are already controlled by the browser theme.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   * @property {Boolean} [simulateContent] Set to true if the feature callout",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@property",
                  "postTag": " ",
                  "name": "[simulateContent]",
                  "postName": " ",
                  "type": "{Boolean}",
                  "postType": " ",
                  "description": "Set to true if the feature callout",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *   exists in the browser chrome but is meant to be displayed over the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "exists in the browser chrome but is meant to be displayed over the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   *   content area to appear as if it is part of the page. This will cause the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "content area to appear as if it is part of the page. This will cause the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   *   styles to use a media query targeting the content instead of the chrome,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "styles to use a media query targeting the content instead of the chrome,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   *   so that if the browser theme doesn't match the content color scheme, the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "so that if the browser theme doesn't match the content color scheme, the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   *   callout will correctly follow the content scheme. This is currently used",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "callout will correctly follow the content scheme. This is currently used",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   *   for the feature callouts displayed over the PDF.js viewer.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "for the feature callouts displayed over the PDF.js viewer.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "",
            "tags": [
              {
                "tag": "typedef",
                "name": "ColorScheme",
                "type": "Object",
                "optional": false,
                "description": "An object with key-value pairs, with keys from {@link FeatureCallout.themePropNames}, mapped to CSS color values",
                "problems": [],
                "source": [
                  {
                    "number": 2,
                    "source": "   * @typedef {Object} ColorScheme An object with key-value pairs, with keys",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@typedef",
                      "postTag": " ",
                      "name": "ColorScheme",
                      "postName": " ",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "An object with key-value pairs, with keys",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 3,
                    "source": "   *   from {@link FeatureCallout.themePropNames}, mapped to CSS color values",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "from {@link FeatureCallout.themePropNames}, mapped to CSS color values",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 4,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * @typedef {Object} ColorScheme An object with key-value pairs, with keys",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@typedef",
                  "postTag": " ",
                  "name": "ColorScheme",
                  "postName": " ",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "An object with key-value pairs, with keys",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *   from {@link FeatureCallout.themePropNames}, mapped to CSS color values",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "from {@link FeatureCallout.themePropNames}, mapped to CSS color values",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "Combine the preset and custom themes into a single object and store it.",
            "tags": [
              {
                "tag": "param",
                "name": "theme",
                "type": "FeatureCalloutTheme",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 3,
                    "source": "   * @param {FeatureCalloutTheme} theme",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "theme",
                      "postName": "",
                      "type": "{FeatureCalloutTheme}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 4,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Combine the preset and custom themes into a single object and store it.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Combine the preset and custom themes into a single object and store it.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * @param {FeatureCalloutTheme} theme",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "theme",
                  "postName": "",
                  "type": "{FeatureCalloutTheme}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_applyTheme",
        "line": 1047,
        "params": [],
        "comments": [
          {
            "description": "Apply all the theme colors to the feature callout's root element as CSS custom properties in inline styles. These custom properties are consumed by _feature-callout-theme.scss, which is bundled with the other styles that are loaded by {@link FeatureCallout.prototype._addCalloutLinkElements}.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Apply all the theme colors to the feature callout's root element as CSS",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Apply all the theme colors to the feature callout's root element as CSS",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * custom properties in inline styles. These custom properties are consumed by",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "custom properties in inline styles. These custom properties are consumed by",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * _feature-callout-theme.scss, which is bundled with the other styles that",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "_feature-callout-theme.scss, which is bundled with the other styles that",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * are loaded by {@link FeatureCallout.prototype._addCalloutLinkElements}.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "are loaded by {@link FeatureCallout.prototype._addCalloutLinkElements}.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_setThemeVariable",
        "line": 1075,
        "params": [
          {
            "type": "params",
            "id": "name",
            "line": 1075
          },
          {
            "type": "params",
            "id": "value",
            "line": 1075
          }
        ],
        "comments": [
          {
            "description": "Set or remove a CSS custom property on the feature callout container",
            "tags": [
              {
                "tag": "param",
                "name": "name",
                "type": "String",
                "optional": false,
                "description": "Name of the CSS custom property",
                "problems": [],
                "source": [
                  {
                    "number": 3,
                    "source": "   * @param {String} name Name of the CSS custom property",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "name",
                      "postName": " ",
                      "type": "{String}",
                      "postType": " ",
                      "description": "Name of the CSS custom property",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "value",
                "type": "String|void",
                "optional": true,
                "description": "Value of the property, or omit to remove it",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {String|void} [value] Value of the property, or omit to remove it",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[value]",
                      "postName": " ",
                      "type": "{String|void}",
                      "postType": " ",
                      "description": "Value of the property, or omit to remove it",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Set or remove a CSS custom property on the feature callout container",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Set or remove a CSS custom property on the feature callout container",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * @param {String} name Name of the CSS custom property",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "name",
                  "postName": " ",
                  "type": "{String}",
                  "postType": " ",
                  "description": "Name of the CSS custom property",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {String|void} [value] Value of the property, or omit to remove it",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[value]",
                  "postName": " ",
                  "type": "{String|void}",
                  "postType": " ",
                  "description": "Value of the property, or omit to remove it",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      }
    ]
  }
]