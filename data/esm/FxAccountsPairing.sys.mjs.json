[
  {
    "type": "class",
    "id": "FxAccountsPairingFlow",
    "line": 171,
    "methods": [
      {
        "type": "method",
        "id": "get",
        "line": 172,
        "params": [
          {
            "type": "params",
            "id": "channelId",
            "line": 172
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "finalizeAll",
        "line": 176,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "start",
        "line": 182,
        "params": [
          {
            "type": "params",
            "id": "options",
            "line": 182
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "constructor",
        "line": 212,
        "params": [
          {
            "type": "params",
            "id": "options",
            "line": 212
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "_onFlowTimeout",
        "line": 228,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_closeChannel",
        "line": 234,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "finalize",
        "line": 241,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_setupListeners",
        "line": 248,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_onAbort",
        "line": 260,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_onError",
        "line": 265,
        "params": [
          {
            "type": "params",
            "id": "error",
            "line": 265
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_onPairingChannelError",
        "line": 270,
        "params": [
          {
            "type": "params",
            "id": "error",
            "line": 270
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onWebChannelMessage",
        "line": 276,
        "params": [
          {
            "type": "params",
            "id": "command",
            "line": 276
          }
        ],
        "comments": [
          {
            "description": "Any non-falsy returned value is sent back through WebChannel.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Any non-falsy returned value is sent back through WebChannel.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Any non-falsy returned value is sent back through WebChannel.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onPairingChannelMessage",
        "line": 353,
        "params": [
          {
            "type": "params",
            "id": "sender",
            "line": 353
          },
          {
            "type": "params",
            "id": "payload",
            "line": 353
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onPrefViewClosed",
        "line": 420,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_authorizeOAuthCode",
        "line": 445,
        "params": [
          {
            "type": "params",
            "id": "options",
            "line": 445
          }
        ],
        "comments": [
          {
            "description": "Grant an OAuth authorization code for the connecting client.",
            "tags": [
              {
                "tag": "param",
                "name": "options",
                "type": "Object",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {Object} options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": "",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.client_id",
                "type": "",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param options.client_id",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.client_id",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.state",
                "type": "",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param options.state",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.state",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.scope",
                "type": "",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param options.scope",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.scope",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.access_type",
                "type": "",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @param options.access_type",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.access_type",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.code_challenge_method",
                "type": "",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 9,
                    "source": "   * @param options.code_challenge_method",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.code_challenge_method",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.code_challenge",
                "type": "",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 10,
                    "source": "   * @param options.code_challenge",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.code_challenge",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.keys_jwe",
                "type": "",
                "optional": true,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 11,
                    "source": "   * @param [options.keys_jwe]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options.keys_jwe]",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "Object",
                "type": "Promise<Object>",
                "optional": false,
                "description": "containing \"code\" and \"state\" properties.",
                "problems": [],
                "source": [
                  {
                    "number": 12,
                    "source": "   * @returns {Promise<Object>} Object containing \"code\" and \"state\" properties.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "Object",
                      "postName": " ",
                      "type": "{Promise<Object>}",
                      "postType": " ",
                      "description": "containing \"code\" and \"state\" properties.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Grant an OAuth authorization code for the connecting client.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Grant an OAuth authorization code for the connecting client.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {Object} options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": "",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param options.client_id",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.client_id",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param options.state",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.state",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param options.scope",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.scope",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @param options.access_type",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.access_type",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * @param options.code_challenge_method",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.code_challenge_method",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * @param options.code_challenge",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.code_challenge",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * @param [options.keys_jwe]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options.keys_jwe]",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   * @returns {Promise<Object>} Object containing \"code\" and \"state\" properties.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "Object",
                  "postName": " ",
                  "type": "{Promise<Object>}",
                  "postType": " ",
                  "description": "containing \"code\" and \"state\" properties.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_createKeysJWE",
        "line": 490,
        "params": [
          {
            "type": "params",
            "id": "sessionToken",
            "line": 490
          },
          {
            "type": "params",
            "id": "clientId",
            "line": 490
          },
          {
            "type": "params",
            "id": "scopes",
            "line": 490
          },
          {
            "type": "params",
            "id": "jwk",
            "line": 490
          }
        ],
        "comments": [
          {
            "description": "Create a JWE to deliver keys to another client via the OAuth scoped-keys flow. This method is used to transfer key material to another client, by providing an appropriately-encrypted value for the `keys_jwe` OAuth response parameter. Since we're transferring keys from one client to another, two things must be true: * This client must actually have the key. * The other client must be allowed to request that key.",
            "tags": [
              {
                "tag": "param",
                "name": "sessionToken",
                "type": "String",
                "optional": false,
                "description": "the sessionToken to use when fetching key metadata",
                "problems": [],
                "source": [
                  {
                    "number": 12,
                    "source": "   * @param {String} sessionToken the sessionToken to use when fetching key metadata",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "sessionToken",
                      "postName": " ",
                      "type": "{String}",
                      "postType": " ",
                      "description": "the sessionToken to use when fetching key metadata",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "clientId",
                "type": "String",
                "optional": false,
                "description": "the client requesting access to our keys",
                "problems": [],
                "source": [
                  {
                    "number": 13,
                    "source": "   * @param {String} clientId the client requesting access to our keys",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "clientId",
                      "postName": " ",
                      "type": "{String}",
                      "postType": " ",
                      "description": "the client requesting access to our keys",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "scopes",
                "type": "String",
                "optional": false,
                "description": "Space separated requested scopes being requested",
                "problems": [],
                "source": [
                  {
                    "number": 14,
                    "source": "   * @param {String} scopes Space separated requested scopes being requested",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "scopes",
                      "postName": " ",
                      "type": "{String}",
                      "postType": " ",
                      "description": "Space separated requested scopes being requested",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "jwk",
                "type": "Object",
                "optional": false,
                "description": "Ephemeral JWK provided by the client for secure key transfer",
                "problems": [],
                "source": [
                  {
                    "number": 15,
                    "source": "   * @param {Object} jwk Ephemeral JWK provided by the client for secure key transfer",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "jwk",
                      "postName": " ",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "Ephemeral JWK provided by the client for secure key transfer",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Create a JWE to deliver keys to another client via the OAuth scoped-keys flow.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Create a JWE to deliver keys to another client via the OAuth scoped-keys flow.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * This method is used to transfer key material to another client, by providing",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "This method is used to transfer key material to another client, by providing",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * an appropriately-encrypted value for the `keys_jwe` OAuth response parameter.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "an appropriately-encrypted value for the `keys_jwe` OAuth response parameter.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * Since we're transferring keys from one client to another, two things must be",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Since we're transferring keys from one client to another, two things must be",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * true:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "true:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *   * This client must actually have the key.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "* This client must actually have the key.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *   * The other client must be allowed to request that key.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "* The other client must be allowed to request that key.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   * @param {String} sessionToken the sessionToken to use when fetching key metadata",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "sessionToken",
                  "postName": " ",
                  "type": "{String}",
                  "postType": " ",
                  "description": "the sessionToken to use when fetching key metadata",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   * @param {String} clientId the client requesting access to our keys",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "clientId",
                  "postName": " ",
                  "type": "{String}",
                  "postType": " ",
                  "description": "the client requesting access to our keys",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   * @param {String} scopes Space separated requested scopes being requested",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "scopes",
                  "postName": " ",
                  "type": "{String}",
                  "postType": " ",
                  "description": "Space separated requested scopes being requested",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   * @param {Object} jwk Ephemeral JWK provided by the client for secure key transfer",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "jwk",
                  "postName": " ",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "Ephemeral JWK provided by the client for secure key transfer",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      }
    ],
    "properties": []
  }
]