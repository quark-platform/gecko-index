[
  {
    "type": "class",
    "id": "NetErrorChild",
    "line": 14,
    "methods": [
      {
        "type": "method",
        "id": "actorCreated",
        "line": 15,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getFailedCertChain",
        "line": 40,
        "params": [
          {
            "type": "params",
            "id": "docShell",
            "line": 40
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "handleEvent",
        "line": 49,
        "params": [
          {
            "type": "params",
            "id": "aEvent",
            "line": 49
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMGetInnerMostURI",
        "line": 68,
        "params": [
          {
            "type": "params",
            "id": "uriString",
            "line": 68
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMGetAppBuildID",
        "line": 77,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMAddToHistogram",
        "line": 81,
        "params": [
          {
            "type": "params",
            "id": "histID",
            "line": 81
          },
          {
            "type": "params",
            "id": "bin",
            "line": 81
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMRecordTelemetryEvent",
        "line": 85,
        "params": [
          {
            "type": "params",
            "id": "category",
            "line": 85
          },
          {
            "type": "params",
            "id": "event",
            "line": 85
          },
          {
            "type": "params",
            "id": "object",
            "line": 85
          },
          {
            "type": "params",
            "id": "value",
            "line": 85
          },
          {
            "type": "params",
            "id": "extra",
            "line": 85
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMCheckAlternateHostAvailable",
        "line": 89,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMGetHttpResponseHeader",
        "line": 146,
        "params": [
          {
            "type": "params",
            "id": "responseHeader",
            "line": 146
          }
        ],
        "comments": [
          {
            "description": "Get the header from the http response of the failed channel. This function",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Get the header from the http response of the failed channel. This function",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Get the header from the http response of the failed channel. This function",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "is used in the 'about:neterror' page.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " is used in the 'about:neterror' page.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "is used in the 'about:neterror' page.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMIsTRROnlyFailure",
        "line": 164,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMIsFirefox",
        "line": 175,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_getTRRSkipReason",
        "line": 179,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMIsNativeFallbackFailure",
        "line": 186,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMGetTRRSkipReason",
        "line": 220,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMGetTRRDomain",
        "line": 225,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMIsSiteSpecificTRRError",
        "line": 229,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMSetTRRDisabledLoadFlags",
        "line": 240,
        "params": [],
        "kind": "method"
      }
    ]
  }
]