[
  {
    "type": "class",
    "id": "UrlbarView",
    "line": 64,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 72,
        "params": [
          {
            "type": "params",
            "id": "input",
            "line": 72
          }
        ],
        "comments": [
          {
            "description": "",
            "tags": [
              {
                "tag": "param",
                "name": "input",
                "type": "UrlbarInput",
                "optional": false,
                "description": "The UrlbarInput instance belonging to this UrlbarView instance.",
                "problems": [],
                "source": [
                  {
                    "number": 2,
                    "source": "   * @param {UrlbarInput} input",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "input",
                      "postName": "",
                      "type": "{UrlbarInput}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 3,
                    "source": "   *   The UrlbarInput instance belonging to this UrlbarView instance.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The UrlbarInput instance belonging to this UrlbarView instance.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 4,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * @param {UrlbarInput} input",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "input",
                  "postName": "",
                  "type": "{UrlbarInput}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *   The UrlbarInput instance belonging to this UrlbarView instance.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The UrlbarInput instance belonging to this UrlbarView instance.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "oneOffSearchButtons",
        "line": 117,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "isOpen",
        "line": 133,
        "params": [],
        "comments": [
          {
            "description": "Whether the panel is open.",
            "tags": [
              {
                "tag": "returns",
                "name": "",
                "type": "boolean",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @returns {boolean}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Whether the panel is open.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Whether the panel is open.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @returns {boolean}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "allowEmptySelection",
        "line": 137,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "selectedRowIndex",
        "line": 142,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "selectedRowIndex",
        "line": 156,
        "params": [
          {
            "type": "params",
            "id": "val",
            "line": 156
          }
        ],
        "kind": "set"
      },
      {
        "type": "method",
        "id": "selectedElementIndex",
        "line": 186,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "selectedResult",
        "line": 198,
        "params": [],
        "comments": [
          {
            "description": "",
            "tags": [
              {
                "tag": "returns",
                "name": "",
                "type": "UrlbarResult",
                "optional": false,
                "description": "The currently selected result.",
                "problems": [],
                "source": [
                  {
                    "number": 2,
                    "source": "   * @returns {UrlbarResult}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{UrlbarResult}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 3,
                    "source": "   *   The currently selected result.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The currently selected result.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 4,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * @returns {UrlbarResult}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{UrlbarResult}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *   The currently selected result.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The currently selected result.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "selectedElement",
        "line": 210,
        "params": [],
        "comments": [
          {
            "description": "",
            "tags": [
              {
                "tag": "returns",
                "name": "",
                "type": "Element",
                "optional": false,
                "description": "The currently selected element.",
                "problems": [],
                "source": [
                  {
                    "number": 2,
                    "source": "   * @returns {Element}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{Element}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 3,
                    "source": "   *   The currently selected element.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The currently selected element.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 4,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * @returns {Element}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{Element}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *   The currently selected element.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The currently selected element.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "shouldSpaceActivateSelectedElement",
        "line": 223,
        "params": [],
        "comments": [
          {
            "description": "",
            "tags": [
              {
                "tag": "returns",
                "name": "",
                "type": "boolean",
                "optional": false,
                "description": "Whether the SPACE key should activate the selected element (if any) instead of adding to the input value.",
                "problems": [],
                "source": [
                  {
                    "number": 2,
                    "source": "   * @returns {boolean}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 3,
                    "source": "   *   Whether the SPACE key should activate the selected element (if any)",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Whether the SPACE key should activate the selected element (if any)",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 4,
                    "source": "   *   instead of adding to the input value.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "instead of adding to the input value.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * @returns {boolean}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *   Whether the SPACE key should activate the selected element (if any)",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Whether the SPACE key should activate the selected element (if any)",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *   instead of adding to the input value.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "instead of adding to the input value.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "clearSelection",
        "line": 240,
        "params": [],
        "comments": [
          {
            "description": "Clears selection, regardless of view status.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Clears selection, regardless of view status.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Clears selection, regardless of view status.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "visibleRowCount",
        "line": 250,
        "params": [],
        "comments": [
          {
            "description": "",
            "tags": [
              {
                "tag": "returns",
                "name": "",
                "type": "number",
                "optional": false,
                "description": "The number of visible results in the view.  Note that this may be larger than the number of results in the current query context since the view may be showing stale results.",
                "problems": [],
                "source": [
                  {
                    "number": 2,
                    "source": "   * @returns {number}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{number}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 3,
                    "source": "   *   The number of visible results in the view.  Note that this may be larger",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The number of visible results in the view.  Note that this may be larger",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 4,
                    "source": "   *   than the number of results in the current query context since the view",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "than the number of results in the current query context since the view",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *   may be showing stale results.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "may be showing stale results.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * @returns {number}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{number}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *   The number of visible results in the view.  Note that this may be larger",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The number of visible results in the view.  Note that this may be larger",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *   than the number of results in the current query context since the view",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "than the number of results in the current query context since the view",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *   may be showing stale results.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "may be showing stale results.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "getResultFromElement",
        "line": 267,
        "params": [
          {
            "type": "params",
            "id": "element",
            "line": 267
          }
        ],
        "comments": [
          {
            "description": "Returns the result of the row containing the given element, or the result of the element if it itself is a row.",
            "tags": [
              {
                "tag": "param",
                "name": "element",
                "type": "Element",
                "optional": false,
                "description": "An element in the view.",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {Element} element",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "element",
                      "postName": "",
                      "type": "{Element}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *   An element in the view.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "An element in the view.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "",
                "type": "UrlbarResult",
                "optional": false,
                "description": "The result of the element's row.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @returns {UrlbarResult}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{UrlbarResult}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *   The result of the element's row.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The result of the element's row.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Returns the result of the row containing the given element, or the result",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Returns the result of the row containing the given element, or the result",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * of the element if it itself is a row.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "of the element if it itself is a row.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {Element} element",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "element",
                  "postName": "",
                  "type": "{Element}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *   An element in the view.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An element in the view.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @returns {UrlbarResult}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{UrlbarResult}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *   The result of the element's row.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The result of the element's row.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getResultAtIndex",
        "line": 280,
        "params": [
          {
            "type": "params",
            "id": "index",
            "line": 280
          }
        ],
        "comments": [
          {
            "description": "",
            "tags": [
              {
                "tag": "param",
                "name": "index",
                "type": "number",
                "optional": false,
                "description": "The index from which to fetch the result.",
                "problems": [],
                "source": [
                  {
                    "number": 2,
                    "source": "   * @param {number} index",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "index",
                      "postName": "",
                      "type": "{number}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 3,
                    "source": "   *   The index from which to fetch the result.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The index from which to fetch the result.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "",
                "type": "UrlbarResult",
                "optional": false,
                "description": "The result at `index`. Null if the view is closed or if there are no results.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @returns {UrlbarResult}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{UrlbarResult}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *   The result at `index`. Null if the view is closed or if there are no",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The result at `index`. Null if the view is closed or if there are no",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *   results.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "results.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * @param {number} index",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "index",
                  "postName": "",
                  "type": "{number}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *   The index from which to fetch the result.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The index from which to fetch the result.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @returns {UrlbarResult}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{UrlbarResult}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *   The result at `index`. Null if the view is closed or if there are no",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The result at `index`. Null if the view is closed or if there are no",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *   results.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "results.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "resultIsSelected",
        "line": 296,
        "params": [
          {
            "type": "params",
            "id": "result",
            "line": 296
          }
        ],
        "comments": [
          {
            "description": "",
            "tags": [
              {
                "tag": "param",
                "name": "result",
                "type": "UrlbarResult",
                "optional": false,
                "description": "A result.",
                "problems": [],
                "source": [
                  {
                    "number": 2,
                    "source": "   * @param {UrlbarResult} result A result.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "result",
                      "postName": " ",
                      "type": "{UrlbarResult}",
                      "postType": " ",
                      "description": "A result.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "True",
                "type": "boolean",
                "optional": false,
                "description": "if the given result is selected.",
                "problems": [],
                "source": [
                  {
                    "number": 3,
                    "source": "   * @returns {boolean} True if the given result is selected.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "True",
                      "postName": " ",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "if the given result is selected.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 4,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * @param {UrlbarResult} result A result.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "result",
                  "postName": " ",
                  "type": "{UrlbarResult}",
                  "postType": " ",
                  "description": "A result.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * @returns {boolean} True if the given result is selected.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "True",
                  "postName": " ",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "if the given result is selected.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "selectBy",
        "line": 316,
        "params": [
          {
            "type": "params",
            "id": "amount",
            "line": 316
          },
          {
            "type": "params",
            "id": "param1",
            "line": 316
          }
        ],
        "comments": [
          {
            "description": "Moves the view selection forward or backward.",
            "tags": [
              {
                "tag": "param",
                "name": "amount",
                "type": "number",
                "optional": false,
                "description": "The number of steps to move.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {number} amount",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "amount",
                      "postName": "",
                      "type": "{number}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *   The number of steps to move.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The number of steps to move.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options",
                "type": "object",
                "optional": false,
                "description": "Options object",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {object} options Options object",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": " ",
                      "type": "{object}",
                      "postType": " ",
                      "description": "Options object",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.reverse",
                "type": "boolean",
                "optional": true,
                "description": "Set to true to select the previous item. By default the next item will be selected.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {boolean} [options.reverse]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options.reverse]",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *   Set to true to select the previous item. By default the next item",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Set to true to select the previous item. By default the next item",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *   will be selected.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "will be selected.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.userPressedTab",
                "type": "boolean",
                "optional": true,
                "description": "Set to true if the user pressed Tab to select a result. Default false.",
                "problems": [],
                "source": [
                  {
                    "number": 10,
                    "source": "   * @param {boolean} [options.userPressedTab]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options.userPressedTab]",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *   Set to true if the user pressed Tab to select a result. Default false.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Set to true if the user pressed Tab to select a result. Default false.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Moves the view selection forward or backward.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Moves the view selection forward or backward.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {number} amount",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "amount",
                  "postName": "",
                  "type": "{number}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *   The number of steps to move.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The number of steps to move.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {object} options Options object",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": " ",
                  "type": "{object}",
                  "postType": " ",
                  "description": "Options object",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {boolean} [options.reverse]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options.reverse]",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *   Set to true to select the previous item. By default the next item",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Set to true to select the previous item. By default the next item",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *   will be selected.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "will be selected.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * @param {boolean} [options.userPressedTab]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options.userPressedTab]",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *   Set to true if the user pressed Tab to select a result. Default false.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Set to true if the user pressed Tab to select a result. Default false.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "acknowledgeFeedback",
        "line": 423,
        "params": [
          {
            "type": "params",
            "id": "result",
            "line": 423
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "removeAccessibleFocus",
        "line": 489,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "clear",
        "line": 493,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "close",
        "line": 509,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 509
          }
        ],
        "comments": [
          {
            "description": "Closes the view, cancelling the query if necessary.",
            "tags": [
              {
                "tag": "param",
                "name": "options",
                "type": "object",
                "optional": false,
                "description": "Options object",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {object} options Options object",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": " ",
                      "type": "{object}",
                      "postType": " ",
                      "description": "Options object",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.elementPicked",
                "type": "boolean",
                "optional": true,
                "description": "True if the view is being closed because a result was picked.",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {boolean} [options.elementPicked]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options.elementPicked]",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *   True if the view is being closed because a result was picked.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "True if the view is being closed because a result was picked.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.showFocusBorder",
                "type": "boolean",
                "optional": true,
                "description": "True if the Urlbar focus border should be shown after the view is closed.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {boolean} [options.showFocusBorder]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options.showFocusBorder]",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *   True if the Urlbar focus border should be shown after the view is closed.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "True if the Urlbar focus border should be shown after the view is closed.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Closes the view, cancelling the query if necessary.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Closes the view, cancelling the query if necessary.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {object} options Options object",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": " ",
                  "type": "{object}",
                  "postType": " ",
                  "description": "Options object",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {boolean} [options.elementPicked]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options.elementPicked]",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *   True if the view is being closed because a result was picked.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "True if the view is being closed because a result was picked.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {boolean} [options.showFocusBorder]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options.showFocusBorder]",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *   True if the Urlbar focus border should be shown after the view is closed.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "True if the Urlbar focus border should be shown after the view is closed.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "autoOpen",
        "line": 580,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 580
          }
        ],
        "comments": [
          {
            "description": "This can be used to open the view automatically as a consequence of specific user actions. For Top Sites searches (without a search string) the view is opened only for mouse or keyboard interactions. If the user abandoned a search (there is a search string) the view is reopened, and we try to use cached results to reduce flickering, then a new query is started to refresh results.",
            "tags": [
              {
                "tag": "param",
                "name": "options",
                "type": "object",
                "optional": false,
                "description": "Options object",
                "problems": [],
                "source": [
                  {
                    "number": 9,
                    "source": "   * @param {object} options Options object",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": " ",
                      "type": "{object}",
                      "postType": " ",
                      "description": "Options object",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.event",
                "type": "Event",
                "optional": false,
                "description": "The event associated with the call to autoOpen.",
                "problems": [],
                "source": [
                  {
                    "number": 10,
                    "source": "   * @param {Event} options.event The event associated with the call to autoOpen.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.event",
                      "postName": " ",
                      "type": "{Event}",
                      "postType": " ",
                      "description": "The event associated with the call to autoOpen.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.suppressFocusBorder",
                "type": "boolean",
                "optional": true,
                "description": "If true, we hide the focus border when the panel is opened. This is true by default to avoid flashing the border when the unfocused address bar is clicked.",
                "problems": [],
                "source": [
                  {
                    "number": 11,
                    "source": "   * @param {boolean} [options.suppressFocusBorder] If true, we hide the focus border",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options.suppressFocusBorder]",
                      "postName": " ",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "If true, we hide the focus border",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *        when the panel is opened. This is true by default to avoid flashing",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "when the panel is opened. This is true by default to avoid flashing",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *        the border when the unfocused address bar is clicked.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "the border when the unfocused address bar is clicked.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "Whether",
                "type": "boolean",
                "optional": false,
                "description": "the view was opened.",
                "problems": [],
                "source": [
                  {
                    "number": 14,
                    "source": "   * @returns {boolean} Whether the view was opened.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "Whether",
                      "postName": " ",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "the view was opened.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * This can be used to open the view automatically as a consequence of",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "This can be used to open the view automatically as a consequence of",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * specific user actions. For Top Sites searches (without a search string)",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "specific user actions. For Top Sites searches (without a search string)",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * the view is opened only for mouse or keyboard interactions.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "the view is opened only for mouse or keyboard interactions.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * If the user abandoned a search (there is a search string) the view is",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If the user abandoned a search (there is a search string) the view is",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * reopened, and we try to use cached results to reduce flickering, then a new",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "reopened, and we try to use cached results to reduce flickering, then a new",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * query is started to refresh results.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "query is started to refresh results.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * @param {object} options Options object",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": " ",
                  "type": "{object}",
                  "postType": " ",
                  "description": "Options object",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * @param {Event} options.event The event associated with the call to autoOpen.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.event",
                  "postName": " ",
                  "type": "{Event}",
                  "postType": " ",
                  "description": "The event associated with the call to autoOpen.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * @param {boolean} [options.suppressFocusBorder] If true, we hide the focus border",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options.suppressFocusBorder]",
                  "postName": " ",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "If true, we hide the focus border",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *        when the panel is opened. This is true by default to avoid flashing",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "when the panel is opened. This is true by default to avoid flashing",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *        the border when the unfocused address bar is clicked.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "the border when the unfocused address bar is clicked.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   * @returns {boolean} Whether the view was opened.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "Whether",
                  "postName": " ",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "the view was opened.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onQueryStarted",
        "line": 673,
        "params": [
          {
            "type": "params",
            "id": "queryContext",
            "line": 673
          }
        ],
        "comments": [
          {
            "description": "UrlbarController listener methods.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " UrlbarController listener methods.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "UrlbarController listener methods.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onQueryCancelled",
        "line": 690,
        "params": [
          {
            "type": "params",
            "id": "queryContext",
            "line": 690
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onQueryFinished",
        "line": 695,
        "params": [
          {
            "type": "params",
            "id": "queryContext",
            "line": 695
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onQueryResults",
        "line": 735,
        "params": [
          {
            "type": "params",
            "id": "queryContext",
            "line": 735
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onQueryResultRemoved",
        "line": 853,
        "params": [
          {
            "type": "params",
            "id": "index",
            "line": 853
          }
        ],
        "comments": [
          {
            "description": "Handles removing a result from the view when it is removed from the query, and attempts to select the new result on the same row. This assumes that the result rows are in index order.",
            "tags": [
              {
                "tag": "param",
                "name": "index",
                "type": "number",
                "optional": false,
                "description": "The index of the result that has been removed.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {number} index The index of the result that has been removed.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "index",
                      "postName": " ",
                      "type": "{number}",
                      "postType": " ",
                      "description": "The index of the result that has been removed.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Handles removing a result from the view when it is removed from the query,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Handles removing a result from the view when it is removed from the query,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * and attempts to select the new result on the same row.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "and attempts to select the new result on the same row.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * This assumes that the result rows are in index order.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "This assumes that the result rows are in index order.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {number} index The index of the result that has been removed.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "index",
                  "postName": " ",
                  "type": "{number}",
                  "postType": " ",
                  "description": "The index of the result that has been removed.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "openResultMenu",
        "line": 880,
        "params": [
          {
            "type": "params",
            "id": "result",
            "line": 880
          },
          {
            "type": "params",
            "id": "anchor",
            "line": 880
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "invalidateResultMenuCommands",
        "line": 917,
        "params": [],
        "comments": [
          {
            "description": "Clears the result menu commands cache, removing the cached commands for all results. This is useful when the commands for one or more results change while the results remain in the view.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Clears the result menu commands cache, removing the cached commands for all",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Clears the result menu commands cache, removing the cached commands for all",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * results. This is useful when the commands for one or more results change",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "results. This is useful when the commands for one or more results change",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * while the results remain in the view.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "while the results remain in the view.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "handleEvent",
        "line": 927,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 927
          }
        ],
        "comments": [
          {
            "description": "Passes DOM events for the view to the on_<event type> methods.",
            "tags": [
              {
                "tag": "param",
                "name": "event",
                "type": "Event",
                "optional": false,
                "description": "DOM event from the <view>.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {Event} event",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "event",
                      "postName": "",
                      "type": "{Event}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *   DOM event from the <view>.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "DOM event from the <view>.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Passes DOM events for the view to the on_<event type> methods.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Passes DOM events for the view to the on_<event type> methods.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {Event} event",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "event",
                  "postName": "",
                  "type": "{Event}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *   DOM event from the <view>.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "DOM event from the <view>.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "addDynamicViewTemplate",
        "line": 1003,
        "params": [
          {
            "type": "params",
            "id": "name",
            "line": 1003
          },
          {
            "type": "params",
            "id": "viewTemplate",
            "line": 1003
          }
        ],
        "comments": [
          {
            "description": "Registers the view template for a dynamic result type.  A view template is a plain object that describes the DOM subtree for a dynamic result type. When a dynamic result is shown in the urlbar view, its type's view template is used to construct the part of the view that represents the result. The specified view template will be available to the urlbars in all current and future browser windows until it is unregistered.  A given dynamic result type has at most one view template.  If this method is called for a dynamic result type more than once, the view template in the last call overrides those in previous calls.",
            "tags": [
              {
                "tag": "param",
                "name": "name",
                "type": "string",
                "optional": false,
                "description": "The view template will be registered for the dynamic result type with this name.",
                "problems": [],
                "source": [
                  {
                    "number": 13,
                    "source": "   * @param {string} name",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "name",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   *   The view template will be registered for the dynamic result type with",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The view template will be registered for the dynamic result type with",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "   *   this name.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "this name.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "viewTemplate",
                "type": "object",
                "optional": false,
                "description": "This object describes the DOM subtree for the given dynamic result type. It should be a tree-like nested structure with each object in the nesting representing a DOM element to be created.  This tree-like structure is achieved using the `children` property described below.  Each object in the structure may include the following properties: {string} name The name of the object.  It is required for all objects in the structure except the root object and serves two important functions: (1) The element created for the object will automatically have a class named `urlbarView-dynamic-${dynamicType}-${name}`, where `dynamicType` is the name of the dynamic result type.  The element will also automatically have an attribute \"name\" whose value is this name.  The class and attribute allow the element to be styled in CSS. (2) The name is used when updating the view.  See UrlbarProvider.getViewUpdate(). Names must be unique within a view template, but they don't need to be globally unique.  i.e., two different view templates can use the same names, and other DOM elements can use the same names in their IDs and classes.  The name also suffixes the dynamic element's ID: an element with name `data` will get the ID `urlbarView-row-{unique number}-data`. If there is no name provided for the root element, the root element will not get an ID. {string} tag The tag name of the object.  It is required for all objects in the structure except the root object and declares the kind of element that will be created for the object: span, div, img, etc. {object} [attributes] An optional mapping from attribute names to values.  For each name-value pair, an attribute is added to the element created for the object. The `id` attribute is reserved and cannot be set by the provider. Element IDs are passed back to the provider in getViewUpdate if they are needed. {array} [children] An optional list of children.  Each item in the array must be an object as described here.  For each item, a child element as described by the item is created and added to the element created for the parent object. {array} [classList] An optional list of classes.  Each class will be added to the element created for the object by calling element.classList.add(). {boolean} [overflowable] If true, the element's overflow status will be tracked in order to fade it out when needed. {string} [stylesheet] An optional stylesheet URL.  This property is valid only on the root object in the structure.  The stylesheet will be loaded in all browser windows so that the dynamic result type view may be styled.",
                "problems": [],
                "source": [
                  {
                    "number": 16,
                    "source": "   * @param {object} viewTemplate",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "viewTemplate",
                      "postName": "",
                      "type": "{object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "   *   This object describes the DOM subtree for the given dynamic result type.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "This object describes the DOM subtree for the given dynamic result type.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   *   It should be a tree-like nested structure with each object in the nesting",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "It should be a tree-like nested structure with each object in the nesting",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 19,
                    "source": "   *   representing a DOM element to be created.  This tree-like structure is",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "representing a DOM element to be created.  This tree-like structure is",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 20,
                    "source": "   *   achieved using the `children` property described below.  Each object in",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "achieved using the `children` property described below.  Each object in",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 21,
                    "source": "   *   the structure may include the following properties:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "the structure may include the following properties:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 22,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 23,
                    "source": "   *   {string} name",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{string} name",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 24,
                    "source": "   *     The name of the object.  It is required for all objects in the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The name of the object.  It is required for all objects in the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 25,
                    "source": "   *     structure except the root object and serves two important functions:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "structure except the root object and serves two important functions:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 26,
                    "source": "   *     (1) The element created for the object will automatically have a class",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "(1) The element created for the object will automatically have a class",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 27,
                    "source": "   *         named `urlbarView-dynamic-${dynamicType}-${name}`, where",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "named `urlbarView-dynamic-${dynamicType}-${name}`, where",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 28,
                    "source": "   *         `dynamicType` is the name of the dynamic result type.  The element",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "`dynamicType` is the name of the dynamic result type.  The element",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 29,
                    "source": "   *         will also automatically have an attribute \"name\" whose value is",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "will also automatically have an attribute \"name\" whose value is",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 30,
                    "source": "   *         this name.  The class and attribute allow the element to be styled",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "this name.  The class and attribute allow the element to be styled",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 31,
                    "source": "   *         in CSS.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "in CSS.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 32,
                    "source": "   *     (2) The name is used when updating the view.  See",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "(2) The name is used when updating the view.  See",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 33,
                    "source": "   *         UrlbarProvider.getViewUpdate().",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "UrlbarProvider.getViewUpdate().",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 34,
                    "source": "   *     Names must be unique within a view template, but they don't need to be",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Names must be unique within a view template, but they don't need to be",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 35,
                    "source": "   *     globally unique.  i.e., two different view templates can use the same",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "globally unique.  i.e., two different view templates can use the same",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 36,
                    "source": "   *     names, and other DOM elements can use the same names in their IDs and",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "names, and other DOM elements can use the same names in their IDs and",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 37,
                    "source": "   *     classes.  The name also suffixes the dynamic element's ID: an element",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "classes.  The name also suffixes the dynamic element's ID: an element",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 38,
                    "source": "   *     with name `data` will get the ID `urlbarView-row-{unique number}-data`.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "with name `data` will get the ID `urlbarView-row-{unique number}-data`.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 39,
                    "source": "   *     If there is no name provided for the root element, the root element",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "If there is no name provided for the root element, the root element",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 40,
                    "source": "   *     will not get an ID.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "will not get an ID.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 41,
                    "source": "   *   {string} tag",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{string} tag",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 42,
                    "source": "   *     The tag name of the object.  It is required for all objects in the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The tag name of the object.  It is required for all objects in the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 43,
                    "source": "   *     structure except the root object and declares the kind of element that",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "structure except the root object and declares the kind of element that",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 44,
                    "source": "   *     will be created for the object: span, div, img, etc.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "will be created for the object: span, div, img, etc.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 45,
                    "source": "   *   {object} [attributes]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{object} [attributes]",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 46,
                    "source": "   *     An optional mapping from attribute names to values.  For each",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "An optional mapping from attribute names to values.  For each",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 47,
                    "source": "   *     name-value pair, an attribute is added to the element created for the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "name-value pair, an attribute is added to the element created for the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 48,
                    "source": "   *     object. The `id` attribute is reserved and cannot be set by the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "object. The `id` attribute is reserved and cannot be set by the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 49,
                    "source": "   *     provider. Element IDs are passed back to the provider in getViewUpdate",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "provider. Element IDs are passed back to the provider in getViewUpdate",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 50,
                    "source": "   *     if they are needed.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "if they are needed.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 51,
                    "source": "   *   {array} [children]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{array} [children]",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 52,
                    "source": "   *     An optional list of children.  Each item in the array must be an object",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "An optional list of children.  Each item in the array must be an object",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 53,
                    "source": "   *     as described here.  For each item, a child element as described by the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "as described here.  For each item, a child element as described by the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 54,
                    "source": "   *     item is created and added to the element created for the parent object.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "item is created and added to the element created for the parent object.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 55,
                    "source": "   *   {array} [classList]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{array} [classList]",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 56,
                    "source": "   *     An optional list of classes.  Each class will be added to the element",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "An optional list of classes.  Each class will be added to the element",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 57,
                    "source": "   *     created for the object by calling element.classList.add().",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "created for the object by calling element.classList.add().",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 58,
                    "source": "   *   {boolean} [overflowable]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{boolean} [overflowable]",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 59,
                    "source": "   *     If true, the element's overflow status will be tracked in order to",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "If true, the element's overflow status will be tracked in order to",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 60,
                    "source": "   *     fade it out when needed.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "fade it out when needed.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 61,
                    "source": "   *   {string} [stylesheet]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{string} [stylesheet]",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 62,
                    "source": "   *     An optional stylesheet URL.  This property is valid only on the root",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "An optional stylesheet URL.  This property is valid only on the root",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 63,
                    "source": "   *     object in the structure.  The stylesheet will be loaded in all browser",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "object in the structure.  The stylesheet will be loaded in all browser",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 64,
                    "source": "   *     windows so that the dynamic result type view may be styled.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "windows so that the dynamic result type view may be styled.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 65,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 66,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Registers the view template for a dynamic result type.  A view template is",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Registers the view template for a dynamic result type.  A view template is",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * a plain object that describes the DOM subtree for a dynamic result type.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "a plain object that describes the DOM subtree for a dynamic result type.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * When a dynamic result is shown in the urlbar view, its type's view template",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "When a dynamic result is shown in the urlbar view, its type's view template",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * is used to construct the part of the view that represents the result.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "is used to construct the part of the view that represents the result.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * The specified view template will be available to the urlbars in all current",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The specified view template will be available to the urlbars in all current",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * and future browser windows until it is unregistered.  A given dynamic",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "and future browser windows until it is unregistered.  A given dynamic",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * result type has at most one view template.  If this method is called for a",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "result type has at most one view template.  If this method is called for a",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * dynamic result type more than once, the view template in the last call",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "dynamic result type more than once, the view template in the last call",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * overrides those in previous calls.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "overrides those in previous calls.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   * @param {string} name",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "name",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   *   The view template will be registered for the dynamic result type with",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The view template will be registered for the dynamic result type with",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   *   this name.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "this name.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   * @param {object} viewTemplate",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "viewTemplate",
                  "postName": "",
                  "type": "{object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   *   This object describes the DOM subtree for the given dynamic result type.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "This object describes the DOM subtree for the given dynamic result type.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   *   It should be a tree-like nested structure with each object in the nesting",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "It should be a tree-like nested structure with each object in the nesting",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   *   representing a DOM element to be created.  This tree-like structure is",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "representing a DOM element to be created.  This tree-like structure is",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   *   achieved using the `children` property described below.  Each object in",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "achieved using the `children` property described below.  Each object in",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "   *   the structure may include the following properties:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "the structure may include the following properties:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 22,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 23,
                "source": "   *   {string} name",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{string} name",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 24,
                "source": "   *     The name of the object.  It is required for all objects in the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The name of the object.  It is required for all objects in the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 25,
                "source": "   *     structure except the root object and serves two important functions:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "structure except the root object and serves two important functions:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 26,
                "source": "   *     (1) The element created for the object will automatically have a class",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "(1) The element created for the object will automatically have a class",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 27,
                "source": "   *         named `urlbarView-dynamic-${dynamicType}-${name}`, where",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "named `urlbarView-dynamic-${dynamicType}-${name}`, where",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 28,
                "source": "   *         `dynamicType` is the name of the dynamic result type.  The element",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "`dynamicType` is the name of the dynamic result type.  The element",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 29,
                "source": "   *         will also automatically have an attribute \"name\" whose value is",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "will also automatically have an attribute \"name\" whose value is",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 30,
                "source": "   *         this name.  The class and attribute allow the element to be styled",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "this name.  The class and attribute allow the element to be styled",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 31,
                "source": "   *         in CSS.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "in CSS.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 32,
                "source": "   *     (2) The name is used when updating the view.  See",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "(2) The name is used when updating the view.  See",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 33,
                "source": "   *         UrlbarProvider.getViewUpdate().",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "UrlbarProvider.getViewUpdate().",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 34,
                "source": "   *     Names must be unique within a view template, but they don't need to be",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Names must be unique within a view template, but they don't need to be",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 35,
                "source": "   *     globally unique.  i.e., two different view templates can use the same",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "globally unique.  i.e., two different view templates can use the same",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 36,
                "source": "   *     names, and other DOM elements can use the same names in their IDs and",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "names, and other DOM elements can use the same names in their IDs and",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 37,
                "source": "   *     classes.  The name also suffixes the dynamic element's ID: an element",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "classes.  The name also suffixes the dynamic element's ID: an element",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 38,
                "source": "   *     with name `data` will get the ID `urlbarView-row-{unique number}-data`.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "with name `data` will get the ID `urlbarView-row-{unique number}-data`.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 39,
                "source": "   *     If there is no name provided for the root element, the root element",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If there is no name provided for the root element, the root element",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 40,
                "source": "   *     will not get an ID.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "will not get an ID.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 41,
                "source": "   *   {string} tag",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{string} tag",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 42,
                "source": "   *     The tag name of the object.  It is required for all objects in the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The tag name of the object.  It is required for all objects in the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 43,
                "source": "   *     structure except the root object and declares the kind of element that",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "structure except the root object and declares the kind of element that",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 44,
                "source": "   *     will be created for the object: span, div, img, etc.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "will be created for the object: span, div, img, etc.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 45,
                "source": "   *   {object} [attributes]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{object} [attributes]",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 46,
                "source": "   *     An optional mapping from attribute names to values.  For each",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An optional mapping from attribute names to values.  For each",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 47,
                "source": "   *     name-value pair, an attribute is added to the element created for the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "name-value pair, an attribute is added to the element created for the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 48,
                "source": "   *     object. The `id` attribute is reserved and cannot be set by the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "object. The `id` attribute is reserved and cannot be set by the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 49,
                "source": "   *     provider. Element IDs are passed back to the provider in getViewUpdate",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "provider. Element IDs are passed back to the provider in getViewUpdate",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 50,
                "source": "   *     if they are needed.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "if they are needed.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 51,
                "source": "   *   {array} [children]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{array} [children]",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 52,
                "source": "   *     An optional list of children.  Each item in the array must be an object",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An optional list of children.  Each item in the array must be an object",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 53,
                "source": "   *     as described here.  For each item, a child element as described by the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "as described here.  For each item, a child element as described by the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 54,
                "source": "   *     item is created and added to the element created for the parent object.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "item is created and added to the element created for the parent object.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 55,
                "source": "   *   {array} [classList]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{array} [classList]",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 56,
                "source": "   *     An optional list of classes.  Each class will be added to the element",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An optional list of classes.  Each class will be added to the element",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 57,
                "source": "   *     created for the object by calling element.classList.add().",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "created for the object by calling element.classList.add().",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 58,
                "source": "   *   {boolean} [overflowable]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{boolean} [overflowable]",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 59,
                "source": "   *     If true, the element's overflow status will be tracked in order to",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If true, the element's overflow status will be tracked in order to",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 60,
                "source": "   *     fade it out when needed.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "fade it out when needed.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 61,
                "source": "   *   {string} [stylesheet]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{string} [stylesheet]",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 62,
                "source": "   *     An optional stylesheet URL.  This property is valid only on the root",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An optional stylesheet URL.  This property is valid only on the root",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 63,
                "source": "   *     object in the structure.  The stylesheet will be loaded in all browser",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "object in the structure.  The stylesheet will be loaded in all browser",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 64,
                "source": "   *     windows so that the dynamic result type view may be styled.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "windows so that the dynamic result type view may be styled.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 65,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 66,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "removeDynamicViewTemplate",
        "line": 1019,
        "params": [
          {
            "type": "params",
            "id": "name",
            "line": 1019
          }
        ],
        "comments": [
          {
            "description": "Unregisters the view template for a dynamic result type.",
            "tags": [
              {
                "tag": "param",
                "name": "name",
                "type": "string",
                "optional": false,
                "description": "The view template will be unregistered for the dynamic result type with this name.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {string} name",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "name",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *   The view template will be unregistered for the dynamic result type with",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The view template will be unregistered for the dynamic result type with",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *   this name.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "this name.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Unregisters the view template for a dynamic result type.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Unregisters the view template for a dynamic result type.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {string} name",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "name",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *   The view template will be unregistered for the dynamic result type with",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The view template will be unregistered for the dynamic result type with",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *   this name.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "this name.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "on_SelectedOneOffButtonChanged",
        "line": 2931,
        "params": [],
        "comments": [
          {
            "description": "Event handlers below.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Event handlers below.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Event handlers below.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "on_blur",
        "line": 3080,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 3080
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "on_mousedown",
        "line": 3089,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 3089
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "on_mouseup",
        "line": 3138,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 3138
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "on_overflow",
        "line": 3173,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 3173
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "on_underflow",
        "line": 3182,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 3182
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "on_resize",
        "line": 3191,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "on_command",
        "line": 3195,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 3195
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "on_popupshowing",
        "line": 3212,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 3212
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onPrefChanged",
        "line": 3224,
        "params": [
          {
            "type": "params",
            "id": "pref",
            "line": 3224
          }
        ],
        "comments": [
          {
            "description": "Called when a urlbar pref changes.",
            "tags": [
              {
                "tag": "param",
                "name": "pref",
                "type": "string",
                "optional": false,
                "description": "The name of the pref relative to `browser.urlbar`.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {string} pref",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "pref",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *   The name of the pref relative to `browser.urlbar`.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The name of the pref relative to `browser.urlbar`.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Called when a urlbar pref changes.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Called when a urlbar pref changes.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {string} pref",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "pref",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *   The name of the pref relative to `browser.urlbar`.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The name of the pref relative to `browser.urlbar`.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      }
    ],
    "properties": [
      "removeStaleRowsTimeout",
      "dynamicViewTemplatesByName"
    ]
  }
]