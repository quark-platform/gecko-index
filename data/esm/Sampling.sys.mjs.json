[
  {
    "type": "variable-declaration",
    "id": "Sampling",
    "line": 9,
    "typeEstimation": {
      "type": "object-estimation",
      "keys": [
        {
          "type": "object-method",
          "line": 15,
          "id": "fractionToKey",
          "comments": [
            {
              "description": "Map from the range [0, 1] to [0, 2^48].",
              "tags": [
                {
                  "tag": "param",
                  "name": "frac",
                  "type": "number",
                  "optional": false,
                  "description": "A float from 0.0 to 1.0.",
                  "problems": [],
                  "source": [
                    {
                      "number": 3,
                      "source": "   * @param  {number} frac A float from 0.0 to 1.0.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": "  ",
                        "name": "frac",
                        "postName": " ",
                        "type": "{number}",
                        "postType": " ",
                        "description": "A float from 0.0 to 1.0.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "return",
                  "name": "A",
                  "type": "string",
                  "optional": false,
                  "description": "48 bit number represented in hex, padded to 12 characters.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @return {string} A 48 bit number represented in hex, padded to 12 characters.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "A",
                        "postName": " ",
                        "type": "{string}",
                        "postType": " ",
                        "description": "48 bit number represented in hex, padded to 12 characters.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 5,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Map from the range [0, 1] to [0, 2^48].",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Map from the range [0, 1] to [0, 2^48].",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * @param  {number} frac A float from 0.0 to 1.0.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": "  ",
                    "name": "frac",
                    "postName": " ",
                    "type": "{number}",
                    "postType": " ",
                    "description": "A float from 0.0 to 1.0.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @return {string} A 48 bit number represented in hex, padded to 12 characters.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "A",
                    "postName": " ",
                    "type": "{string}",
                    "postType": " ",
                    "description": "48 bit number represented in hex, padded to 12 characters.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "frac"
          ]
        },
        {
          "type": "object-method",
          "line": 29,
          "id": "bufferToHex",
          "comments": [
            {
              "description": "",
              "tags": [
                {
                  "tag": "param",
                  "name": "buffer",
                  "type": "ArrayBuffer",
                  "optional": false,
                  "description": "Data to convert",
                  "problems": [],
                  "source": [
                    {
                      "number": 2,
                      "source": "   * @param {ArrayBuffer} buffer Data to convert",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "buffer",
                        "postName": " ",
                        "type": "{ArrayBuffer}",
                        "postType": " ",
                        "description": "Data to convert",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "returns",
                  "name": "`buffer`'s",
                  "type": "String",
                  "optional": false,
                  "description": "content, converted to a hexadecimal string.",
                  "problems": [],
                  "source": [
                    {
                      "number": 3,
                      "source": "   * @returns {String}    `buffer`'s content, converted to a hexadecimal string.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@returns",
                        "postTag": " ",
                        "name": "`buffer`'s",
                        "postName": " ",
                        "type": "{String}",
                        "postType": "    ",
                        "description": "content, converted to a hexadecimal string.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 4,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 5,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * @param {ArrayBuffer} buffer Data to convert",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "buffer",
                    "postName": " ",
                    "type": "{ArrayBuffer}",
                    "postType": " ",
                    "description": "Data to convert",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * @returns {String}    `buffer`'s content, converted to a hexadecimal string.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@returns",
                    "postTag": " ",
                    "name": "`buffer`'s",
                    "postName": " ",
                    "type": "{String}",
                    "postType": "    ",
                    "description": "content, converted to a hexadecimal string.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "buffer"
          ]
        },
        {
          "type": "object-method",
          "line": 61,
          "id": "isHashInBucket",
          "comments": [
            {
              "description": "Check if an input hash is contained in a bucket range. isHashInBucket(fractionToKey(0.5), 3, 6, 10) -> returns true minBucket |     hash v     v [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] ^ maxBucket",
              "tags": [
                {
                  "tag": "param",
                  "name": "inputHash",
                  "type": "",
                  "optional": false,
                  "description": "{String}",
                  "problems": [],
                  "source": [
                    {
                      "number": 13,
                      "source": "   * @param inputHash {String}",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "inputHash",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "{String}",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "minBucket",
                  "type": "",
                  "optional": false,
                  "description": "{int} The lower boundary, inclusive, of the range to check.",
                  "problems": [],
                  "source": [
                    {
                      "number": 14,
                      "source": "   * @param minBucket {int} The lower boundary, inclusive, of the range to check.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "minBucket",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "{int} The lower boundary, inclusive, of the range to check.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "maxBucket",
                  "type": "",
                  "optional": false,
                  "description": "{int} The upper boundary, exclusive, of the range to check.",
                  "problems": [],
                  "source": [
                    {
                      "number": 15,
                      "source": "   * @param maxBucket {int} The upper boundary, exclusive, of the range to check.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "maxBucket",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "{int} The upper boundary, exclusive, of the range to check.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "bucketCount",
                  "type": "",
                  "optional": false,
                  "description": "{int} The total number of buckets. Should be greater than or equal to maxBucket.",
                  "problems": [],
                  "source": [
                    {
                      "number": 16,
                      "source": "   * @param bucketCount {int} The total number of buckets. Should be greater than",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "bucketCount",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "{int} The total number of buckets. Should be greater than",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 17,
                      "source": "   *                          or equal to maxBucket.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "                          ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "or equal to maxBucket.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 18,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 19,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Check if an input hash is contained in a bucket range.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Check if an input hash is contained in a bucket range.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * isHashInBucket(fractionToKey(0.5), 3, 6, 10) -> returns true",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "isHashInBucket(fractionToKey(0.5), 3, 6, 10) -> returns true",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *              minBucket",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "              ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "minBucket",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   *              |     hash",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "              ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "|     hash",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   *              v     v",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "              ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "v     v",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   *    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "    ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   *                       ^",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "                       ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "^",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "   *                       maxBucket",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "                       ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "maxBucket",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 12,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 13,
                  "source": "   * @param inputHash {String}",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "inputHash",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "{String}",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 14,
                  "source": "   * @param minBucket {int} The lower boundary, inclusive, of the range to check.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "minBucket",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "{int} The lower boundary, inclusive, of the range to check.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 15,
                  "source": "   * @param maxBucket {int} The upper boundary, exclusive, of the range to check.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "maxBucket",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "{int} The upper boundary, exclusive, of the range to check.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 16,
                  "source": "   * @param bucketCount {int} The total number of buckets. Should be greater than",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "bucketCount",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "{int} The total number of buckets. Should be greater than",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 17,
                  "source": "   *                          or equal to maxBucket.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "                          ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "or equal to maxBucket.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 18,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 19,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "inputHash",
            "minBucket",
            "maxBucket",
            "bucketCount"
          ]
        },
        {
          "type": "object-method",
          "line": 70,
          "id": "truncatedHash",
          "comments": [
            {
              "description": "",
              "tags": [
                {
                  "tag": "promise",
                  "name": "A",
                  "type": "",
                  "optional": false,
                  "description": "hash of `data`, truncated to the 12 most significant characters.",
                  "problems": [],
                  "source": [
                    {
                      "number": 2,
                      "source": "   * @promise A hash of `data`, truncated to the 12 most significant characters.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@promise",
                        "postTag": " ",
                        "name": "A",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "hash of `data`, truncated to the 12 most significant characters.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 3,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 4,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * @promise A hash of `data`, truncated to the 12 most significant characters.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@promise",
                    "postTag": " ",
                    "name": "A",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "hash of `data`, truncated to the 12 most significant characters.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "data"
          ]
        },
        {
          "type": "object-method",
          "line": 89,
          "id": "stableSample",
          "comments": [
            {
              "description": "Sample by splitting the input into two buckets, one with a size (rate) and another with a size (1.0 - rate), and then check if the input's hash falls into the first bucket.",
              "tags": [
                {
                  "tag": "param",
                  "name": "input",
                  "type": "object",
                  "optional": false,
                  "description": "Input to hash to determine the sample.",
                  "problems": [],
                  "source": [
                    {
                      "number": 6,
                      "source": "   * @param    {object}  input Input to hash to determine the sample.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": "    ",
                        "name": "input",
                        "postName": " ",
                        "type": "{object}",
                        "postType": "  ",
                        "description": "Input to hash to determine the sample.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "rate",
                  "type": "Number",
                  "optional": false,
                  "description": "Number between 0.0 and 1.0 to sample at. A value of 0.25 returns true 25% of the time.",
                  "problems": [],
                  "source": [
                    {
                      "number": 7,
                      "source": "   * @param    {Number}  rate  Number between 0.0 and 1.0 to sample at. A value of",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": "    ",
                        "name": "rate",
                        "postName": "  ",
                        "type": "{Number}",
                        "postType": "  ",
                        "description": "Number between 0.0 and 1.0 to sample at. A value of",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "   *                           0.25 returns true 25% of the time.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "                           ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "0.25 returns true 25% of the time.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "promises",
                  "name": "True",
                  "type": "boolean",
                  "optional": false,
                  "description": "if the input is in the sample.",
                  "problems": [],
                  "source": [
                    {
                      "number": 9,
                      "source": "   * @promises {boolean} True if the input is in the sample.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@promises",
                        "postTag": " ",
                        "name": "True",
                        "postName": " ",
                        "type": "{boolean}",
                        "postType": " ",
                        "description": "if the input is in the sample.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 10,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 11,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Sample by splitting the input into two buckets, one with a size (rate) and",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Sample by splitting the input into two buckets, one with a size (rate) and",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * another with a size (1.0 - rate), and then check if the input's hash falls",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "another with a size (1.0 - rate), and then check if the input's hash falls",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * into the first bucket.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "into the first bucket.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * @param    {object}  input Input to hash to determine the sample.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": "    ",
                    "name": "input",
                    "postName": " ",
                    "type": "{object}",
                    "postType": "  ",
                    "description": "Input to hash to determine the sample.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   * @param    {Number}  rate  Number between 0.0 and 1.0 to sample at. A value of",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": "    ",
                    "name": "rate",
                    "postName": "  ",
                    "type": "{Number}",
                    "postType": "  ",
                    "description": "Number between 0.0 and 1.0 to sample at. A value of",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   *                           0.25 returns true 25% of the time.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "                           ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "0.25 returns true 25% of the time.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   * @promises {boolean} True if the input is in the sample.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@promises",
                    "postTag": " ",
                    "name": "True",
                    "postName": " ",
                    "type": "{boolean}",
                    "postType": " ",
                    "description": "if the input is in the sample.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "input",
            "rate"
          ]
        },
        {
          "type": "object-method",
          "line": 111,
          "id": "bucketSample",
          "comments": [
            {
              "description": "Sample by splitting the input space into a series of buckets, and checking if the given input is in a range of buckets. The range to check is defined by a start point and length, and can wrap around the input space. For example, if there are 100 buckets, and we ask to check 50 buckets starting from bucket 70, then buckets 70-99 and 0-19 will be checked.",
              "tags": [
                {
                  "tag": "param",
                  "name": "input",
                  "type": "object",
                  "optional": false,
                  "description": "Input to hash to determine the matching bucket.",
                  "problems": [],
                  "source": [
                    {
                      "number": 10,
                      "source": "   * @param {object}     input Input to hash to determine the matching bucket.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "input",
                        "postName": " ",
                        "type": "{object}",
                        "postType": "     ",
                        "description": "Input to hash to determine the matching bucket.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "start",
                  "type": "integer",
                  "optional": false,
                  "description": "Index of the bucket to start checking.",
                  "problems": [],
                  "source": [
                    {
                      "number": 11,
                      "source": "   * @param {integer}    start Index of the bucket to start checking.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "start",
                        "postName": " ",
                        "type": "{integer}",
                        "postType": "    ",
                        "description": "Index of the bucket to start checking.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "count",
                  "type": "integer",
                  "optional": false,
                  "description": "Number of buckets to check.",
                  "problems": [],
                  "source": [
                    {
                      "number": 12,
                      "source": "   * @param {integer}    count Number of buckets to check.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "count",
                        "postName": " ",
                        "type": "{integer}",
                        "postType": "    ",
                        "description": "Number of buckets to check.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "total",
                  "type": "integer",
                  "optional": false,
                  "description": "Total number of buckets to group inputs into.",
                  "problems": [],
                  "source": [
                    {
                      "number": 13,
                      "source": "   * @param {integer}    total Total number of buckets to group inputs into.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "total",
                        "postName": " ",
                        "type": "{integer}",
                        "postType": "    ",
                        "description": "Total number of buckets to group inputs into.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "promises",
                  "name": "True",
                  "type": "boolean",
                  "optional": false,
                  "description": "if the given input is within the range of buckets we're checking.",
                  "problems": [],
                  "source": [
                    {
                      "number": 14,
                      "source": "   * @promises {boolean} True if the given input is within the range of buckets",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@promises",
                        "postTag": " ",
                        "name": "True",
                        "postName": " ",
                        "type": "{boolean}",
                        "postType": " ",
                        "description": "if the given input is within the range of buckets",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 15,
                      "source": "   *                     we're checking. ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "                     ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "we're checking. ",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 16,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Sample by splitting the input space into a series of buckets, and checking",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Sample by splitting the input space into a series of buckets, and checking",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * if the given input is in a range of buckets.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "if the given input is in a range of buckets.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * The range to check is defined by a start point and length, and can wrap",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "The range to check is defined by a start point and length, and can wrap",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * around the input space. For example, if there are 100 buckets, and we ask to",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "around the input space. For example, if there are 100 buckets, and we ask to",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   * check 50 buckets starting from bucket 70, then buckets 70-99 and 0-19 will",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "check 50 buckets starting from bucket 70, then buckets 70-99 and 0-19 will",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   * be checked.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "be checked.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   * @param {object}     input Input to hash to determine the matching bucket.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "input",
                    "postName": " ",
                    "type": "{object}",
                    "postType": "     ",
                    "description": "Input to hash to determine the matching bucket.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "   * @param {integer}    start Index of the bucket to start checking.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "start",
                    "postName": " ",
                    "type": "{integer}",
                    "postType": "    ",
                    "description": "Index of the bucket to start checking.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 12,
                  "source": "   * @param {integer}    count Number of buckets to check.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "count",
                    "postName": " ",
                    "type": "{integer}",
                    "postType": "    ",
                    "description": "Number of buckets to check.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 13,
                  "source": "   * @param {integer}    total Total number of buckets to group inputs into.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "total",
                    "postName": " ",
                    "type": "{integer}",
                    "postType": "    ",
                    "description": "Total number of buckets to group inputs into.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 14,
                  "source": "   * @promises {boolean} True if the given input is within the range of buckets",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@promises",
                    "postTag": " ",
                    "name": "True",
                    "postName": " ",
                    "type": "{boolean}",
                    "postType": " ",
                    "description": "if the given input is within the range of buckets",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 15,
                  "source": "   *                     we're checking. ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "                     ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "we're checking. ",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 16,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "input",
            "start",
            "count",
            "total"
          ]
        },
        {
          "type": "object-method",
          "line": 149,
          "id": "ratioSample",
          "comments": [
            {
              "description": "Sample over a list of ratios such that, over the input space, each ratio has a number of matches in correct proportion to the other ratios. For example, given the ratios: [1, 2, 3, 4] 10% of all inputs will return 0, 20% of all inputs will return 1, 30% will return 2, and 40% will return 3. You can determine the percent of inputs that will return an index by dividing the ratio by the sum of all ratios passed in. In the case above, 4 / (1 + 2 + 3 + 4) == 0.4, or 40% of the inputs.",
              "tags": [
                {
                  "tag": "param",
                  "name": "input",
                  "type": "object",
                  "optional": false,
                  "description": "",
                  "problems": [],
                  "source": [
                    {
                      "number": 15,
                      "source": "   * @param {object} input",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "input",
                        "postName": "",
                        "type": "{object}",
                        "postType": " ",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "ratios",
                  "type": "Array<integer>",
                  "optional": false,
                  "description": "",
                  "problems": [],
                  "source": [
                    {
                      "number": 16,
                      "source": "   * @param {Array<integer>} ratios",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "ratios",
                        "postName": "",
                        "type": "{Array<integer>}",
                        "postType": " ",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "promises",
                  "name": "",
                  "type": "integer",
                  "optional": false,
                  "description": "Index of the ratio that matched the input",
                  "problems": [],
                  "source": [
                    {
                      "number": 17,
                      "source": "   * @promises {integer}",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@promises",
                        "postTag": " ",
                        "name": "",
                        "postName": "",
                        "type": "{integer}",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 18,
                      "source": "   *   Index of the ratio that matched the input",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "   ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "Index of the ratio that matched the input",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "rejects",
                  "name": "",
                  "type": "Error",
                  "optional": false,
                  "description": "If the list of ratios doesn't have at least one element",
                  "problems": [],
                  "source": [
                    {
                      "number": 19,
                      "source": "   * @rejects {Error}",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@rejects",
                        "postTag": " ",
                        "name": "",
                        "postName": "",
                        "type": "{Error}",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 20,
                      "source": "   *   If the list of ratios doesn't have at least one element",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "   ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "If the list of ratios doesn't have at least one element",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 21,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 22,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Sample over a list of ratios such that, over the input space, each ratio",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Sample over a list of ratios such that, over the input space, each ratio",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * has a number of matches in correct proportion to the other ratios.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "has a number of matches in correct proportion to the other ratios.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * For example, given the ratios:",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "For example, given the ratios:",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   * [1, 2, 3, 4]",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "[1, 2, 3, 4]",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   * 10% of all inputs will return 0, 20% of all inputs will return 1, 30% will",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "10% of all inputs will return 0, 20% of all inputs will return 1, 30% will",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   * return 2, and 40% will return 3. You can determine the percent of inputs",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "return 2, and 40% will return 3. You can determine the percent of inputs",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "   * that will return an index by dividing the ratio by the sum of all ratios",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "that will return an index by dividing the ratio by the sum of all ratios",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 12,
                  "source": "   * passed in. In the case above, 4 / (1 + 2 + 3 + 4) == 0.4, or 40% of the",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "passed in. In the case above, 4 / (1 + 2 + 3 + 4) == 0.4, or 40% of the",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 13,
                  "source": "   * inputs.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "inputs.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 14,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 15,
                  "source": "   * @param {object} input",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "input",
                    "postName": "",
                    "type": "{object}",
                    "postType": " ",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 16,
                  "source": "   * @param {Array<integer>} ratios",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "ratios",
                    "postName": "",
                    "type": "{Array<integer>}",
                    "postType": " ",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 17,
                  "source": "   * @promises {integer}",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@promises",
                    "postTag": " ",
                    "name": "",
                    "postName": "",
                    "type": "{integer}",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 18,
                  "source": "   *   Index of the ratio that matched the input",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "   ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Index of the ratio that matched the input",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 19,
                  "source": "   * @rejects {Error}",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@rejects",
                    "postTag": " ",
                    "name": "",
                    "postName": "",
                    "type": "{Error}",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 20,
                  "source": "   *   If the list of ratios doesn't have at least one element",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "   ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "If the list of ratios doesn't have at least one element",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 21,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 22,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "input",
            "ratios"
          ]
        }
      ]
    }
  }
]