[
  {
    "type": "class",
    "id": "Runtime",
    "line": 63,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 64,
        "params": [
          {
            "type": "params",
            "id": "session",
            "line": 64
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "destructor",
        "line": 85,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "enable",
        "line": 99,
        "params": [],
        "comments": [
          {
            "description": "commands",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " commands",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "commands",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "disable",
        "line": 126,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "releaseObject",
        "line": 135,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "callFunctionOn",
        "line": 178,
        "params": [],
        "comments": [
          {
            "description": "Calls function with given declaration on the given object. Object group of the result is inherited from the target object.",
            "tags": [
              {
                "tag": "param",
                "name": "options",
                "type": "object",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {object} options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": "",
                      "type": "{object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.functionDeclaration",
                "type": "string",
                "optional": false,
                "description": "Declaration of the function to call.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {string} options.functionDeclaration",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.functionDeclaration",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *     Declaration of the function to call.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Declaration of the function to call.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.arguments",
                "type": "Array.<object>=",
                "optional": false,
                "description": "Call arguments. All call arguments must belong to the same JavaScript world as the target object.",
                "problems": [],
                "source": [
                  {
                    "number": 9,
                    "source": "   * @param {Array.<object>=} options.arguments",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.arguments",
                      "postName": "",
                      "type": "{Array.<object>=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *     Call arguments. All call arguments must belong to the same",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Call arguments. All call arguments must belong to the same",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *     JavaScript world as the target object.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "JavaScript world as the target object.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.awaitPromise",
                "type": "boolean=",
                "optional": false,
                "description": "Whether execution should `await` for resulting value and return once awaited promise is resolved.",
                "problems": [],
                "source": [
                  {
                    "number": 12,
                    "source": "   * @param {boolean=} options.awaitPromise",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.awaitPromise",
                      "postName": "",
                      "type": "{boolean=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *     Whether execution should `await` for resulting value",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Whether execution should `await` for resulting value",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   *     and return once awaited promise is resolved.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "and return once awaited promise is resolved.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.executionContextId",
                "type": "number=",
                "optional": false,
                "description": "Specifies execution context which global object will be used to call function on. Either executionContextId or objectId should be specified.",
                "problems": [],
                "source": [
                  {
                    "number": 15,
                    "source": "   * @param {number=} options.executionContextId",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.executionContextId",
                      "postName": "",
                      "type": "{number=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   *     Specifies execution context which global object will be used",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Specifies execution context which global object will be used",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "   *     to call function on. Either executionContextId or objectId",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "to call function on. Either executionContextId or objectId",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   *     should be specified.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "should be specified.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.objectId",
                "type": "string=",
                "optional": false,
                "description": "Identifier of the object to call function on. Either objectId or executionContextId should be specified.",
                "problems": [],
                "source": [
                  {
                    "number": 19,
                    "source": "   * @param {string=} options.objectId",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.objectId",
                      "postName": "",
                      "type": "{string=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 20,
                    "source": "   *     Identifier of the object to call function on.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Identifier of the object to call function on.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 21,
                    "source": "   *     Either objectId or executionContextId should be specified.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Either objectId or executionContextId should be specified.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.returnByValue",
                "type": "boolean=",
                "optional": false,
                "description": "Whether the result is expected to be a JSON object which should be sent by value.",
                "problems": [],
                "source": [
                  {
                    "number": 22,
                    "source": "   * @param {boolean=} options.returnByValue",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.returnByValue",
                      "postName": "",
                      "type": "{boolean=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 23,
                    "source": "   *     Whether the result is expected to be a JSON object",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Whether the result is expected to be a JSON object",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 24,
                    "source": "   *     which should be sent by value.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "which should be sent by value.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 25,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "",
                "type": "Object<RemoteObject, ExceptionDetails>",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 26,
                    "source": "   * @returns {Object<RemoteObject, ExceptionDetails>}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{Object<RemoteObject, ExceptionDetails>}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 27,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 28,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Calls function with given declaration on the given object.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Calls function with given declaration on the given object.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * Object group of the result is inherited from the target object.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Object group of the result is inherited from the target object.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {object} options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": "",
                  "type": "{object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {string} options.functionDeclaration",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.functionDeclaration",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *     Declaration of the function to call.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Declaration of the function to call.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * @param {Array.<object>=} options.arguments",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.arguments",
                  "postName": "",
                  "type": "{Array.<object>=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *     Call arguments. All call arguments must belong to the same",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Call arguments. All call arguments must belong to the same",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *     JavaScript world as the target object.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "JavaScript world as the target object.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   * @param {boolean=} options.awaitPromise",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.awaitPromise",
                  "postName": "",
                  "type": "{boolean=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *     Whether execution should `await` for resulting value",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Whether execution should `await` for resulting value",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   *     and return once awaited promise is resolved.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "and return once awaited promise is resolved.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   * @param {number=} options.executionContextId",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.executionContextId",
                  "postName": "",
                  "type": "{number=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   *     Specifies execution context which global object will be used",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Specifies execution context which global object will be used",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   *     to call function on. Either executionContextId or objectId",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "to call function on. Either executionContextId or objectId",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   *     should be specified.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "should be specified.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   * @param {string=} options.objectId",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.objectId",
                  "postName": "",
                  "type": "{string=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   *     Identifier of the object to call function on.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Identifier of the object to call function on.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "   *     Either objectId or executionContextId should be specified.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Either objectId or executionContextId should be specified.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 22,
                "source": "   * @param {boolean=} options.returnByValue",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.returnByValue",
                  "postName": "",
                  "type": "{boolean=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 23,
                "source": "   *     Whether the result is expected to be a JSON object",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Whether the result is expected to be a JSON object",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 24,
                "source": "   *     which should be sent by value.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "which should be sent by value.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 25,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 26,
                "source": "   * @returns {Object<RemoteObject, ExceptionDetails>}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{Object<RemoteObject, ExceptionDetails>}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 27,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 28,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "evaluate",
        "line": 259,
        "params": [],
        "comments": [
          {
            "description": "Evaluate expression on global object.",
            "tags": [
              {
                "tag": "param",
                "name": "options",
                "type": "object",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {object} options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": "",
                      "type": "{object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.expression",
                "type": "string",
                "optional": false,
                "description": "Expression to evaluate.",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {string} options.expression",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.expression",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *     Expression to evaluate.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Expression to evaluate.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.awaitPromise",
                "type": "boolean=",
                "optional": false,
                "description": "Whether execution should `await` for resulting value and return once awaited promise is resolved.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {boolean=} options.awaitPromise",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.awaitPromise",
                      "postName": "",
                      "type": "{boolean=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *     Whether execution should `await` for resulting value",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Whether execution should `await` for resulting value",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *     and return once awaited promise is resolved.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "and return once awaited promise is resolved.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.contextId",
                "type": "number=",
                "optional": false,
                "description": "Specifies in which execution context to perform evaluation. If the parameter is omitted the evaluation will be performed in the context of the inspected page.",
                "problems": [],
                "source": [
                  {
                    "number": 10,
                    "source": "   * @param {number=} options.contextId",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.contextId",
                      "postName": "",
                      "type": "{number=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *     Specifies in which execution context to perform evaluation.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Specifies in which execution context to perform evaluation.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *     If the parameter is omitted the evaluation will be performed",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "If the parameter is omitted the evaluation will be performed",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *     in the context of the inspected page.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "in the context of the inspected page.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.returnByValue",
                "type": "boolean=",
                "optional": false,
                "description": "Whether the result is expected to be a JSON object that should be sent by value. Defaults to false.",
                "problems": [],
                "source": [
                  {
                    "number": 14,
                    "source": "   * @param {boolean=} options.returnByValue",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.returnByValue",
                      "postName": "",
                      "type": "{boolean=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "   *     Whether the result is expected to be a JSON object",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Whether the result is expected to be a JSON object",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   *     that should be sent by value. Defaults to false.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "that should be sent by value. Defaults to false.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.userGesture",
                "type": "boolean=",
                "optional": false,
                "description": "[unsupported] Whether execution should be treated as initiated by user in the UI.",
                "problems": [],
                "source": [
                  {
                    "number": 17,
                    "source": "   * @param {boolean=} options.userGesture [unsupported]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.userGesture",
                      "postName": " ",
                      "type": "{boolean=}",
                      "postType": " ",
                      "description": "[unsupported]",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   *     Whether execution should be treated as initiated by user in the UI.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Whether execution should be treated as initiated by user in the UI.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 19,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "",
                "type": "Object<RemoteObject, exceptionDetails>",
                "optional": false,
                "description": "The evaluation result, and optionally exception details.",
                "problems": [],
                "source": [
                  {
                    "number": 20,
                    "source": "   * @returns {Object<RemoteObject, exceptionDetails>}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{Object<RemoteObject, exceptionDetails>}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 21,
                    "source": "   *     The evaluation result, and optionally exception details.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The evaluation result, and optionally exception details.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 22,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 23,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Evaluate expression on global object.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Evaluate expression on global object.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {object} options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": "",
                  "type": "{object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {string} options.expression",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.expression",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *     Expression to evaluate.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Expression to evaluate.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {boolean=} options.awaitPromise",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.awaitPromise",
                  "postName": "",
                  "type": "{boolean=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *     Whether execution should `await` for resulting value",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Whether execution should `await` for resulting value",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *     and return once awaited promise is resolved.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "and return once awaited promise is resolved.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * @param {number=} options.contextId",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.contextId",
                  "postName": "",
                  "type": "{number=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *     Specifies in which execution context to perform evaluation.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Specifies in which execution context to perform evaluation.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *     If the parameter is omitted the evaluation will be performed",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If the parameter is omitted the evaluation will be performed",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *     in the context of the inspected page.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "in the context of the inspected page.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   * @param {boolean=} options.returnByValue",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.returnByValue",
                  "postName": "",
                  "type": "{boolean=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   *     Whether the result is expected to be a JSON object",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Whether the result is expected to be a JSON object",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   *     that should be sent by value. Defaults to false.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "that should be sent by value. Defaults to false.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   * @param {boolean=} options.userGesture [unsupported]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.userGesture",
                  "postName": " ",
                  "type": "{boolean=}",
                  "postType": " ",
                  "description": "[unsupported]",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   *     Whether execution should be treated as initiated by user in the UI.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Whether execution should be treated as initiated by user in the UI.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   * @returns {Object<RemoteObject, exceptionDetails>}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{Object<RemoteObject, exceptionDetails>}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "   *     The evaluation result, and optionally exception details.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The evaluation result, and optionally exception details.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 22,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 23,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getProperties",
        "line": 290,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_debugger",
        "line": 307,
        "params": [],
        "comments": [
          {
            "description": "Internal methods: the following methods are not part of CDP; note the _ prefix.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Internal methods: the following methods are not part of CDP;",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Internal methods: the following methods are not part of CDP;",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * note the _ prefix.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "note the _ prefix.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "_buildExceptionStackTrace",
        "line": 315,
        "params": [
          {
            "type": "params",
            "id": "stack",
            "line": 315
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_buildConsoleStackTrace",
        "line": 338,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_getRemoteObject",
        "line": 356,
        "params": [
          {
            "type": "params",
            "id": "objectId",
            "line": 356
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_serializeRemoteObject",
        "line": 366,
        "params": [
          {
            "type": "params",
            "id": "debuggerObj",
            "line": 366
          },
          {
            "type": "params",
            "id": "executionContextId",
            "line": 366
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_getRemoteObjectByNodeId",
        "line": 371,
        "params": [
          {
            "type": "params",
            "id": "nodeId",
            "line": 371
          },
          {
            "type": "params",
            "id": "executionContextId",
            "line": 371
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_setRemoteObject",
        "line": 390,
        "params": [
          {
            "type": "params",
            "id": "debuggerObj",
            "line": 390
          },
          {
            "type": "params",
            "id": "context",
            "line": 390
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_getDefaultContextForWindow",
        "line": 394,
        "params": [
          {
            "type": "params",
            "id": "innerWindowId",
            "line": 394
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_getContextsForFrame",
        "line": 409,
        "params": [
          {
            "type": "params",
            "id": "frameId",
            "line": 409
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_emitConsoleAPICalled",
        "line": 419,
        "params": [
          {
            "type": "params",
            "id": "payload",
            "line": 419
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_emitExceptionThrown",
        "line": 443,
        "params": [
          {
            "type": "params",
            "id": "payload",
            "line": 443
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_onContextCreated",
        "line": 491,
        "params": [
          {
            "type": "params",
            "id": "name",
            "line": 491
          }
        ],
        "comments": [
          {
            "description": "Helper method in order to instantiate the ExecutionContext for a given DOM Window as well as emitting the related `Runtime.executionContextCreated` event",
            "tags": [
              {
                "tag": "param",
                "name": "name",
                "type": "string",
                "optional": false,
                "description": "Event name",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {string} name",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "name",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *     Event name",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Event name",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options",
                "type": "object=",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @param {object=} options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": "",
                      "type": "{object=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.windowId",
                "type": "number",
                "optional": false,
                "description": "The inner window id of the newly instantiated document.",
                "problems": [],
                "source": [
                  {
                    "number": 9,
                    "source": "   * @param {number} options.windowId",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.windowId",
                      "postName": "",
                      "type": "{number}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *     The inner window id of the newly instantiated document.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The inner window id of the newly instantiated document.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.window",
                "type": "Window",
                "optional": false,
                "description": "The window object of the newly instantiated document.",
                "problems": [],
                "source": [
                  {
                    "number": 11,
                    "source": "   * @param {Window} options.window",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.window",
                      "postName": "",
                      "type": "{Window}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *     The window object of the newly instantiated document.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The window object of the newly instantiated document.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.contextName",
                "type": "string=",
                "optional": false,
                "description": "Human-readable name to describe the execution context.",
                "problems": [],
                "source": [
                  {
                    "number": 13,
                    "source": "   * @param {string=} options.contextName",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.contextName",
                      "postName": "",
                      "type": "{string=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   *     Human-readable name to describe the execution context.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Human-readable name to describe the execution context.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.isDefault",
                "type": "boolean=",
                "optional": false,
                "description": "Whether the execution context is the default one.",
                "problems": [],
                "source": [
                  {
                    "number": 15,
                    "source": "   * @param {boolean=} options.isDefault",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.isDefault",
                      "postName": "",
                      "type": "{boolean=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   *     Whether the execution context is the default one.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Whether the execution context is the default one.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.contextType",
                "type": "string=",
                "optional": false,
                "description": "\"default\" or \"isolated\"",
                "problems": [],
                "source": [
                  {
                    "number": 17,
                    "source": "   * @param {string=} options.contextType",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.contextType",
                      "postName": "",
                      "type": "{string=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   *     \"default\" or \"isolated\"",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "\"default\" or \"isolated\"",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 19,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "ID",
                "type": "number",
                "optional": false,
                "description": "of created context",
                "problems": [],
                "source": [
                  {
                    "number": 20,
                    "source": "   * @returns {number} ID of created context",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "ID",
                      "postName": " ",
                      "type": "{number}",
                      "postType": " ",
                      "description": "of created context",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 21,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 22,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 23,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Helper method in order to instantiate the ExecutionContext for a given",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Helper method in order to instantiate the ExecutionContext for a given",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * DOM Window as well as emitting the related",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "DOM Window as well as emitting the related",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * `Runtime.executionContextCreated` event",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "`Runtime.executionContextCreated` event",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {string} name",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "name",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *     Event name",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Event name",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @param {object=} options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": "",
                  "type": "{object=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * @param {number} options.windowId",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.windowId",
                  "postName": "",
                  "type": "{number}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *     The inner window id of the newly instantiated document.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The inner window id of the newly instantiated document.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * @param {Window} options.window",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.window",
                  "postName": "",
                  "type": "{Window}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *     The window object of the newly instantiated document.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The window object of the newly instantiated document.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   * @param {string=} options.contextName",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.contextName",
                  "postName": "",
                  "type": "{string=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   *     Human-readable name to describe the execution context.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Human-readable name to describe the execution context.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   * @param {boolean=} options.isDefault",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.isDefault",
                  "postName": "",
                  "type": "{boolean=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   *     Whether the execution context is the default one.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Whether the execution context is the default one.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   * @param {string=} options.contextType",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.contextType",
                  "postName": "",
                  "type": "{string=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   *     \"default\" or \"isolated\"",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "\"default\" or \"isolated\"",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   * @returns {number} ID of created context",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "ID",
                  "postName": " ",
                  "type": "{number}",
                  "postType": " ",
                  "description": "of created context",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 22,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 23,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_onContextDestroyed",
        "line": 558,
        "params": [
          {
            "type": "params",
            "id": "name",
            "line": 558
          }
        ],
        "comments": [
          {
            "description": "Helper method to destroy the ExecutionContext of the given id. Also emit the related `Runtime.executionContextDestroyed` and `Runtime.executionContextsCleared` events. ContextObserver will call this method with either `id` or `frameId` argument being set.",
            "tags": [
              {
                "tag": "param",
                "name": "name",
                "type": "string",
                "optional": false,
                "description": "Event name",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @param {string} name",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "name",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *     Event name",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Event name",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options",
                "type": "object=",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 10,
                    "source": "   * @param {object=} options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": "",
                      "type": "{object=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.id",
                "type": "number",
                "optional": false,
                "description": "The execution context id to destroy.",
                "problems": [],
                "source": [
                  {
                    "number": 11,
                    "source": "   * @param {number} options.id",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.id",
                      "postName": "",
                      "type": "{number}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *     The execution context id to destroy.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The execution context id to destroy.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.windowId",
                "type": "number",
                "optional": false,
                "description": "The inner-window id of the execution context to destroy.",
                "problems": [],
                "source": [
                  {
                    "number": 13,
                    "source": "   * @param {number} options.windowId",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.windowId",
                      "postName": "",
                      "type": "{number}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   *     The inner-window id of the execution context to destroy.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The inner-window id of the execution context to destroy.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.frameId",
                "type": "number",
                "optional": false,
                "description": "The frame id of execution context to destroy. Either `id` or `frameId` or `windowId` is passed.",
                "problems": [],
                "source": [
                  {
                    "number": 15,
                    "source": "   * @param {number} options.frameId",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.frameId",
                      "postName": "",
                      "type": "{number}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   *     The frame id of execution context to destroy.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The frame id of execution context to destroy.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "   * Either `id` or `frameId` or `windowId` is passed.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Either `id` or `frameId` or `windowId` is passed.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 19,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Helper method to destroy the ExecutionContext of the given id. Also emit",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Helper method to destroy the ExecutionContext of the given id. Also emit",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * the related `Runtime.executionContextDestroyed` and",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "the related `Runtime.executionContextDestroyed` and",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * `Runtime.executionContextsCleared` events.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "`Runtime.executionContextsCleared` events.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * ContextObserver will call this method with either `id` or `frameId` argument",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "ContextObserver will call this method with either `id` or `frameId` argument",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * being set.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "being set.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @param {string} name",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "name",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *     Event name",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Event name",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * @param {object=} options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": "",
                  "type": "{object=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * @param {number} options.id",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.id",
                  "postName": "",
                  "type": "{number}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *     The execution context id to destroy.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The execution context id to destroy.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   * @param {number} options.windowId",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.windowId",
                  "postName": "",
                  "type": "{number}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   *     The inner-window id of the execution context to destroy.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The inner-window id of the execution context to destroy.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   * @param {number} options.frameId",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.frameId",
                  "postName": "",
                  "type": "{number}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   *     The frame id of execution context to destroy.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The frame id of execution context to destroy.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   * Either `id` or `frameId` or `windowId` is passed.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Either `id` or `frameId` or `windowId` is passed.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onConsoleLogEvent",
        "line": 597,
        "params": [
          {
            "type": "params",
            "id": "message",
            "line": 597
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "observe",
        "line": 618,
        "params": [
          {
            "type": "params",
            "id": "subject",
            "line": 618
          },
          {
            "type": "params",
            "id": "topic",
            "line": 618
          },
          {
            "type": "params",
            "id": "data",
            "line": 618
          }
        ],
        "comments": [
          {
            "description": "nsIObserver",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " nsIObserver",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "nsIObserver",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "Takes a console message belonging to the current window and emits a \"exceptionThrown\" event if it's a Javascript error, otherwise a \"consoleAPICalled\" event.",
            "tags": [
              {
                "tag": "param",
                "name": "subject",
                "type": "nsIConsoleMessage",
                "optional": false,
                "description": "Console message.",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {nsIConsoleMessage} subject",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "subject",
                      "postName": "",
                      "type": "{nsIConsoleMessage}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *     Console message.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Console message.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Takes a console message belonging to the current window and emits a",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Takes a console message belonging to the current window and emits a",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * \"exceptionThrown\" event if it's a Javascript error, otherwise a",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "\"exceptionThrown\" event if it's a Javascript error, otherwise a",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * \"consoleAPICalled\" event.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "\"consoleAPICalled\" event.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {nsIConsoleMessage} subject",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "subject",
                  "postName": "",
                  "type": "{nsIConsoleMessage}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *     Console message.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Console message.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "QueryInterface",
        "line": 627,
        "params": [],
        "comments": [
          {
            "description": "XPCOM",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " XPCOM",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "XPCOM",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "get"
      }
    ]
  }
]