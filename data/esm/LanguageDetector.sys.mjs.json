[
  {
    "type": "variable-declaration",
    "id": "workerManager",
    "line": 10,
    "typeEstimation": {
      "type": "object-estimation",
      "keys": [
        {
          "type": "object-property",
          "line": 23,
          "id": "LARGE_STRING",
          "comments": [
            {
              "description": "Since Emscripten can handle heap growth, but not heap shrinkage, we",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " Since Emscripten can handle heap growth, but not heap shrinkage, we",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Since Emscripten can handle heap growth, but not heap shrinkage, we",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "need to refresh the worker after we've processed a particularly large",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " need to refresh the worker after we've processed a particularly large",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "need to refresh the worker after we've processed a particularly large",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "string in order to prevent unnecessary resident memory growth.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " string in order to prevent unnecessary resident memory growth.",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "string in order to prevent unnecessary resident memory growth.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "These values define the cut-off string length and the idle timeout",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " These values define the cut-off string length and the idle timeout",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "These values define the cut-off string length and the idle timeout",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "(in milliseconds) before destroying a worker. Once a string of the",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " (in milliseconds) before destroying a worker. Once a string of the",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "(in milliseconds) before destroying a worker. Once a string of the",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "maximum size has been processed, the worker is marked for",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " maximum size has been processed, the worker is marked for",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "maximum size has been processed, the worker is marked for",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "destruction, and is terminated as soon as it has been idle for the",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " destruction, and is terminated as soon as it has been idle for the",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "destruction, and is terminated as soon as it has been idle for the",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "given timeout.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " given timeout.",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "given timeout.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "1.5MB. This is the approximate string length that forces heap growth",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " 1.5MB. This is the approximate string length that forces heap growth",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "1.5MB. This is the approximate string length that forces heap growth",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "for a 2MB heap.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " for a 2MB heap.",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "for a 2MB heap.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ]
        },
        {
          "type": "object-property",
          "line": 24,
          "id": "IDLE_TIMEOUT"
        },
        {
          "type": "object-property",
          "line": 26,
          "id": "detectionQueue"
        },
        {
          "type": "object-method",
          "line": 28,
          "id": "detectLanguage",
          "kind": "method",
          "params": [
            "aParams"
          ]
        },
        {
          "type": "object-property",
          "line": 53,
          "id": "_worker"
        },
        {
          "type": "object-property",
          "line": 54,
          "id": "_workerReadyPromise"
        },
        {
          "type": "object-method",
          "line": 56,
          "id": "workerReady",
          "kind": "get",
          "params": []
        },
        {
          "type": "object-property",
          "line": 75,
          "id": "_idleTimeout",
          "comments": [
            {
              "description": "Holds the ID of the current pending idle cleanup setTimeout.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " Holds the ID of the current pending idle cleanup setTimeout.",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Holds the ID of the current pending idle cleanup setTimeout.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ]
        },
        {
          "type": "object-method",
          "line": 78,
          "id": "flushWorker",
          "comments": [
            {
              "description": "Schedule the current worker to be terminated after the idle timeout.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " Schedule the current worker to be terminated after the idle timeout.",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Schedule the current worker to be terminated after the idle timeout.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 92,
          "id": "_flushWorker",
          "comments": [
            {
              "description": "Immediately terminate the worker, as long as there no pending",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " Immediately terminate the worker, as long as there no pending",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Immediately terminate the worker, as long as there no pending",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "results. Otherwise, reschedule termination until after the next",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " results. Otherwise, reschedule termination until after the next",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "results. Otherwise, reschedule termination until after the next",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "idle timeout.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " idle timeout.",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "idle timeout.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        }
      ]
    }
  },
  {
    "type": "variable-declaration",
    "id": "LanguageDetector",
    "line": 107,
    "typeEstimation": {
      "type": "object-estimation",
      "keys": [
        {
          "type": "object-method",
          "line": 146,
          "id": "detectLanguage",
          "comments": [
            {
              "description": "Detect the language of a given string. The argument may be either a string containing the text to analyze, or an object with the following properties: - 'text' The text to analyze. - 'isHTML' (optional) A boolean, indicating whether the text should be analyzed as HTML rather than plain text. - 'language' (optional) A string indicating the expected language. For text extracted from HTTP documents, this is expected to come from the Content-Language header. - 'tld' (optional) A string indicating the top-level domain of the document the text was extracted from. - 'encoding' (optional) A string describing the encoding of the document the string was extracted from. Note that, regardless of the value of this property, the 'text' property must be a UTF-16 JavaScript string.",
              "tags": [
                {
                  "tag": "returns",
                  "name": "",
                  "type": "Promise<Object>",
                  "optional": false,
                  "description": "",
                  "problems": [],
                  "source": [
                    {
                      "number": 24,
                      "source": "   * @returns {Promise<Object>}",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@returns",
                        "postTag": " ",
                        "name": "",
                        "postName": "",
                        "type": "{Promise<Object>}",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "resolves",
                  "name": "When",
                  "type": "",
                  "optional": false,
                  "description": "detection is finished, with a object containing these fields: - 'language' (string with a language code) - 'confident' (boolean) Whether the detector is confident of the result. - 'languages' (array) An array of up to three elements, containing the most prevalent languages detected. It contains a 'languageCode' property, containing the ISO language code of the language, and a 'percent' property, describing the approximate percentage of the input which is in that language. For text of an unknown language, the result may contain an entry with the languge code 'un', indicating the percent of the text which is unknown.",
                  "problems": [],
                  "source": [
                    {
                      "number": 25,
                      "source": "   * @resolves When detection is finished, with a object containing",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@resolves",
                        "postTag": " ",
                        "name": "When",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "detection is finished, with a object containing",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 26,
                      "source": "   * these fields:",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "these fields:",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 27,
                      "source": "   *  - 'language' (string with a language code)",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "  ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- 'language' (string with a language code)",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 28,
                      "source": "   *  - 'confident' (boolean) Whether the detector is confident of the",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "  ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- 'confident' (boolean) Whether the detector is confident of the",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 29,
                      "source": "   *      result.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "      ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "result.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 30,
                      "source": "   *  - 'languages' (array) An array of up to three elements, containing",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "  ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- 'languages' (array) An array of up to three elements, containing",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 31,
                      "source": "   *      the most prevalent languages detected. It contains a",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "      ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "the most prevalent languages detected. It contains a",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 32,
                      "source": "   *      'languageCode' property, containing the ISO language code of",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "      ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "'languageCode' property, containing the ISO language code of",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 33,
                      "source": "   *      the language, and a 'percent' property, describing the",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "      ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "the language, and a 'percent' property, describing the",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 34,
                      "source": "   *      approximate percentage of the input which is in that language.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "      ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "approximate percentage of the input which is in that language.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 35,
                      "source": "   *      For text of an unknown language, the result may contain an",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "      ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "For text of an unknown language, the result may contain an",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 36,
                      "source": "   *      entry with the languge code 'un', indicating the percent of",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "      ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "entry with the languge code 'un', indicating the percent of",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 37,
                      "source": "   *      the text which is unknown.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "      ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "the text which is unknown.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 38,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 39,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Detect the language of a given string.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Detect the language of a given string.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * The argument may be either a string containing the text to analyze,",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "The argument may be either a string containing the text to analyze,",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * or an object with the following properties:",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "or an object with the following properties:",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   *  - 'text' The text to analyze.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- 'text' The text to analyze.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   *  - 'isHTML' (optional) A boolean, indicating whether the text",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- 'isHTML' (optional) A boolean, indicating whether the text",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   *      should be analyzed as HTML rather than plain text.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "should be analyzed as HTML rather than plain text.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 12,
                  "source": "   *  - 'language' (optional) A string indicating the expected language.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- 'language' (optional) A string indicating the expected language.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 13,
                  "source": "   *      For text extracted from HTTP documents, this is expected to",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "For text extracted from HTTP documents, this is expected to",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 14,
                  "source": "   *      come from the Content-Language header.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "come from the Content-Language header.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 15,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 16,
                  "source": "   *  - 'tld' (optional) A string indicating the top-level domain of the",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- 'tld' (optional) A string indicating the top-level domain of the",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 17,
                  "source": "   *      document the text was extracted from.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "document the text was extracted from.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 18,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 19,
                  "source": "   *  - 'encoding' (optional) A string describing the encoding of the",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- 'encoding' (optional) A string describing the encoding of the",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 20,
                  "source": "   *      document the string was extracted from. Note that, regardless",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "document the string was extracted from. Note that, regardless",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 21,
                  "source": "   *      of the value of this property, the 'text' property must be a",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "of the value of this property, the 'text' property must be a",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 22,
                  "source": "   *      UTF-16 JavaScript string.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "UTF-16 JavaScript string.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 23,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 24,
                  "source": "   * @returns {Promise<Object>}",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@returns",
                    "postTag": " ",
                    "name": "",
                    "postName": "",
                    "type": "{Promise<Object>}",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 25,
                  "source": "   * @resolves When detection is finished, with a object containing",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@resolves",
                    "postTag": " ",
                    "name": "When",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "detection is finished, with a object containing",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 26,
                  "source": "   * these fields:",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "these fields:",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 27,
                  "source": "   *  - 'language' (string with a language code)",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- 'language' (string with a language code)",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 28,
                  "source": "   *  - 'confident' (boolean) Whether the detector is confident of the",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- 'confident' (boolean) Whether the detector is confident of the",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 29,
                  "source": "   *      result.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "result.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 30,
                  "source": "   *  - 'languages' (array) An array of up to three elements, containing",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- 'languages' (array) An array of up to three elements, containing",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 31,
                  "source": "   *      the most prevalent languages detected. It contains a",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "the most prevalent languages detected. It contains a",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 32,
                  "source": "   *      'languageCode' property, containing the ISO language code of",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "'languageCode' property, containing the ISO language code of",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 33,
                  "source": "   *      the language, and a 'percent' property, describing the",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "the language, and a 'percent' property, describing the",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 34,
                  "source": "   *      approximate percentage of the input which is in that language.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "approximate percentage of the input which is in that language.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 35,
                  "source": "   *      For text of an unknown language, the result may contain an",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "For text of an unknown language, the result may contain an",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 36,
                  "source": "   *      entry with the languge code 'un', indicating the percent of",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "entry with the languge code 'un', indicating the percent of",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 37,
                  "source": "   *      the text which is unknown.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "the text which is unknown.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 38,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 39,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "aParams"
          ]
        }
      ]
    }
  }
]