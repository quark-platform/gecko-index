[
  {
    "type": "variable-declaration",
    "id": "PlacesDBUtils",
    "line": 24,
    "typeEstimation": {
      "type": "object-estimation",
      "keys": [
        {
          "type": "object-property",
          "line": 25,
          "id": "_isShuttingDown"
        },
        {
          "type": "object-property",
          "line": 27,
          "id": "_clearTaskQueue"
        },
        {
          "type": "object-method",
          "line": 28,
          "id": "clearPendingTasks",
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 39,
          "id": "maintenanceOnIdle",
          "comments": [
            {
              "description": "Executes integrity check and common maintenance tasks.",
              "tags": [
                {
                  "tag": "return",
                  "name": "a",
                  "type": "",
                  "optional": false,
                  "description": "Map[taskName(String) -> Object]. The Object has the following properties: - succeeded: boolean - logs: an array of strings containing the messages logged by the task.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @return a Map[taskName(String) -> Object]. The Object has the following properties:",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "a",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "Map[taskName(String) -> Object]. The Object has the following properties:",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 5,
                      "source": "   *         - succeeded: boolean",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "         ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- succeeded: boolean",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "   *         - logs: an array of strings containing the messages logged by the task.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "         ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- logs: an array of strings containing the messages logged by the task.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Executes integrity check and common maintenance tasks.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Executes integrity check and common maintenance tasks.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @return a Map[taskName(String) -> Object]. The Object has the following properties:",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "a",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "Map[taskName(String) -> Object]. The Object has the following properties:",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   *         - succeeded: boolean",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "         ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- succeeded: boolean",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *         - logs: an array of strings containing the messages logged by the task.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "         ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- logs: an array of strings containing the messages logged by the task.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 75,
          "id": "checkAndFixDatabase",
          "comments": [
            {
              "description": "Executes integrity check, common and advanced maintenance tasks (like expiration and vacuum).  Will also collect statistics on the database. Note: although this function isn't actually async, we keep it async to allow us to maintain a simple, consistent API for the tasks within this object.",
              "tags": [
                {
                  "tag": "return",
                  "name": "",
                  "type": "Promise",
                  "optional": false,
                  "description": "A promise that resolves with a Map[taskName(String) -> Object]. The Object has the following properties: - succeeded: boolean - logs: an array of strings containing the messages logged by the task.",
                  "problems": [],
                  "source": [
                    {
                      "number": 8,
                      "source": "   * @return {Promise}",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "",
                        "postName": "",
                        "type": "{Promise}",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 9,
                      "source": "   *        A promise that resolves with a Map[taskName(String) -> Object].",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "        ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "A promise that resolves with a Map[taskName(String) -> Object].",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 10,
                      "source": "   *        The Object has the following properties:",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "        ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "The Object has the following properties:",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 11,
                      "source": "   *         - succeeded: boolean",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "         ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- succeeded: boolean",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 12,
                      "source": "   *         - logs: an array of strings containing the messages logged by the task.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "         ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- logs: an array of strings containing the messages logged by the task.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 13,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 14,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Executes integrity check, common and advanced maintenance tasks (like",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Executes integrity check, common and advanced maintenance tasks (like",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * expiration and vacuum).  Will also collect statistics on the database.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "expiration and vacuum).  Will also collect statistics on the database.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * Note: although this function isn't actually async, we keep it async to",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Note: although this function isn't actually async, we keep it async to",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * allow us to maintain a simple, consistent API for the tasks within this object.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "allow us to maintain a simple, consistent API for the tasks within this object.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   * @return {Promise}",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "",
                    "postName": "",
                    "type": "{Promise}",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   *        A promise that resolves with a Map[taskName(String) -> Object].",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "        ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "A promise that resolves with a Map[taskName(String) -> Object].",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   *        The Object has the following properties:",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "        ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "The Object has the following properties:",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "   *         - succeeded: boolean",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "         ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- succeeded: boolean",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 12,
                  "source": "   *         - logs: an array of strings containing the messages logged by the task.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "         ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- logs: an array of strings containing the messages logged by the task.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 13,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 14,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 96,
          "id": "_refreshUI",
          "comments": [
            {
              "description": "Forces a full refresh of Places views. Note: although this function isn't actually async, we keep it async to allow us to maintain a simple, consistent API for the tasks within this object.",
              "tags": [
                {
                  "tag": "returns",
                  "name": "An",
                  "type": "Array",
                  "optional": false,
                  "description": "empty array.",
                  "problems": [],
                  "source": [
                    {
                      "number": 7,
                      "source": "   * @returns {Array} An empty array.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@returns",
                        "postTag": " ",
                        "name": "An",
                        "postName": " ",
                        "type": "{Array}",
                        "postType": " ",
                        "description": "empty array.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 9,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Forces a full refresh of Places views.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Forces a full refresh of Places views.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * Note: although this function isn't actually async, we keep it async to",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Note: although this function isn't actually async, we keep it async to",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * allow us to maintain a simple, consistent API for the tasks within this object.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "allow us to maintain a simple, consistent API for the tasks within this object.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   * @returns {Array} An empty array.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@returns",
                    "postTag": " ",
                    "name": "An",
                    "postName": " ",
                    "type": "{Array}",
                    "postType": " ",
                    "description": "empty array.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 108,
          "id": "checkIntegrity",
          "comments": [
            {
              "description": "Checks integrity and tries to fix the database through a reindex.",
              "tags": [
                {
                  "tag": "return",
                  "name": "resolves",
                  "type": "Promise",
                  "optional": false,
                  "description": "if database is sane or is made sane.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @return {Promise} resolves if database is sane or is made sane.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "resolves",
                        "postName": " ",
                        "type": "{Promise}",
                        "postType": " ",
                        "description": "if database is sane or is made sane.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "resolves",
                  "name": "to",
                  "type": "",
                  "optional": false,
                  "description": "an array of logs for this task.",
                  "problems": [],
                  "source": [
                    {
                      "number": 5,
                      "source": "   * @resolves to an array of logs for this task.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@resolves",
                        "postTag": " ",
                        "name": "to",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "an array of logs for this task.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "rejects",
                  "name": "if",
                  "type": "",
                  "optional": false,
                  "description": "we're unable to fix corruption or unable to check status.",
                  "problems": [],
                  "source": [
                    {
                      "number": 6,
                      "source": "   * @rejects if we're unable to fix corruption or unable to check status.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@rejects",
                        "postTag": " ",
                        "name": "if",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "we're unable to fix corruption or unable to check status.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Checks integrity and tries to fix the database through a reindex.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Checks integrity and tries to fix the database through a reindex.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @return {Promise} resolves if database is sane or is made sane.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "resolves",
                    "postName": " ",
                    "type": "{Promise}",
                    "postType": " ",
                    "description": "if database is sane or is made sane.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * @resolves to an array of logs for this task.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@resolves",
                    "postTag": " ",
                    "name": "to",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "an array of logs for this task.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * @rejects if we're unable to fix corruption or unable to check status.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@rejects",
                    "postTag": " ",
                    "name": "if",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "we're unable to fix corruption or unable to check status.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 144,
          "id": "checkCoherence",
          "comments": [
            {
              "description": "Checks data coherence and tries to fix most common errors.",
              "tags": [
                {
                  "tag": "return",
                  "name": "resolves",
                  "type": "Promise",
                  "optional": false,
                  "description": "when coherence is checked.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @return {Promise} resolves when coherence is checked.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "resolves",
                        "postName": " ",
                        "type": "{Promise}",
                        "postType": " ",
                        "description": "when coherence is checked.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "resolves",
                  "name": "to",
                  "type": "",
                  "optional": false,
                  "description": "an array of logs for this task.",
                  "problems": [],
                  "source": [
                    {
                      "number": 5,
                      "source": "   * @resolves to an array of logs for this task.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@resolves",
                        "postTag": " ",
                        "name": "to",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "an array of logs for this task.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "rejects",
                  "name": "if",
                  "type": "",
                  "optional": false,
                  "description": "database is not coherent.",
                  "problems": [],
                  "source": [
                    {
                      "number": 6,
                      "source": "   * @rejects if database is not coherent.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@rejects",
                        "postTag": " ",
                        "name": "if",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "database is not coherent.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Checks data coherence and tries to fix most common errors.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Checks data coherence and tries to fix most common errors.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @return {Promise} resolves when coherence is checked.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "resolves",
                    "postName": " ",
                    "type": "{Promise}",
                    "postType": " ",
                    "description": "when coherence is checked.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * @resolves to an array of logs for this task.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@resolves",
                    "postTag": " ",
                    "name": "to",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "an array of logs for this task.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * @rejects if database is not coherent.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@rejects",
                    "postTag": " ",
                    "name": "if",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "database is not coherent.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 179,
          "id": "incrementalVacuum",
          "comments": [
            {
              "description": "Runs incremental vacuum on databases supporting it.",
              "tags": [
                {
                  "tag": "return",
                  "name": "resolves",
                  "type": "Promise",
                  "optional": false,
                  "description": "when done.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @return {Promise} resolves when done.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "resolves",
                        "postName": " ",
                        "type": "{Promise}",
                        "postType": " ",
                        "description": "when done.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "resolves",
                  "name": "to",
                  "type": "",
                  "optional": false,
                  "description": "an array of logs for this task.",
                  "problems": [],
                  "source": [
                    {
                      "number": 5,
                      "source": "   * @resolves to an array of logs for this task.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@resolves",
                        "postTag": " ",
                        "name": "to",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "an array of logs for this task.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "rejects",
                  "name": "if",
                  "type": "",
                  "optional": false,
                  "description": "we were unable to vacuum.",
                  "problems": [],
                  "source": [
                    {
                      "number": 6,
                      "source": "   * @rejects if we were unable to vacuum.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@rejects",
                        "postTag": " ",
                        "name": "if",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "we were unable to vacuum.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Runs incremental vacuum on databases supporting it.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Runs incremental vacuum on databases supporting it.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @return {Promise} resolves when done.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "resolves",
                    "postName": " ",
                    "type": "{Promise}",
                    "postType": " ",
                    "description": "when done.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * @resolves to an array of logs for this task.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@resolves",
                    "postTag": " ",
                    "name": "to",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "an array of logs for this task.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * @rejects if we were unable to vacuum.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@rejects",
                    "postTag": " ",
                    "name": "if",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "we were unable to vacuum.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 219,
          "id": "deleteOrphanPreviews",
          "comments": [
            {
              "description": "Expire orphan previews that don't have a Places entry anymore.",
              "tags": [
                {
                  "tag": "return",
                  "name": "resolves",
                  "type": "Promise",
                  "optional": false,
                  "description": "when done.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @return {Promise} resolves when done.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "resolves",
                        "postName": " ",
                        "type": "{Promise}",
                        "postType": " ",
                        "description": "when done.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "resolves",
                  "name": "to",
                  "type": "",
                  "optional": false,
                  "description": "an array of logs for this task.",
                  "problems": [],
                  "source": [
                    {
                      "number": 5,
                      "source": "   * @resolves to an array of logs for this task.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@resolves",
                        "postTag": " ",
                        "name": "to",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "an array of logs for this task.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Expire orphan previews that don't have a Places entry anymore.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Expire orphan previews that don't have a Places entry anymore.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @return {Promise} resolves when done.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "resolves",
                    "postName": " ",
                    "type": "{Promise}",
                    "postType": " ",
                    "description": "when done.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * @resolves to an array of logs for this task.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@resolves",
                    "postTag": " ",
                    "name": "to",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "an array of logs for this task.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 232,
          "id": "_getCoherenceStatements",
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 842,
          "id": "vacuum",
          "comments": [
            {
              "description": "Tries to vacuum the database. Note: although this function isn't actually async, we keep it async to allow us to maintain a simple, consistent API for the tasks within this object.",
              "tags": [
                {
                  "tag": "return",
                  "name": "resolves",
                  "type": "Promise",
                  "optional": false,
                  "description": "when database is vacuumed.",
                  "problems": [],
                  "source": [
                    {
                      "number": 7,
                      "source": "   * @return {Promise} resolves when database is vacuumed.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "resolves",
                        "postName": " ",
                        "type": "{Promise}",
                        "postType": " ",
                        "description": "when database is vacuumed.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "resolves",
                  "name": "to",
                  "type": "",
                  "optional": false,
                  "description": "an array of logs for this task.",
                  "problems": [],
                  "source": [
                    {
                      "number": 8,
                      "source": "   * @resolves to an array of logs for this task.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@resolves",
                        "postTag": " ",
                        "name": "to",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "an array of logs for this task.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "rejects",
                  "name": "if",
                  "type": "",
                  "optional": false,
                  "description": "we are unable to vacuum database.",
                  "problems": [],
                  "source": [
                    {
                      "number": 9,
                      "source": "   * @rejects if we are unable to vacuum database.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@rejects",
                        "postTag": " ",
                        "name": "if",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "we are unable to vacuum database.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 10,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 11,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Tries to vacuum the database.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Tries to vacuum the database.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * Note: although this function isn't actually async, we keep it async to",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Note: although this function isn't actually async, we keep it async to",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * allow us to maintain a simple, consistent API for the tasks within this object.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "allow us to maintain a simple, consistent API for the tasks within this object.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   * @return {Promise} resolves when database is vacuumed.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "resolves",
                    "postName": " ",
                    "type": "{Promise}",
                    "postType": " ",
                    "description": "when database is vacuumed.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   * @resolves to an array of logs for this task.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@resolves",
                    "postTag": " ",
                    "name": "to",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "an array of logs for this task.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   * @rejects if we are unable to vacuum database.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@rejects",
                    "postTag": " ",
                    "name": "if",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "we are unable to vacuum database.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 871,
          "id": "expire",
          "comments": [
            {
              "description": "Forces a full expiration on the database. Note: although this function isn't actually async, we keep it async to allow us to maintain a simple, consistent API for the tasks within this object.",
              "tags": [
                {
                  "tag": "return",
                  "name": "resolves",
                  "type": "Promise",
                  "optional": false,
                  "description": "when the database in cleaned up.",
                  "problems": [],
                  "source": [
                    {
                      "number": 7,
                      "source": "   * @return {Promise} resolves when the database in cleaned up.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "resolves",
                        "postName": " ",
                        "type": "{Promise}",
                        "postType": " ",
                        "description": "when the database in cleaned up.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "resolves",
                  "name": "to",
                  "type": "",
                  "optional": false,
                  "description": "an array of logs for this task.",
                  "problems": [],
                  "source": [
                    {
                      "number": 8,
                      "source": "   * @resolves to an array of logs for this task.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@resolves",
                        "postTag": " ",
                        "name": "to",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "an array of logs for this task.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 9,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 10,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Forces a full expiration on the database.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Forces a full expiration on the database.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * Note: although this function isn't actually async, we keep it async to",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Note: although this function isn't actually async, we keep it async to",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * allow us to maintain a simple, consistent API for the tasks within this object.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "allow us to maintain a simple, consistent API for the tasks within this object.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   * @return {Promise} resolves when the database in cleaned up.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "resolves",
                    "postName": " ",
                    "type": "{Promise}",
                    "postType": " ",
                    "description": "when the database in cleaned up.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   * @resolves to an array of logs for this task.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@resolves",
                    "postTag": " ",
                    "name": "to",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "an array of logs for this task.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 902,
          "id": "stats",
          "comments": [
            {
              "description": "Collects statistical data on the database.",
              "tags": [
                {
                  "tag": "return",
                  "name": "resolves",
                  "type": "Promise",
                  "optional": false,
                  "description": "when statistics are collected.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @return {Promise} resolves when statistics are collected.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "resolves",
                        "postName": " ",
                        "type": "{Promise}",
                        "postType": " ",
                        "description": "when statistics are collected.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "resolves",
                  "name": "to",
                  "type": "",
                  "optional": false,
                  "description": "an array of logs for this task.",
                  "problems": [],
                  "source": [
                    {
                      "number": 5,
                      "source": "   * @resolves to an array of logs for this task.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@resolves",
                        "postTag": " ",
                        "name": "to",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "an array of logs for this task.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "rejects",
                  "name": "if",
                  "type": "",
                  "optional": false,
                  "description": "we are unable to collect stats for some reason.",
                  "problems": [],
                  "source": [
                    {
                      "number": 6,
                      "source": "   * @rejects if we are unable to collect stats for some reason.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@rejects",
                        "postTag": " ",
                        "name": "if",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "we are unable to collect stats for some reason.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Collects statistical data on the database.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Collects statistical data on the database.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @return {Promise} resolves when statistics are collected.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "resolves",
                    "postName": " ",
                    "type": "{Promise}",
                    "postType": " ",
                    "description": "when statistics are collected.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * @resolves to an array of logs for this task.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@resolves",
                    "postTag": " ",
                    "name": "to",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "an array of logs for this task.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * @rejects if we are unable to collect stats for some reason.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@rejects",
                    "postTag": " ",
                    "name": "if",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "we are unable to collect stats for some reason.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 989,
          "id": "originFrecencyStats",
          "comments": [
            {
              "description": "Recalculates statistical data on the origin frecencies in the database.",
              "tags": [
                {
                  "tag": "return",
                  "name": "resolves",
                  "type": "Promise",
                  "optional": false,
                  "description": "when statistics are collected.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @return {Promise} resolves when statistics are collected.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "resolves",
                        "postName": " ",
                        "type": "{Promise}",
                        "postType": " ",
                        "description": "when statistics are collected.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 5,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Recalculates statistical data on the origin frecencies in the database.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Recalculates statistical data on the origin frecencies in the database.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @return {Promise} resolves when statistics are collected.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "resolves",
                    "postName": " ",
                    "type": "{Promise}",
                    "postType": " ",
                    "description": "when statistics are collected.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 1004,
          "id": "telemetry",
          "comments": [
            {
              "description": "Collects telemetry data and reports it to Telemetry. Note: although this function isn't actually async, we keep it async to allow us to maintain a simple, consistent API for the tasks within this object.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Collects telemetry data and reports it to Telemetry.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Collects telemetry data and reports it to Telemetry.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * Note: although this function isn't actually async, we keep it async to",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Note: although this function isn't actually async, we keep it async to",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * allow us to maintain a simple, consistent API for the tasks within this object.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "allow us to maintain a simple, consistent API for the tasks within this object.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 1184,
          "id": "removeOldCorruptDBs",
          "comments": [
            {
              "description": "Remove old and useless places.sqlite.corrupt files.",
              "tags": [
                {
                  "tag": "resolves",
                  "name": "to",
                  "type": "",
                  "optional": false,
                  "description": "an array of logs for this task.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @resolves to an array of logs for this task.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@resolves",
                        "postTag": " ",
                        "name": "to",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "an array of logs for this task.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 5,
                      "source": "   *",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Remove old and useless places.sqlite.corrupt files.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Remove old and useless places.sqlite.corrupt files.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @resolves to an array of logs for this task.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@resolves",
                    "postTag": " ",
                    "name": "to",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "an array of logs for this task.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 1235,
          "id": "getEntitiesStats",
          "comments": [
            {
              "description": "Gets detailed statistics about database entities like tables and indices.",
              "tags": [
                {
                  "tag": "returns",
                  "name": "a",
                  "type": "Map",
                  "optional": false,
                  "description": "Map by table name, containing an object with the following properties: - efficiencyPerc: percentage filling of pages, an high efficiency means most pages are filled up almost completely. This value is not particularly useful with a low number of pages. - sizeBytes: size of the entity in bytes - pages: number of pages of the entity - sizePerc: percentage of the total database size - sequentialityPerc: percentage of sequential pages, this is a global value of the database, thus it's the same for every entity, and it can be used to evaluate fragmentation and the need for vacuum.",
                  "problems": [],
                  "source": [
                    {
                      "number": 3,
                      "source": "   * @returns {Map} a Map by table name, containing an object with the following",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@returns",
                        "postTag": " ",
                        "name": "a",
                        "postName": " ",
                        "type": "{Map}",
                        "postType": " ",
                        "description": "Map by table name, containing an object with the following",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 4,
                      "source": "   *          properties:",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "          ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "properties:",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 5,
                      "source": "   *            - efficiencyPerc: percentage filling of pages, an high",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "            ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- efficiencyPerc: percentage filling of pages, an high",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "   *              efficiency means most pages are filled up almost completely.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "              ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "efficiency means most pages are filled up almost completely.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "   *              This value is not particularly useful with a low number of",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "              ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "This value is not particularly useful with a low number of",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "   *              pages.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "              ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "pages.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 9,
                      "source": "   *            - sizeBytes: size of the entity in bytes",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "            ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- sizeBytes: size of the entity in bytes",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 10,
                      "source": "   *            - pages: number of pages of the entity",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "            ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- pages: number of pages of the entity",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 11,
                      "source": "   *            - sizePerc: percentage of the total database size",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "            ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- sizePerc: percentage of the total database size",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 12,
                      "source": "   *            - sequentialityPerc: percentage of sequential pages, this is",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "            ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- sequentialityPerc: percentage of sequential pages, this is",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 13,
                      "source": "   *              a global value of the database, thus it's the same for every",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "              ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "a global value of the database, thus it's the same for every",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 14,
                      "source": "   *              entity, and it can be used to evaluate fragmentation and the",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "              ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "entity, and it can be used to evaluate fragmentation and the",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 15,
                      "source": "   *              need for vacuum.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "              ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "need for vacuum.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 16,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 17,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Gets detailed statistics about database entities like tables and indices.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Gets detailed statistics about database entities like tables and indices.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * @returns {Map} a Map by table name, containing an object with the following",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@returns",
                    "postTag": " ",
                    "name": "a",
                    "postName": " ",
                    "type": "{Map}",
                    "postType": " ",
                    "description": "Map by table name, containing an object with the following",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   *          properties:",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "          ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "properties:",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   *            - efficiencyPerc: percentage filling of pages, an high",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "            ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- efficiencyPerc: percentage filling of pages, an high",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *              efficiency means most pages are filled up almost completely.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "              ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "efficiency means most pages are filled up almost completely.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   *              This value is not particularly useful with a low number of",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "              ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "This value is not particularly useful with a low number of",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   *              pages.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "              ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "pages.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   *            - sizeBytes: size of the entity in bytes",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "            ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- sizeBytes: size of the entity in bytes",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   *            - pages: number of pages of the entity",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "            ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- pages: number of pages of the entity",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "   *            - sizePerc: percentage of the total database size",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "            ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- sizePerc: percentage of the total database size",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 12,
                  "source": "   *            - sequentialityPerc: percentage of sequential pages, this is",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "            ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- sequentialityPerc: percentage of sequential pages, this is",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 13,
                  "source": "   *              a global value of the database, thus it's the same for every",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "              ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "a global value of the database, thus it's the same for every",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 14,
                  "source": "   *              entity, and it can be used to evaluate fragmentation and the",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "              ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "entity, and it can be used to evaluate fragmentation and the",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 15,
                  "source": "   *              need for vacuum.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "              ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "need for vacuum.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 16,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 17,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 1276,
          "id": "getEntitiesStatsAndCounts",
          "comments": [
            {
              "description": "Gets detailed statistics about database entities and their respective row counts.",
              "tags": [
                {
                  "tag": "returns",
                  "name": "An",
                  "type": "Array",
                  "optional": false,
                  "description": "array that augments each object returned by {@link getEntitiesStats} with the following extra properties: - entity: name of the entity - count: row count of the entity",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @returns {Array} An array that augments each object returned by",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@returns",
                        "postTag": " ",
                        "name": "An",
                        "postName": " ",
                        "type": "{Array}",
                        "postType": " ",
                        "description": "array that augments each object returned by",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 5,
                      "source": "   *          {@link getEntitiesStats} with the following extra properties:",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "          ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "{@link getEntitiesStats} with the following extra properties:",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "   *            - entity: name of the entity",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "            ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- entity: name of the entity",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "   *            - count: row count of the entity",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "            ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- count: row count of the entity",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 9,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Gets detailed statistics about database entities and their respective row",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Gets detailed statistics about database entities and their respective row",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * counts.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "counts.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @returns {Array} An array that augments each object returned by",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@returns",
                    "postTag": " ",
                    "name": "An",
                    "postName": " ",
                    "type": "{Array}",
                    "postType": " ",
                    "description": "array that augments each object returned by",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   *          {@link getEntitiesStats} with the following extra properties:",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "          ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "{@link getEntitiesStats} with the following extra properties:",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *            - entity: name of the entity",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "            ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- entity: name of the entity",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   *            - count: row count of the entity",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "            ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- count: row count of the entity",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 1312,
          "id": "runTasks",
          "comments": [
            {
              "description": "Runs a list of tasks, returning a Map when done.",
              "tags": [
                {
                  "tag": "param",
                  "name": "tasks",
                  "type": "",
                  "optional": false,
                  "description": "Array of tasks to be executed, in form of pointers to methods in this module.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @param tasks",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "tasks",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 5,
                      "source": "   *        Array of tasks to be executed, in form of pointers to methods in",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "        ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "Array of tasks to be executed, in form of pointers to methods in",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "   *        this module.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "        ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "this module.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "return",
                  "name": "",
                  "type": "Promise",
                  "optional": false,
                  "description": "A promise that resolves with a Map[taskName(String) -> Object]. The Object has the following properties: - succeeded: boolean - logs: an array of strings containing the messages logged by the task",
                  "problems": [],
                  "source": [
                    {
                      "number": 7,
                      "source": "   * @return {Promise}",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "",
                        "postName": "",
                        "type": "{Promise}",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "   *        A promise that resolves with a Map[taskName(String) -> Object].",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "        ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "A promise that resolves with a Map[taskName(String) -> Object].",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 9,
                      "source": "   *        The Object has the following properties:",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "        ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "The Object has the following properties:",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 10,
                      "source": "   *         - succeeded: boolean",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "         ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- succeeded: boolean",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 11,
                      "source": "   *         - logs: an array of strings containing the messages logged by the task",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "         ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- logs: an array of strings containing the messages logged by the task",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 12,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 13,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Runs a list of tasks, returning a Map when done.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Runs a list of tasks, returning a Map when done.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @param tasks",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "tasks",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   *        Array of tasks to be executed, in form of pointers to methods in",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "        ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Array of tasks to be executed, in form of pointers to methods in",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *        this module.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "        ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "this module.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   * @return {Promise}",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "",
                    "postName": "",
                    "type": "{Promise}",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   *        A promise that resolves with a Map[taskName(String) -> Object].",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "        ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "A promise that resolves with a Map[taskName(String) -> Object].",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   *        The Object has the following properties:",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "        ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "The Object has the following properties:",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   *         - succeeded: boolean",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "         ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- succeeded: boolean",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "   *         - logs: an array of strings containing the messages logged by the task",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "         ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- logs: an array of strings containing the messages logged by the task",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 12,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 13,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "tasks"
          ]
        }
      ]
    }
  },
  {
    "type": "function-declaration",
    "id": "PlacesDBUtilsIdleMaintenance",
    "line": 1392,
    "params": []
  }
]