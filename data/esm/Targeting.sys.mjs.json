[
  {
    "type": "class",
    "id": "TargetingContext",
    "line": 68,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 71,
        "params": [
          {
            "type": "params",
            "id": "customContext",
            "line": 71
          },
          {
            "type": "params",
            "id": "param1",
            "line": 71
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "setTelemetrySource",
        "line": 92,
        "params": [
          {
            "type": "params",
            "id": "source",
            "line": 92
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_sendUndesiredEvent",
        "line": 98,
        "params": [
          {
            "type": "params",
            "id": "eventData",
            "line": 98
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "createContextWithTimeout",
        "line": 125,
        "params": [
          {
            "type": "params",
            "id": "context",
            "line": 125
          },
          {
            "type": "params",
            "id": "param1",
            "line": 125
          }
        ],
        "comments": [
          {
            "description": "Wrap each property of context[key] with a Proxy that captures errors and timeouts",
            "tags": [
              {
                "tag": "param",
                "name": "context",
                "type": "Object.<string, TargetingGetters> | TargetingGetters",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {Object.<string, TargetingGetters> | TargetingGetters} context",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "context",
                      "postName": "",
                      "type": "{Object.<string, TargetingGetters> | TargetingGetters}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "key",
                "type": "string",
                "optional": false,
                "description": "Namespace value found in `context` param",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {string} key Namespace value found in `context` param",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "key",
                      "postName": " ",
                      "type": "{string}",
                      "postType": " ",
                      "description": "Namespace value found in `context` param",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "Wrapped",
                "type": "TargetingGetters",
                "optional": false,
                "description": "context where getter report errors and timeouts",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @returns {TargetingGetters} Wrapped context where getter report errors and timeouts",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "Wrapped",
                      "postName": " ",
                      "type": "{TargetingGetters}",
                      "postType": " ",
                      "description": "context where getter report errors and timeouts",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Wrap each property of context[key] with a Proxy that captures errors and",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Wrap each property of context[key] with a Proxy that captures errors and",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * timeouts",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "timeouts",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {Object.<string, TargetingGetters> | TargetingGetters} context",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "context",
                  "postName": "",
                  "type": "{Object.<string, TargetingGetters> | TargetingGetters}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {string} key Namespace value found in `context` param",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "key",
                  "postName": " ",
                  "type": "{string}",
                  "postType": " ",
                  "description": "Namespace value found in `context` param",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @returns {TargetingGetters} Wrapped context where getter report errors and timeouts",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "Wrapped",
                  "postName": " ",
                  "type": "{TargetingGetters}",
                  "postType": " ",
                  "description": "context where getter report errors and timeouts",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "mergeEvaluationContexts",
        "line": 169,
        "params": [
          {
            "type": "params",
            "id": "contexts",
            "line": 169
          }
        ],
        "comments": [
          {
            "description": "Merge all evaluation contexts and wrap the getters with timeouts",
            "tags": [
              {
                "tag": "param",
                "name": "contexts",
                "type": "Object.<string, TargetingGetters>[]",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {Object.<string, TargetingGetters>[]} contexts",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "contexts",
                      "postName": "",
                      "type": "{Object.<string, TargetingGetters>[]}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "Object",
                "type": "Object.<string, TargetingGetters>",
                "optional": false,
                "description": "that follows the pattern of `namespace: getters`",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @returns {Object.<string, TargetingGetters>} Object that follows the pattern of `namespace: getters`",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "Object",
                      "postName": " ",
                      "type": "{Object.<string, TargetingGetters>}",
                      "postType": " ",
                      "description": "that follows the pattern of `namespace: getters`",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Merge all evaluation contexts and wrap the getters with timeouts",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Merge all evaluation contexts and wrap the getters with timeouts",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {Object.<string, TargetingGetters>[]} contexts",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "contexts",
                  "postName": "",
                  "type": "{Object.<string, TargetingGetters>[]}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @returns {Object.<string, TargetingGetters>} Object that follows the pattern of `namespace: getters`",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "Object",
                  "postName": " ",
                  "type": "{Object.<string, TargetingGetters>}",
                  "postType": " ",
                  "description": "that follows the pattern of `namespace: getters`",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "combineContexts",
        "line": 187,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 187
          }
        ],
        "comments": [
          {
            "description": "Merge multiple TargetingGetters objects without accidentally evaluating",
            "tags": [
              {
                "tag": "param",
                "name": "...contexts",
                "type": "TargetingGetters[]",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {TargetingGetters[]} ...contexts",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "...contexts",
                      "postName": "",
                      "type": "{TargetingGetters[]}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "",
                "type": "Proxy<TargetingGetters>",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @returns {Proxy<TargetingGetters>}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{Proxy<TargetingGetters>}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Merge multiple TargetingGetters objects without accidentally evaluating",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Merge multiple TargetingGetters objects without accidentally evaluating",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {TargetingGetters[]} ...contexts",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "...contexts",
                  "postName": "",
                  "type": "{TargetingGetters[]}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @returns {Proxy<TargetingGetters>}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{Proxy<TargetingGetters>}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "eval",
        "line": 220,
        "params": [
          {
            "type": "params",
            "id": "expression",
            "line": 220
          },
          {
            "type": "params",
            "id": "param1",
            "line": 220
          }
        ],
        "comments": [
          {
            "description": "Evaluate JEXL expressions with default `TargetingEnvironment` and custom provided targeting contexts",
            "tags": [
              {
                "tag": "example",
                "name": "",
                "type": "",
                "optional": false,
                "description": "eval( \"ctx.locale == 'en-US' && customCtx.foo == 42\", { customCtx: { foo: 42 } } ); // true",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @example",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@example",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   * eval(",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "eval(",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *   \"ctx.locale == 'en-US' && customCtx.foo == 42\",",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "\"ctx.locale == 'en-US' && customCtx.foo == 42\",",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *   { customCtx: { foo: 42 } }",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{ customCtx: { foo: 42 } }",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   * ); // true",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "); // true",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "expression",
                "type": "string",
                "optional": false,
                "description": "JEXL expression",
                "problems": [],
                "source": [
                  {
                    "number": 11,
                    "source": "   * @param {string} expression JEXL expression",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "expression",
                      "postName": " ",
                      "type": "{string}",
                      "postType": " ",
                      "description": "JEXL expression",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "...contexts",
                "type": "Object.<string, TargetingGetters>[]",
                "optional": false,
                "description": "Additional custom context objects where the keys act as namespaces for the different getters",
                "problems": [],
                "source": [
                  {
                    "number": 12,
                    "source": "   * @param {Object.<string, TargetingGetters>[]} ...contexts Additional custom context",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "...contexts",
                      "postName": " ",
                      "type": "{Object.<string, TargetingGetters>[]}",
                      "postType": " ",
                      "description": "Additional custom context",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *        objects where the keys act as namespaces for the different getters",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "objects where the keys act as namespaces for the different getters",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "Evaluation",
                "type": "promise",
                "optional": false,
                "description": "result",
                "problems": [],
                "source": [
                  {
                    "number": 15,
                    "source": "   * @returns {promise} Evaluation result",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "Evaluation",
                      "postName": " ",
                      "type": "{promise}",
                      "postType": " ",
                      "description": "result",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Evaluate JEXL expressions with default `TargetingEnvironment` and custom",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Evaluate JEXL expressions with default `TargetingEnvironment` and custom",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * provided targeting contexts",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "provided targeting contexts",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @example",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@example",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * eval(",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "eval(",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *   \"ctx.locale == 'en-US' && customCtx.foo == 42\",",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "\"ctx.locale == 'en-US' && customCtx.foo == 42\",",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *   { customCtx: { foo: 42 } }",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{ customCtx: { foo: 42 } }",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * ); // true",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "); // true",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * @param {string} expression JEXL expression",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "expression",
                  "postName": " ",
                  "type": "{string}",
                  "postType": " ",
                  "description": "JEXL expression",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   * @param {Object.<string, TargetingGetters>[]} ...contexts Additional custom context",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "...contexts",
                  "postName": " ",
                  "type": "{Object.<string, TargetingGetters>[]}",
                  "postType": " ",
                  "description": "Additional custom context",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *        objects where the keys act as namespaces for the different getters",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "objects where the keys act as namespaces for the different getters",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   * @returns {promise} Evaluation result",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "Evaluation",
                  "postName": " ",
                  "type": "{promise}",
                  "postType": " ",
                  "description": "result",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "evalWithDefault",
        "line": 239,
        "params": [
          {
            "type": "params",
            "id": "expression",
            "line": 239
          }
        ],
        "comments": [
          {
            "description": "Evaluate JEXL expressions with default provided targeting context",
            "tags": [
              {
                "tag": "example",
                "name": "",
                "type": "",
                "optional": false,
                "description": "new TargetingContext({ bar: 42 }); evalWithDefault( \"bar == 42\", ); // true",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @example",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@example",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   * new TargetingContext({ bar: 42 });",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "new TargetingContext({ bar: 42 });",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   * evalWithDefault(",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "evalWithDefault(",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *   \"bar == 42\",",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "\"bar == 42\",",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   * ); // true",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "); // true",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "expression",
                "type": "string",
                "optional": false,
                "description": "JEXL expression",
                "problems": [],
                "source": [
                  {
                    "number": 10,
                    "source": "   * @param {string} expression JEXL expression",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "expression",
                      "postName": " ",
                      "type": "{string}",
                      "postType": " ",
                      "description": "JEXL expression",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "Evaluation",
                "type": "promise",
                "optional": false,
                "description": "result",
                "problems": [],
                "source": [
                  {
                    "number": 11,
                    "source": "   * @returns {promise} Evaluation result",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "Evaluation",
                      "postName": " ",
                      "type": "{promise}",
                      "postType": " ",
                      "description": "result",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Evaluate JEXL expressions with default provided targeting context",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Evaluate JEXL expressions with default provided targeting context",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @example",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@example",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * new TargetingContext({ bar: 42 });",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "new TargetingContext({ bar: 42 });",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * evalWithDefault(",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "evalWithDefault(",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *   \"bar == 42\",",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "\"bar == 42\",",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * ); // true",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "); // true",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * @param {string} expression JEXL expression",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "expression",
                  "postName": " ",
                  "type": "{string}",
                  "postType": " ",
                  "description": "JEXL expression",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * @returns {promise} Evaluation result",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "Evaluation",
                  "postName": " ",
                  "type": "{promise}",
                  "postType": " ",
                  "description": "result",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      }
    ],
    "properties": []
  }
]