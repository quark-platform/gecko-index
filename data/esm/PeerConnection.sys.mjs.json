[
  {
    "type": "class",
    "id": "GlobalPCList",
    "line": 50,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 51,
        "params": [],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "notifyLifecycleObservers",
        "line": 68,
        "params": [
          {
            "type": "params",
            "id": "pc",
            "line": 68
          },
          {
            "type": "params",
            "id": "type",
            "line": 68
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "addPC",
        "line": 74,
        "params": [
          {
            "type": "params",
            "id": "pc",
            "line": 74
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "findPC",
        "line": 85,
        "params": [
          {
            "type": "params",
            "id": "globalPCListId",
            "line": 85
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "removeNullRefs",
        "line": 99,
        "params": [
          {
            "type": "params",
            "id": "winID",
            "line": 99
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "handleGMPCrash",
        "line": 112,
        "params": [
          {
            "type": "params",
            "id": "data",
            "line": 112
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "receiveMessage",
        "line": 131,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 131
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "observe",
        "line": 137,
        "params": [
          {
            "type": "params",
            "id": "subject",
            "line": 137
          },
          {
            "type": "params",
            "id": "topic",
            "line": 137
          },
          {
            "type": "params",
            "id": "data",
            "line": 137
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_registerPeerConnectionLifecycleCallback",
        "line": 200,
        "params": [
          {
            "type": "params",
            "id": "winID",
            "line": 200
          },
          {
            "type": "params",
            "id": "cb",
            "line": 200
          }
        ],
        "kind": "method"
      }
    ],
    "properties": []
  },
  {
    "type": "class",
    "id": "RTCIceCandidate",
    "line": 215,
    "methods": [
      {
        "type": "method",
        "id": "init",
        "line": 216,
        "params": [
          {
            "type": "params",
            "id": "win",
            "line": 216
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "__init",
        "line": 220,
        "params": [
          {
            "type": "params",
            "id": "dict",
            "line": 220
          }
        ],
        "kind": "method"
      }
    ],
    "properties": []
  },
  {
    "type": "class",
    "id": "RTCSessionDescription",
    "line": 236,
    "methods": [
      {
        "type": "method",
        "id": "init",
        "line": 237,
        "params": [
          {
            "type": "params",
            "id": "win",
            "line": 237
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "__init",
        "line": 242,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 242
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "type",
        "line": 251,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "type",
        "line": 254,
        "params": [
          {
            "type": "params",
            "id": "type",
            "line": 254
          }
        ],
        "kind": "set"
      },
      {
        "type": "method",
        "id": "sdp",
        "line": 259,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "sdp",
        "line": 262,
        "params": [
          {
            "type": "params",
            "id": "sdp",
            "line": 262
          }
        ],
        "kind": "set"
      },
      {
        "type": "method",
        "id": "warn",
        "line": 267,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "logWarning",
        "line": 278,
        "params": [
          {
            "type": "params",
            "id": "msg",
            "line": 278
          }
        ],
        "kind": "method"
      }
    ],
    "properties": []
  },
  {
    "type": "class",
    "id": "RTCPeerConnection",
    "line": 349,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 350,
        "params": [],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "init",
        "line": 368,
        "params": [
          {
            "type": "params",
            "id": "win",
            "line": 368
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_applyPrefsToConfig",
        "line": 373,
        "params": [
          {
            "type": "params",
            "id": "rtcConfig",
            "line": 373
          }
        ],
        "comments": [
          {
            "description": "Pref-based overrides; will _not_ be reflected in getConfiguration",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Pref-based overrides; will _not_ be reflected in getConfiguration",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Pref-based overrides; will _not_ be reflected in getConfiguration",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_validateConfig",
        "line": 411,
        "params": [
          {
            "type": "params",
            "id": "rtcConfig",
            "line": 411
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_checkIfIceRestartRequired",
        "line": 474,
        "params": [
          {
            "type": "params",
            "id": "rtcConfig",
            "line": 474
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "__init",
        "line": 489,
        "params": [
          {
            "type": "params",
            "id": "rtcConfig",
            "line": 489
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getConfiguration",
        "line": 560,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "setConfiguration",
        "line": 566,
        "params": [
          {
            "type": "params",
            "id": "rtcConfig",
            "line": 566
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_initCertificate",
        "line": 580,
        "params": [
          {
            "type": "params",
            "id": "certificate",
            "line": 580
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_resetPeerIdentityPromise",
        "line": 590,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_initIdp",
        "line": 597,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_chain",
        "line": 609,
        "params": [
          {
            "type": "params",
            "id": "operation",
            "line": 609
          }
        ],
        "comments": [
          {
            "description": "Add a function to the internal operations chain.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Add a function to the internal operations chain.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Add a function to the internal operations chain.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_async",
        "line": 623,
        "params": [
          {
            "type": "params",
            "id": "func",
            "line": 623
          }
        ],
        "comments": [
          {
            "description": "It's basically impossible to use async directly in JSImplemented code,",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " It's basically impossible to use async directly in JSImplemented code,",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "It's basically impossible to use async directly in JSImplemented code,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "because the implicit promise must be wrapped to the right type for content.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " because the implicit promise must be wrapped to the right type for content.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "because the implicit promise must be wrapped to the right type for content.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "The _async wrapper takes care of this. The _legacy wrapper implements",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " The _async wrapper takes care of this. The _legacy wrapper implements",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The _async wrapper takes care of this. The _legacy wrapper implements",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "legacy callbacks in a manner that produces correct line-numbers in errors,",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " legacy callbacks in a manner that produces correct line-numbers in errors,",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "legacy callbacks in a manner that produces correct line-numbers in errors,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "provided that methods validate their inputs before putting themselves on",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " provided that methods validate their inputs before putting themselves on",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "provided that methods validate their inputs before putting themselves on",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "the pc's operations chain.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " the pc's operations chain.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "the pc's operations chain.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "These wrappers also serve as guards against settling promises past close().",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " These wrappers also serve as guards against settling promises past close().",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "These wrappers also serve as guards against settling promises past close().",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_legacy",
        "line": 627,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 627
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_auto",
        "line": 631,
        "params": [
          {
            "type": "params",
            "id": "onSucc",
            "line": 631
          },
          {
            "type": "params",
            "id": "onErr",
            "line": 631
          },
          {
            "type": "params",
            "id": "func",
            "line": 631
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_closeWrapper",
        "line": 637,
        "params": [
          {
            "type": "params",
            "id": "func",
            "line": 637
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_legacyCloseWrapper",
        "line": 653,
        "params": [
          {
            "type": "params",
            "id": "onSucc",
            "line": 653
          },
          {
            "type": "params",
            "id": "onErr",
            "line": 653
          },
          {
            "type": "params",
            "id": "func",
            "line": 653
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_queueTaskWithClosedCheck",
        "line": 670,
        "params": [
          {
            "type": "params",
            "id": "func",
            "line": 670
          }
        ],
        "comments": [
          {
            "description": "This implements the fairly common \"Queue a task\" logic",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " This implements the fairly common \"Queue a task\" logic",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "This implements the fairly common \"Queue a task\" logic",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_validateIceServers",
        "line": 700,
        "params": [
          {
            "type": "params",
            "id": "iceServers",
            "line": 700
          },
          {
            "type": "params",
            "id": "msg",
            "line": 700
          }
        ],
        "comments": [
          {
            "description": "An RTCConfiguration may look like this: { \"iceServers\": [ { urls: \"stun:stun.example.org\", }, { url: \"stun:stun.example.org\", }, // deprecated version { urls: [\"turn:turn1.x.org\", \"turn:turn2.x.org\"], username:\"jib\", credential:\"mypass\"} ] } This function normalizes the structure of the input for rtcConfig.iceServers for us, so we test well-formed stun/turn urls before passing along to C++. msg - Error message to detail which array-entry failed, if any.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * An RTCConfiguration may look like this:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An RTCConfiguration may look like this:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * { \"iceServers\": [ { urls: \"stun:stun.example.org\", },",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{ \"iceServers\": [ { urls: \"stun:stun.example.org\", },",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *                   { url: \"stun:stun.example.org\", }, // deprecated version",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{ url: \"stun:stun.example.org\", }, // deprecated version",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *                   { urls: [\"turn:turn1.x.org\", \"turn:turn2.x.org\"],",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{ urls: [\"turn:turn1.x.org\", \"turn:turn2.x.org\"],",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *                     username:\"jib\", credential:\"mypass\"} ] }",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "username:\"jib\", credential:\"mypass\"} ] }",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * This function normalizes the structure of the input for rtcConfig.iceServers for us,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "This function normalizes the structure of the input for rtcConfig.iceServers for us,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * so we test well-formed stun/turn urls before passing along to C++.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "so we test well-formed stun/turn urls before passing along to C++.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *   msg - Error message to detail which array-entry failed, if any.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "msg - Error message to detail which array-entry failed, if any.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_checkClosed",
        "line": 806,
        "params": [],
        "comments": [
          {
            "description": "Ideally, this should be of the form _checkState(state),",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Ideally, this should be of the form _checkState(state),",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Ideally, this should be of the form _checkState(state),",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "where the state is taken from an enumeration containing",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " where the state is taken from an enumeration containing",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "where the state is taken from an enumeration containing",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "the valid peer connection states defined in the WebRTC",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " the valid peer connection states defined in the WebRTC",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "the valid peer connection states defined in the WebRTC",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "spec. See Bug 831756.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " spec. See Bug 831756.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "spec. See Bug 831756.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "dispatchEvent",
        "line": 815,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 815
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "logErrorAndCallOnError",
        "line": 824,
        "params": [
          {
            "type": "params",
            "id": "e",
            "line": 824
          }
        ],
        "comments": [
          {
            "description": "Log error message to web console and window.onerror, if present.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Log error message to web console and window.onerror, if present.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Log error message to web console and window.onerror, if present.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "logError",
        "line": 850,
        "params": [
          {
            "type": "params",
            "id": "msg",
            "line": 850
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "logWarning",
        "line": 854,
        "params": [
          {
            "type": "params",
            "id": "msg",
            "line": 854
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "logStackMsg",
        "line": 858,
        "params": [
          {
            "type": "params",
            "id": "msg",
            "line": 858
          },
          {
            "type": "params",
            "id": "flag",
            "line": 858
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "logMsg",
        "line": 863,
        "params": [
          {
            "type": "params",
            "id": "msg",
            "line": 863
          },
          {
            "type": "params",
            "id": "file",
            "line": 863
          },
          {
            "type": "params",
            "id": "line",
            "line": 863
          },
          {
            "type": "params",
            "id": "flag",
            "line": 863
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getEH",
        "line": 867,
        "params": [
          {
            "type": "params",
            "id": "type",
            "line": 867
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "setEH",
        "line": 871,
        "params": [
          {
            "type": "params",
            "id": "type",
            "line": 871
          },
          {
            "type": "params",
            "id": "handler",
            "line": 871
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "makeGetterSetterEH",
        "line": 875,
        "params": [
          {
            "type": "params",
            "id": "name",
            "line": 875
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "makeLegacyGetterSetterEH",
        "line": 886,
        "params": [
          {
            "type": "params",
            "id": "name",
            "line": 886
          },
          {
            "type": "params",
            "id": "msg",
            "line": 886
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "createOffer",
        "line": 898,
        "params": [
          {
            "type": "params",
            "id": "optionsOrOnSucc",
            "line": 898
          },
          {
            "type": "params",
            "id": "onErr",
            "line": 898
          },
          {
            "type": "params",
            "id": "options",
            "line": 898
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_ensureOfferToReceive",
        "line": 914,
        "params": [
          {
            "type": "params",
            "id": "kind",
            "line": 914
          }
        ],
        "comments": [
          {
            "description": "Ensures that we have at least one transceiver of |kind| that is",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Ensures that we have at least one transceiver of |kind| that is",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Ensures that we have at least one transceiver of |kind| that is",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "configured to receive. It will create one if necessary.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " configured to receive. It will create one if necessary.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "configured to receive. It will create one if necessary.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_ensureTransceiversForOfferToReceive",
        "line": 929,
        "params": [
          {
            "type": "params",
            "id": "options",
            "line": 929
          }
        ],
        "comments": [
          {
            "description": "Handles offerToReceiveAudio/Video",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Handles offerToReceiveAudio/Video",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Handles offerToReceiveAudio/Video",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_createOffer",
        "line": 956,
        "params": [
          {
            "type": "params",
            "id": "options",
            "line": 956
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_createAnOffer",
        "line": 962,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 962
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "createAnswer",
        "line": 991,
        "params": [
          {
            "type": "params",
            "id": "optionsOrOnSucc",
            "line": 991
          },
          {
            "type": "params",
            "id": "onErr",
            "line": 991
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_createAnswer",
        "line": 999,
        "params": [
          {
            "type": "params",
            "id": "options",
            "line": 999
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_createAnAnswer",
        "line": 1004,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_getPermission",
        "line": 1029,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_sanityCheckSdp",
        "line": 1056,
        "params": [
          {
            "type": "params",
            "id": "sdp",
            "line": 1056
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "setLocalDescription",
        "line": 1069,
        "params": [
          {
            "type": "params",
            "id": "desc",
            "line": 1069
          },
          {
            "type": "params",
            "id": "onSucc",
            "line": 1069
          },
          {
            "type": "params",
            "id": "onErr",
            "line": 1069
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_setLocalDescription",
        "line": 1073,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 1073
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_validateIdentity",
        "line": 1125,
        "params": [
          {
            "type": "params",
            "id": "sdp",
            "line": 1125
          },
          {
            "type": "params",
            "id": "origin",
            "line": 1125
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "setRemoteDescription",
        "line": 1190,
        "params": [
          {
            "type": "params",
            "id": "desc",
            "line": 1190
          },
          {
            "type": "params",
            "id": "onSucc",
            "line": 1190
          },
          {
            "type": "params",
            "id": "onErr",
            "line": 1190
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_setRemoteDescription",
        "line": 1194,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 1194
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "setIdentityProvider",
        "line": 1252,
        "params": [
          {
            "type": "params",
            "id": "provider",
            "line": 1252
          },
          {
            "type": "params",
            "id": "param1",
            "line": 1252
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_getIdentityAssertion",
        "line": 1263,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getIdentityAssertion",
        "line": 1271,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "canTrickleIceCandidates",
        "line": 1278,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "_updateCanTrickle",
        "line": 1282,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "addIceCandidate",
        "line": 1311,
        "params": [
          {
            "type": "params",
            "id": "cand",
            "line": 1311
          },
          {
            "type": "params",
            "id": "onSucc",
            "line": 1311
          },
          {
            "type": "params",
            "id": "onErr",
            "line": 1311
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_addIceCandidate",
        "line": 1324,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 1324
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "restartIce",
        "line": 1354,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "addStream",
        "line": 1358,
        "params": [
          {
            "type": "params",
            "id": "stream",
            "line": 1358
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "addTrack",
        "line": 1362,
        "params": [
          {
            "type": "params",
            "id": "track",
            "line": 1362
          },
          {
            "type": "params",
            "id": "param1",
            "line": 1362
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "removeTrack",
        "line": 1408,
        "params": [
          {
            "type": "params",
            "id": "sender",
            "line": 1408
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_addTransceiverNoEvents",
        "line": 1437,
        "params": [
          {
            "type": "params",
            "id": "sendTrackOrKind",
            "line": 1437
          },
          {
            "type": "params",
            "id": "init",
            "line": 1437
          },
          {
            "type": "params",
            "id": "addTrackMagic",
            "line": 1437
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "addTransceiver",
        "line": 1469,
        "params": [
          {
            "type": "params",
            "id": "sendTrackOrKind",
            "line": 1469
          },
          {
            "type": "params",
            "id": "init",
            "line": 1469
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "updateNegotiationNeeded",
        "line": 1476,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "close",
        "line": 1480,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getLocalStreams",
        "line": 1496,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getRemoteStreams",
        "line": 1507,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getSenders",
        "line": 1512,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getReceivers",
        "line": 1518,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "mozSetPacketCallback",
        "line": 1524,
        "params": [
          {
            "type": "params",
            "id": "callback",
            "line": 1524
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "mozEnablePacketDump",
        "line": 1528,
        "params": [
          {
            "type": "params",
            "id": "level",
            "line": 1528
          },
          {
            "type": "params",
            "id": "type",
            "line": 1528
          },
          {
            "type": "params",
            "id": "sending",
            "line": 1528
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "mozDisablePacketDump",
        "line": 1532,
        "params": [
          {
            "type": "params",
            "id": "level",
            "line": 1532
          },
          {
            "type": "params",
            "id": "type",
            "line": 1532
          },
          {
            "type": "params",
            "id": "sending",
            "line": 1532
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getTransceivers",
        "line": 1536,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "localDescription",
        "line": 1540,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "currentLocalDescription",
        "line": 1544,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "pendingLocalDescription",
        "line": 1554,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "remoteDescription",
        "line": 1564,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "currentRemoteDescription",
        "line": 1568,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "pendingRemoteDescription",
        "line": 1578,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "peerIdentity",
        "line": 1588,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "idpLoginUrl",
        "line": 1591,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "id",
        "line": 1594,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "id",
        "line": 1597,
        "params": [
          {
            "type": "params",
            "id": "s",
            "line": 1597
          }
        ],
        "kind": "set"
      },
      {
        "type": "method",
        "id": "iceGatheringState",
        "line": 1600,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "iceConnectionState",
        "line": 1603,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "connectionState",
        "line": 1606,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "signalingState",
        "line": 1610,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "handleIceGatheringStateChange",
        "line": 1619,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "changeIceConnectionState",
        "line": 1631,
        "params": [
          {
            "type": "params",
            "id": "state",
            "line": 1631
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getStats",
        "line": 1641,
        "params": [
          {
            "type": "params",
            "id": "selector",
            "line": 1641
          },
          {
            "type": "params",
            "id": "onSucc",
            "line": 1641
          },
          {
            "type": "params",
            "id": "onErr",
            "line": 1641
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sctp",
        "line": 1664,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "createDataChannel",
        "line": 1668,
        "params": [
          {
            "type": "params",
            "id": "label",
            "line": 1669
          },
          {
            "type": "params",
            "id": "param1",
            "line": 1670
          }
        ],
        "kind": "method"
      }
    ],
    "properties": []
  },
  {
    "type": "class",
    "id": "PeerConnectionObserver",
    "line": 1786,
    "methods": [
      {
        "type": "method",
        "id": "init",
        "line": 1787,
        "params": [
          {
            "type": "params",
            "id": "win",
            "line": 1787
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "__init",
        "line": 1791,
        "params": [
          {
            "type": "params",
            "id": "dompc",
            "line": 1791
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "newError",
        "line": 1795,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 1795
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "dispatchEvent",
        "line": 1799,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 1799
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onCreateOfferSuccess",
        "line": 1803,
        "params": [
          {
            "type": "params",
            "id": "sdp",
            "line": 1803
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onCreateOfferError",
        "line": 1807,
        "params": [
          {
            "type": "params",
            "id": "error",
            "line": 1807
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onCreateAnswerSuccess",
        "line": 1811,
        "params": [
          {
            "type": "params",
            "id": "sdp",
            "line": 1811
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onCreateAnswerError",
        "line": 1815,
        "params": [
          {
            "type": "params",
            "id": "error",
            "line": 1815
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onSetDescriptionSuccess",
        "line": 1819,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onSetDescriptionError",
        "line": 1823,
        "params": [
          {
            "type": "params",
            "id": "error",
            "line": 1823
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onAddIceCandidateSuccess",
        "line": 1827,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onAddIceCandidateError",
        "line": 1831,
        "params": [
          {
            "type": "params",
            "id": "error",
            "line": 1831
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onIceCandidate",
        "line": 1835,
        "params": [
          {
            "type": "params",
            "id": "sdpMLineIndex",
            "line": 1835
          },
          {
            "type": "params",
            "id": "sdpMid",
            "line": 1835
          },
          {
            "type": "params",
            "id": "candidate",
            "line": 1835
          },
          {
            "type": "params",
            "id": "usernameFragment",
            "line": 1835
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "handleIceConnectionStateChange",
        "line": 1878,
        "params": [
          {
            "type": "params",
            "id": "iceConnectionState",
            "line": 1878
          }
        ],
        "comments": [
          {
            "description": "This method is primarily responsible for updating iceConnectionState.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " This method is primarily responsible for updating iceConnectionState.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "This method is primarily responsible for updating iceConnectionState.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "This state is defined in the WebRTC specification as follows:",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " This state is defined in the WebRTC specification as follows:",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "This state is defined in the WebRTC specification as follows:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "iceConnectionState:",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " iceConnectionState:",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "iceConnectionState:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "-------------------",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " -------------------",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "-------------------",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "new           Any of the RTCIceTransports are in the new state and none",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "   new           Any of the RTCIceTransports are in the new state and none",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "new           Any of the RTCIceTransports are in the new state and none",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "of them are in the checking, failed or disconnected state.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "                 of them are in the checking, failed or disconnected state.",
                "tokens": {
                  "start": "                 ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "of them are in the checking, failed or disconnected state.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "checking      Any of the RTCIceTransports are in the checking state and",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "   checking      Any of the RTCIceTransports are in the checking state and",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "checking      Any of the RTCIceTransports are in the checking state and",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "none of them are in the failed or disconnected state.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "                 none of them are in the failed or disconnected state.",
                "tokens": {
                  "start": "                 ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "none of them are in the failed or disconnected state.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "connected     All RTCIceTransports are in the connected, completed or",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "   connected     All RTCIceTransports are in the connected, completed or",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "connected     All RTCIceTransports are in the connected, completed or",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "closed state and at least one of them is in the connected",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "                 closed state and at least one of them is in the connected",
                "tokens": {
                  "start": "                 ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "closed state and at least one of them is in the connected",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "state.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "                 state.",
                "tokens": {
                  "start": "                 ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "state.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "completed     All RTCIceTransports are in the completed or closed state",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "   completed     All RTCIceTransports are in the completed or closed state",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "completed     All RTCIceTransports are in the completed or closed state",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "and at least one of them is in the completed state.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "                 and at least one of them is in the completed state.",
                "tokens": {
                  "start": "                 ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "and at least one of them is in the completed state.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "failed        Any of the RTCIceTransports are in the failed state.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "   failed        Any of the RTCIceTransports are in the failed state.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "failed        Any of the RTCIceTransports are in the failed state.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "disconnected  Any of the RTCIceTransports are in the disconnected state",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "   disconnected  Any of the RTCIceTransports are in the disconnected state",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "disconnected  Any of the RTCIceTransports are in the disconnected state",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "and none of them are in the failed state.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "                 and none of them are in the failed state.",
                "tokens": {
                  "start": "                 ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "and none of them are in the failed state.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "closed        All of the RTCIceTransports are in the closed state.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "   closed        All of the RTCIceTransports are in the closed state.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "closed        All of the RTCIceTransports are in the closed state.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onStateChange",
        "line": 1905,
        "params": [
          {
            "type": "params",
            "id": "state",
            "line": 1905
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onTransceiverNeeded",
        "line": 1940,
        "params": [
          {
            "type": "params",
            "id": "kind",
            "line": 1940
          },
          {
            "type": "params",
            "id": "transceiverImpl",
            "line": 1940
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "notifyDataChannel",
        "line": 1944,
        "params": [
          {
            "type": "params",
            "id": "channel",
            "line": 1944
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "fireTrackEvent",
        "line": 1950,
        "params": [
          {
            "type": "params",
            "id": "receiver",
            "line": 1950
          },
          {
            "type": "params",
            "id": "streams",
            "line": 1950
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "fireStreamEvent",
        "line": 1971,
        "params": [
          {
            "type": "params",
            "id": "stream",
            "line": 1971
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "fireNegotiationNeededEvent",
        "line": 1976,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onPacket",
        "line": 1980,
        "params": [
          {
            "type": "params",
            "id": "level",
            "line": 1980
          },
          {
            "type": "params",
            "id": "type",
            "line": 1980
          },
          {
            "type": "params",
            "id": "sending",
            "line": 1980
          },
          {
            "type": "params",
            "id": "packet",
            "line": 1980
          }
        ],
        "kind": "method"
      }
    ],
    "properties": []
  },
  {
    "type": "class",
    "id": "RTCPeerConnectionStatic",
    "line": 1994,
    "methods": [
      {
        "type": "method",
        "id": "init",
        "line": 1995,
        "params": [
          {
            "type": "params",
            "id": "win",
            "line": 1995
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "registerPeerConnectionLifecycleCallback",
        "line": 1999,
        "params": [
          {
            "type": "params",
            "id": "cb",
            "line": 1999
          }
        ],
        "kind": "method"
      }
    ],
    "properties": []
  },
  {
    "type": "class",
    "id": "CreateOfferRequest",
    "line": 2010,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 2011,
        "params": [
          {
            "type": "params",
            "id": "windowID",
            "line": 2011
          },
          {
            "type": "params",
            "id": "innerWindowID",
            "line": 2011
          },
          {
            "type": "params",
            "id": "callID",
            "line": 2011
          },
          {
            "type": "params",
            "id": "isSecure",
            "line": 2011
          }
        ],
        "kind": "constructor"
      }
    ],
    "properties": []
  }
]