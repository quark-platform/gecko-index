[
  {
    "type": "variable-declaration",
    "id": "TelemetryUtils",
    "line": 22,
    "typeEstimation": {
      "type": "object-estimation",
      "keys": [
        {
          "type": "object-property",
          "line": 47,
          "id": "TELEMETRY_UPLOAD_DISABLED_TOPIC",
          "comments": [
            {
              "description": "When telemetry is disabled, identifying information (such as client ID) should be removed. A topic event is emitted with a subject that matches this constant. When this happens, other systems that store identifying information about the client should delete that data. Please ask the Firefox Telemetry Team before relying on this topic. Here is an example of listening for that event: const { TelemetryUtils } = ChromeUtils.import(\"resource://gre/modules/TelemetryUtils.jsm\"); class YourClass { constructor() { Services.obs.addObserver(this, TelemetryUtils.TELEMETRY_UPLOAD_DISABLED_TOPIC); } observe(subject, topic, data) { if (topic == TelemetryUtils.TELEMETRY_UPLOAD_DISABLED_TOPIC) { // Telemetry was disabled // subject and data are both unused } } }",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * When telemetry is disabled, identifying information (such as client ID)",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "When telemetry is disabled, identifying information (such as client ID)",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * should be removed. A topic event is emitted with a subject that matches",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "should be removed. A topic event is emitted with a subject that matches",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * this constant. When this happens, other systems that store identifying",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "this constant. When this happens, other systems that store identifying",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * information about the client should delete that data. Please ask the",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "information about the client should delete that data. Please ask the",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * Firefox Telemetry Team before relying on this topic.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Firefox Telemetry Team before relying on this topic.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   * Here is an example of listening for that event:",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Here is an example of listening for that event:",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   *  const { TelemetryUtils } = ChromeUtils.import(\"resource://gre/modules/TelemetryUtils.jsm\");",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "const { TelemetryUtils } = ChromeUtils.import(\"resource://gre/modules/TelemetryUtils.jsm\");",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 12,
                  "source": "   *  class YourClass {",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "class YourClass {",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 13,
                  "source": "   *    constructor() {",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "    ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "constructor() {",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 14,
                  "source": "   *      Services.obs.addObserver(this, TelemetryUtils.TELEMETRY_UPLOAD_DISABLED_TOPIC);",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Services.obs.addObserver(this, TelemetryUtils.TELEMETRY_UPLOAD_DISABLED_TOPIC);",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 15,
                  "source": "   *    }",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "    ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "}",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 16,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 17,
                  "source": "   *    observe(subject, topic, data) {",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "    ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "observe(subject, topic, data) {",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 18,
                  "source": "   *      if (topic == TelemetryUtils.TELEMETRY_UPLOAD_DISABLED_TOPIC) {",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "if (topic == TelemetryUtils.TELEMETRY_UPLOAD_DISABLED_TOPIC) {",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 19,
                  "source": "   *        // Telemetry was disabled",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "        ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "// Telemetry was disabled",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 20,
                  "source": "   *        // subject and data are both unused",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "        ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "// subject and data are both unused",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 21,
                  "source": "   *      }",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "}",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 22,
                  "source": "   *    }",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "    ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "}",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 23,
                  "source": "   *  }",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "}",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 24,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 25,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ]
        },
        {
          "type": "object-property",
          "line": 49,
          "id": "Preferences"
        },
        {
          "type": "object-method",
          "line": 94,
          "id": "knownClientID",
          "comments": [
            {
              "description": "A fixed valid client ID used when Telemetry upload is disabled.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * A fixed valid client ID used when Telemetry upload is disabled.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "A fixed valid client ID used when Telemetry upload is disabled.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "get",
          "params": []
        },
        {
          "type": "object-method",
          "line": 101,
          "id": "isContentProcess",
          "comments": [
            {
              "description": "True if this is a content process.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * True if this is a content process.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "True if this is a content process.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "get",
          "params": []
        },
        {
          "type": "object-method",
          "line": 109,
          "id": "isTelemetryEnabled",
          "comments": [
            {
              "description": "Returns the state of the Telemetry enabled preference, making sure it correctly evaluates to a boolean type.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Returns the state of the Telemetry enabled preference, making sure",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Returns the state of the Telemetry enabled preference, making sure",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * it correctly evaluates to a boolean type.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "it correctly evaluates to a boolean type.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "get",
          "params": []
        },
        {
          "type": "object-method",
          "line": 119,
          "id": "millisecondsToDays",
          "comments": [
            {
              "description": "Turn a millisecond timestamp into a day timestamp.",
              "tags": [
                {
                  "tag": "param",
                  "name": "aMsec",
                  "type": "",
                  "optional": false,
                  "description": "A number of milliseconds since Unix epoch.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @param aMsec A number of milliseconds since Unix epoch.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "aMsec",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "A number of milliseconds since Unix epoch.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "return",
                  "name": "The",
                  "type": "",
                  "optional": false,
                  "description": "number of whole days since Unix epoch.",
                  "problems": [],
                  "source": [
                    {
                      "number": 5,
                      "source": "   * @return The number of whole days since Unix epoch.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "The",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "number of whole days since Unix epoch.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Turn a millisecond timestamp into a day timestamp.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Turn a millisecond timestamp into a day timestamp.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @param aMsec A number of milliseconds since Unix epoch.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "aMsec",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "A number of milliseconds since Unix epoch.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * @return The number of whole days since Unix epoch.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "The",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "number of whole days since Unix epoch.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "aMsec"
          ]
        },
        {
          "type": "object-method",
          "line": 126,
          "id": "truncateToDays",
          "comments": [
            {
              "description": "Takes a date and returns it truncated to a date with daily precision.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Takes a date and returns it truncated to a date with daily precision.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Takes a date and returns it truncated to a date with daily precision.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "date"
          ]
        },
        {
          "type": "object-method",
          "line": 141,
          "id": "truncateToHours",
          "comments": [
            {
              "description": "Takes a date and returns it truncated to a date with hourly precision.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Takes a date and returns it truncated to a date with hourly precision.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Takes a date and returns it truncated to a date with hourly precision.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "date"
          ]
        },
        {
          "type": "object-method",
          "line": 161,
          "id": "areTimesClose",
          "comments": [
            {
              "description": "Check if the difference between the times is within the provided tolerance.",
              "tags": [
                {
                  "tag": "param",
                  "name": "t1",
                  "type": "Number",
                  "optional": false,
                  "description": "A time in milliseconds.",
                  "problems": [],
                  "source": [
                    {
                      "number": 3,
                      "source": "   * @param {Number} t1 A time in milliseconds.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "t1",
                        "postName": " ",
                        "type": "{Number}",
                        "postType": " ",
                        "description": "A time in milliseconds.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "t2",
                  "type": "Number",
                  "optional": false,
                  "description": "A time in milliseconds.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @param {Number} t2 A time in milliseconds.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "t2",
                        "postName": " ",
                        "type": "{Number}",
                        "postType": " ",
                        "description": "A time in milliseconds.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "tolerance",
                  "type": "Number",
                  "optional": false,
                  "description": "The tolerance, in milliseconds.",
                  "problems": [],
                  "source": [
                    {
                      "number": 5,
                      "source": "   * @param {Number} tolerance The tolerance, in milliseconds.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "tolerance",
                        "postName": " ",
                        "type": "{Number}",
                        "postType": " ",
                        "description": "The tolerance, in milliseconds.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "return",
                  "name": "True",
                  "type": "Boolean",
                  "optional": false,
                  "description": "if the absolute time difference is within the tolerance, false otherwise.",
                  "problems": [],
                  "source": [
                    {
                      "number": 6,
                      "source": "   * @return {Boolean} True if the absolute time difference is within the tolerance, false",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "True",
                        "postName": " ",
                        "type": "{Boolean}",
                        "postType": " ",
                        "description": "if the absolute time difference is within the tolerance, false",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "   *                   otherwise.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "                   ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "otherwise.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 9,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Check if the difference between the times is within the provided tolerance.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Check if the difference between the times is within the provided tolerance.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * @param {Number} t1 A time in milliseconds.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "t1",
                    "postName": " ",
                    "type": "{Number}",
                    "postType": " ",
                    "description": "A time in milliseconds.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @param {Number} t2 A time in milliseconds.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "t2",
                    "postName": " ",
                    "type": "{Number}",
                    "postType": " ",
                    "description": "A time in milliseconds.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * @param {Number} tolerance The tolerance, in milliseconds.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "tolerance",
                    "postName": " ",
                    "type": "{Number}",
                    "postType": " ",
                    "description": "The tolerance, in milliseconds.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * @return {Boolean} True if the absolute time difference is within the tolerance, false",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "True",
                    "postName": " ",
                    "type": "{Boolean}",
                    "postType": " ",
                    "description": "if the absolute time difference is within the tolerance, false",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   *                   otherwise.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "                   ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "otherwise.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "t1",
            "t2",
            "tolerance"
          ]
        },
        {
          "type": "object-method",
          "line": 170,
          "id": "getNextMidnight",
          "comments": [
            {
              "description": "Get the next midnight for a date.",
              "tags": [
                {
                  "tag": "param",
                  "name": "date",
                  "type": "Object",
                  "optional": false,
                  "description": "The date object to check.",
                  "problems": [],
                  "source": [
                    {
                      "number": 3,
                      "source": "   * @param {Object} date The date object to check.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "date",
                        "postName": " ",
                        "type": "{Object}",
                        "postType": " ",
                        "description": "The date object to check.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "return",
                  "name": "The",
                  "type": "Object",
                  "optional": false,
                  "description": "Date object representing the next midnight.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @return {Object} The Date object representing the next midnight.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "The",
                        "postName": " ",
                        "type": "{Object}",
                        "postType": " ",
                        "description": "Date object representing the next midnight.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 5,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Get the next midnight for a date.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Get the next midnight for a date.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * @param {Object} date The date object to check.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "date",
                    "postName": " ",
                    "type": "{Object}",
                    "postType": " ",
                    "description": "The date object to check.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @return {Object} The Date object representing the next midnight.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "The",
                    "postName": " ",
                    "type": "{Object}",
                    "postType": " ",
                    "description": "Date object representing the next midnight.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "date"
          ]
        },
        {
          "type": "object-method",
          "line": 183,
          "id": "getNearestMidnight",
          "comments": [
            {
              "description": "Get the midnight which is closer to the provided date.",
              "tags": [
                {
                  "tag": "param",
                  "name": "date",
                  "type": "Object",
                  "optional": false,
                  "description": "The date object to check.",
                  "problems": [],
                  "source": [
                    {
                      "number": 3,
                      "source": "   * @param {Object} date The date object to check.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "date",
                        "postName": " ",
                        "type": "{Object}",
                        "postType": " ",
                        "description": "The date object to check.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "tolerance",
                  "type": "Number",
                  "optional": false,
                  "description": "The tolerance within we find the closest midnight.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @param {Number} tolerance The tolerance within we find the closest midnight.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "tolerance",
                        "postName": " ",
                        "type": "{Number}",
                        "postType": " ",
                        "description": "The tolerance within we find the closest midnight.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "return",
                  "name": "The",
                  "type": "Object",
                  "optional": false,
                  "description": "Date object representing the closes midnight, or null if midnight is not within the midnight tolerance.",
                  "problems": [],
                  "source": [
                    {
                      "number": 5,
                      "source": "   * @return {Object} The Date object representing the closes midnight, or null if midnight",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "The",
                        "postName": " ",
                        "type": "{Object}",
                        "postType": " ",
                        "description": "Date object representing the closes midnight, or null if midnight",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "   *                  is not within the midnight tolerance.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "                  ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "is not within the midnight tolerance.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Get the midnight which is closer to the provided date.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Get the midnight which is closer to the provided date.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * @param {Object} date The date object to check.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "date",
                    "postName": " ",
                    "type": "{Object}",
                    "postType": " ",
                    "description": "The date object to check.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @param {Number} tolerance The tolerance within we find the closest midnight.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "tolerance",
                    "postName": " ",
                    "type": "{Number}",
                    "postType": " ",
                    "description": "The tolerance within we find the closest midnight.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * @return {Object} The Date object representing the closes midnight, or null if midnight",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "The",
                    "postName": " ",
                    "type": "{Object}",
                    "postType": " ",
                    "description": "Date object representing the closes midnight, or null if midnight",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *                  is not within the midnight tolerance.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "                  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "is not within the midnight tolerance.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "date",
            "tolerance"
          ]
        },
        {
          "type": "object-method",
          "line": 198,
          "id": "generateUUID",
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 210,
          "id": "getElapsedTimeInMonths",
          "comments": [
            {
              "description": "Find how many months passed between two dates.",
              "tags": [
                {
                  "tag": "param",
                  "name": "aStartDate",
                  "type": "Object",
                  "optional": false,
                  "description": "The starting date.",
                  "problems": [],
                  "source": [
                    {
                      "number": 3,
                      "source": "   * @param {Object} aStartDate The starting date.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "aStartDate",
                        "postName": " ",
                        "type": "{Object}",
                        "postType": " ",
                        "description": "The starting date.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "aEndDate",
                  "type": "Object",
                  "optional": false,
                  "description": "The ending date.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @param {Object} aEndDate The ending date.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "aEndDate",
                        "postName": " ",
                        "type": "{Object}",
                        "postType": " ",
                        "description": "The ending date.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "return",
                  "name": "The",
                  "type": "Integer",
                  "optional": false,
                  "description": "number of months between the two dates.",
                  "problems": [],
                  "source": [
                    {
                      "number": 5,
                      "source": "   * @return {Integer} The number of months between the two dates.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "The",
                        "postName": " ",
                        "type": "{Integer}",
                        "postType": " ",
                        "description": "number of months between the two dates.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Find how many months passed between two dates.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Find how many months passed between two dates.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * @param {Object} aStartDate The starting date.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "aStartDate",
                    "postName": " ",
                    "type": "{Object}",
                    "postType": " ",
                    "description": "The starting date.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @param {Object} aEndDate The ending date.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "aEndDate",
                    "postName": " ",
                    "type": "{Object}",
                    "postType": " ",
                    "description": "The ending date.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * @return {Integer} The number of months between the two dates.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "The",
                    "postName": " ",
                    "type": "{Integer}",
                    "postType": " ",
                    "description": "number of months between the two dates.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "aStartDate",
            "aEndDate"
          ]
        },
        {
          "type": "object-method",
          "line": 224,
          "id": "toLocalTimeISOString",
          "comments": [
            {
              "description": "Date.toISOString() gives us UTC times, this gives us local times in the ISO date format. See http://www.w3.org/TR/NOTE-datetime",
              "tags": [
                {
                  "tag": "param",
                  "name": "date",
                  "type": "Object",
                  "optional": false,
                  "description": "The input date.",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @param {Object} date The input date.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "date",
                        "postName": " ",
                        "type": "{Object}",
                        "postType": " ",
                        "description": "The input date.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "return",
                  "name": "The",
                  "type": "String",
                  "optional": false,
                  "description": "local time ISO string.",
                  "problems": [],
                  "source": [
                    {
                      "number": 5,
                      "source": "   * @return {String} The local time ISO string.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "The",
                        "postName": " ",
                        "type": "{String}",
                        "postType": " ",
                        "description": "local time ISO string.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Date.toISOString() gives us UTC times, this gives us local times in",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Date.toISOString() gives us UTC times, this gives us local times in",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * the ISO date format. See http://www.w3.org/TR/NOTE-datetime",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "the ISO date format. See http://www.w3.org/TR/NOTE-datetime",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @param {Object} date The input date.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "date",
                    "postName": " ",
                    "type": "{Object}",
                    "postType": " ",
                    "description": "The input date.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * @return {String} The local time ISO string.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "The",
                    "postName": " ",
                    "type": "{String}",
                    "postType": " ",
                    "description": "local time ISO string.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "date"
          ]
        },
        {
          "type": "object-method",
          "line": 259,
          "id": "monotonicNow",
          "comments": [
            {
              "description": "",
              "tags": [
                {
                  "tag": "returns",
                  "name": "The",
                  "type": "number",
                  "optional": false,
                  "description": "monotonic time since the process start or (non-monotonic) Date value if this fails back.",
                  "problems": [],
                  "source": [
                    {
                      "number": 2,
                      "source": "   * @returns {number} The monotonic time since the process start",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@returns",
                        "postTag": " ",
                        "name": "The",
                        "postName": " ",
                        "type": "{number}",
                        "postType": " ",
                        "description": "monotonic time since the process start",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 3,
                      "source": "   * or (non-monotonic) Date value if this fails back.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "or (non-monotonic) Date value if this fails back.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 4,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 5,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * @returns {number} The monotonic time since the process start",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@returns",
                    "postTag": " ",
                    "name": "The",
                    "postName": " ",
                    "type": "{number}",
                    "postType": " ",
                    "description": "monotonic time since the process start",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * or (non-monotonic) Date value if this fails back.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "or (non-monotonic) Date value if this fails back.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 271,
          "id": "getUpdateChannel",
          "comments": [
            {
              "description": "",
              "tags": [
                {
                  "tag": "returns",
                  "name": "The",
                  "type": "string",
                  "optional": false,
                  "description": "name of the update channel to report in telemetry. By default, this is the same as the name of the channel that the browser uses to download its updates. However in certain situations, a single update channel provides multiple (distinct) build types, that need to be distinguishable on Telemetry.",
                  "problems": [],
                  "source": [
                    {
                      "number": 2,
                      "source": "   * @returns {string} The name of the update channel to report",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@returns",
                        "postTag": " ",
                        "name": "The",
                        "postName": " ",
                        "type": "{string}",
                        "postType": " ",
                        "description": "name of the update channel to report",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 3,
                      "source": "   * in telemetry.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "in telemetry.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 4,
                      "source": "   * By default, this is the same as the name of the channel that",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "By default, this is the same as the name of the channel that",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 5,
                      "source": "   * the browser uses to download its updates. However in certain",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "the browser uses to download its updates. However in certain",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "   * situations, a single update channel provides multiple (distinct)",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "situations, a single update channel provides multiple (distinct)",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "   * build types, that need to be distinguishable on Telemetry.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "build types, that need to be distinguishable on Telemetry.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 9,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * @returns {string} The name of the update channel to report",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@returns",
                    "postTag": " ",
                    "name": "The",
                    "postName": " ",
                    "type": "{string}",
                    "postType": " ",
                    "description": "name of the update channel to report",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * in telemetry.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "in telemetry.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * By default, this is the same as the name of the channel that",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "By default, this is the same as the name of the channel that",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * the browser uses to download its updates. However in certain",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "the browser uses to download its updates. However in certain",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * situations, a single update channel provides multiple (distinct)",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "situations, a single update channel provides multiple (distinct)",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   * build types, that need to be distinguishable on Telemetry.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "build types, that need to be distinguishable on Telemetry.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        }
      ]
    }
  }
]