[
  {
    "type": "variable-declaration",
    "id": "Sanitizer",
    "line": 35,
    "typeEstimation": {
      "type": "object-estimation",
      "keys": [
        {
          "type": "object-property",
          "line": 39,
          "id": "PREF_SANITIZE_ON_SHUTDOWN",
          "comments": [
            {
              "description": "Whether we should sanitize on shutdown.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Whether we should sanitize on shutdown.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Whether we should sanitize on shutdown.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ]
        },
        {
          "type": "object-property",
          "line": 47,
          "id": "PREF_PENDING_SANITIZATIONS",
          "comments": [
            {
              "description": "During a sanitization this is set to a JSON containing an array of the pending sanitizations. This allows to retry sanitizations on startup in case they dind't run or were interrupted by a crash. Use addPendingSanitization and removePendingSanitization to manage it.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * During a sanitization this is set to a JSON containing an array of the",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "During a sanitization this is set to a JSON containing an array of the",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * pending sanitizations. This allows to retry sanitizations on startup in",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "pending sanitizations. This allows to retry sanitizations on startup in",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * case they dind't run or were interrupted by a crash.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "case they dind't run or were interrupted by a crash.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * Use addPendingSanitization and removePendingSanitization to manage it.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Use addPendingSanitization and removePendingSanitization to manage it.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ]
        },
        {
          "type": "object-property",
          "line": 52,
          "id": "PREF_CPD_BRANCH",
          "comments": [
            {
              "description": "Pref branches to fetch sanitization options from.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Pref branches to fetch sanitization options from.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Pref branches to fetch sanitization options from.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ]
        },
        {
          "type": "object-property",
          "line": 53,
          "id": "PREF_SHUTDOWN_BRANCH"
        },
        {
          "type": "object-property",
          "line": 59,
          "id": "PREF_TIMESPAN",
          "comments": [
            {
              "description": "The fallback timestamp used when no argument is given to Sanitizer.getClearRange.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * The fallback timestamp used when no argument is given to",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "The fallback timestamp used when no argument is given to",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * Sanitizer.getClearRange.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Sanitizer.getClearRange.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ]
        },
        {
          "type": "object-property",
          "line": 65,
          "id": "PREF_NEWTAB_SEGREGATION",
          "comments": [
            {
              "description": "Pref to newTab segregation. If true, on shutdown, the private container used in about:newtab is cleaned up.  Exposed because used in tests.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Pref to newTab segregation. If true, on shutdown, the private container",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Pref to newTab segregation. If true, on shutdown, the private container",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * used in about:newtab is cleaned up.  Exposed because used in tests.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "used in about:newtab is cleaned up.  Exposed because used in tests.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ]
        },
        {
          "type": "object-property",
          "line": 72,
          "id": "TIMESPAN_EVERYTHING",
          "comments": [
            {
              "description": "Time span constants corresponding to values of the privacy.sanitize.timeSpan pref.  Used to determine how much history to clear, for various items",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Time span constants corresponding to values of the privacy.sanitize.timeSpan",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Time span constants corresponding to values of the privacy.sanitize.timeSpan",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * pref.  Used to determine how much history to clear, for various items",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "pref.  Used to determine how much history to clear, for various items",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "typeEstimation": {
            "type": "number-estimation",
            "defaultValue": 0
          }
        },
        {
          "type": "object-property",
          "line": 73,
          "id": "TIMESPAN_HOUR",
          "typeEstimation": {
            "type": "number-estimation",
            "defaultValue": 1
          }
        },
        {
          "type": "object-property",
          "line": 74,
          "id": "TIMESPAN_2HOURS",
          "typeEstimation": {
            "type": "number-estimation",
            "defaultValue": 2
          }
        },
        {
          "type": "object-property",
          "line": 75,
          "id": "TIMESPAN_4HOURS",
          "typeEstimation": {
            "type": "number-estimation",
            "defaultValue": 3
          }
        },
        {
          "type": "object-property",
          "line": 76,
          "id": "TIMESPAN_TODAY",
          "typeEstimation": {
            "type": "number-estimation",
            "defaultValue": 4
          }
        },
        {
          "type": "object-property",
          "line": 77,
          "id": "TIMESPAN_5MIN",
          "typeEstimation": {
            "type": "number-estimation",
            "defaultValue": 5
          }
        },
        {
          "type": "object-property",
          "line": 78,
          "id": "TIMESPAN_24HOURS",
          "typeEstimation": {
            "type": "number-estimation",
            "defaultValue": 6
          }
        },
        {
          "type": "object-property",
          "line": 86,
          "id": "shouldSanitizeOnShutdown",
          "comments": [
            {
              "description": "Whether we should sanitize on shutdown. When this is set, a pending sanitization should also be added and removed when shutdown sanitization is complete. This allows to retry incomplete sanitizations on startup.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Whether we should sanitize on shutdown.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Whether we should sanitize on shutdown.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * When this is set, a pending sanitization should also be added and removed",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "When this is set, a pending sanitization should also be added and removed",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * when shutdown sanitization is complete. This allows to retry incomplete",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "when shutdown sanitization is complete. This allows to retry incomplete",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * sanitizations on startup.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "sanitizations on startup.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ]
        },
        {
          "type": "object-property",
          "line": 91,
          "id": "shouldSanitizeNewTabContainer",
          "comments": [
            {
              "description": "Whether we should sanitize the private container for about:newtab.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Whether we should sanitize the private container for about:newtab.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Whether we should sanitize the private container for about:newtab.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ]
        },
        {
          "type": "object-method",
          "line": 101,
          "id": "showUI",
          "comments": [
            {
              "description": "Shows a sanitization dialog to the user. Returns after the dialog box has closed.",
              "tags": [
                {
                  "tag": "param",
                  "name": "parentWindow",
                  "type": "",
                  "optional": false,
                  "description": "the browser window to use as parent for the created dialog.",
                  "problems": [],
                  "source": [
                    {
                      "number": 5,
                      "source": "   * @param parentWindow the browser window to use as parent for the created",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "parentWindow",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "the browser window to use as parent for the created",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "   *        dialog.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "        ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "dialog.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "throws",
                  "name": "if",
                  "type": "",
                  "optional": false,
                  "description": "parentWindow is undefined or doesn't have a gDialogBox.",
                  "problems": [],
                  "source": [
                    {
                      "number": 7,
                      "source": "   * @throws if parentWindow is undefined or doesn't have a gDialogBox.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@throws",
                        "postTag": " ",
                        "name": "if",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "parentWindow is undefined or doesn't have a gDialogBox.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 9,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Shows a sanitization dialog to the user. Returns after the dialog box has",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Shows a sanitization dialog to the user. Returns after the dialog box has",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * closed.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "closed.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * @param parentWindow the browser window to use as parent for the created",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "parentWindow",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "the browser window to use as parent for the created",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *        dialog.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "        ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "dialog.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   * @throws if parentWindow is undefined or doesn't have a gDialogBox.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@throws",
                    "postTag": " ",
                    "name": "if",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "parentWindow is undefined or doesn't have a gDialogBox.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "parentWindow"
          ]
        },
        {
          "type": "object-method",
          "line": 129,
          "id": "onStartup",
          "comments": [
            {
              "description": "Performs startup tasks: - Checks if sanitizations were not completed during the last session. - Registers sanitize-on-shutdown.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Performs startup tasks:",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Performs startup tasks:",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *  - Checks if sanitizations were not completed during the last session.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- Checks if sanitizations were not completed during the last session.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   *  - Registers sanitize-on-shutdown.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- Registers sanitize-on-shutdown.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 211,
          "id": "getClearRange",
          "comments": [
            {
              "description": "Returns a 2 element array representing the start and end times, in the uSec-since-epoch format that PRTime likes. If we should clear everything, this function returns null.",
              "tags": [
                {
                  "tag": "param",
                  "name": "ts",
                  "type": "",
                  "optional": false,
                  "description": "[optional] a timespan to convert to start and end time. Falls back to the privacy.sanitize.timeSpan preference if this argument is omitted. If this argument is provided, it has to be one of the Sanitizer.TIMESPAN_* constants. This function will throw an error otherwise.",
                  "problems": [],
                  "source": [
                    {
                      "number": 6,
                      "source": "   * @param ts [optional] a timespan to convert to start and end time.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "ts",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "[optional] a timespan to convert to start and end time.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "   *                      Falls back to the privacy.sanitize.timeSpan preference",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "                      ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "Falls back to the privacy.sanitize.timeSpan preference",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "   *                      if this argument is omitted.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "                      ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "if this argument is omitted.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 9,
                      "source": "   *                      If this argument is provided, it has to be one of the",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "                      ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "If this argument is provided, it has to be one of the",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 10,
                      "source": "   *                      Sanitizer.TIMESPAN_* constants. This function will",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "                      ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "Sanitizer.TIMESPAN_* constants. This function will",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 11,
                      "source": "   *                      throw an error otherwise.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "                      ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "throw an error otherwise.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 12,
                      "source": "   *",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "return",
                  "name": "a",
                  "type": "Array",
                  "optional": false,
                  "description": "2-element Array containing the start and end times.",
                  "problems": [],
                  "source": [
                    {
                      "number": 13,
                      "source": "   * @return {Array} a 2-element Array containing the start and end times.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "a",
                        "postName": " ",
                        "type": "{Array}",
                        "postType": " ",
                        "description": "2-element Array containing the start and end times.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 14,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 15,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Returns a 2 element array representing the start and end times,",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Returns a 2 element array representing the start and end times,",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * in the uSec-since-epoch format that PRTime likes. If we should",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "in the uSec-since-epoch format that PRTime likes. If we should",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * clear everything, this function returns null.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "clear everything, this function returns null.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * @param ts [optional] a timespan to convert to start and end time.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "ts",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "[optional] a timespan to convert to start and end time.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   *                      Falls back to the privacy.sanitize.timeSpan preference",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "                      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Falls back to the privacy.sanitize.timeSpan preference",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   *                      if this argument is omitted.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "                      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "if this argument is omitted.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   *                      If this argument is provided, it has to be one of the",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "                      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "If this argument is provided, it has to be one of the",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   *                      Sanitizer.TIMESPAN_* constants. This function will",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "                      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Sanitizer.TIMESPAN_* constants. This function will",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "   *                      throw an error otherwise.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "                      ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "throw an error otherwise.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 12,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 13,
                  "source": "   * @return {Array} a 2-element Array containing the start and end times.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "a",
                    "postName": " ",
                    "type": "{Array}",
                    "postType": " ",
                    "description": "2-element Array containing the start and end times.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 14,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 15,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "ts"
          ]
        },
        {
          "type": "object-method",
          "line": 275,
          "id": "sanitize",
          "comments": [
            {
              "description": "Deletes privacy sensitive data in a batch, according to user preferences. Returns a promise which is resolved if no errors occurred.  If an error occurs, a message is reported to the console and all other items are still cleared before the promise is finally rejected.",
              "tags": [
                {
                  "tag": "param",
                  "name": "optional",
                  "type": "",
                  "optional": true,
                  "description": "itemsToClear Array of items to be cleared. if specified only those items get cleared, irrespectively of the preference settings.",
                  "problems": [],
                  "source": [
                    {
                      "number": 7,
                      "source": "   * @param [optional] itemsToClear",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "[optional]",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "itemsToClear",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "   *        Array of items to be cleared. if specified only those",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "        ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "Array of items to be cleared. if specified only those",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 9,
                      "source": "   *        items get cleared, irrespectively of the preference settings.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "        ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "items get cleared, irrespectively of the preference settings.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "optional",
                  "type": "",
                  "optional": true,
                  "description": "options Object whose properties are options for this sanitization: - ignoreTimespan (default: true): Time span only makes sense in certain cases.  Consumers who want to only clear some private data can opt in by setting this to false, and can optionally specify a specific range. If timespan is not ignored, and range is not set, sanitize() will use the value of the timespan pref to determine a range. - range (default: null): array-tuple of [from, to] timestamps - privateStateForNewWindow (default: \"non-private\"): when clearing open windows, defines the private state for the newly opened window.",
                  "problems": [],
                  "source": [
                    {
                      "number": 10,
                      "source": "   * @param [optional] options",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "[optional]",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "options",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 11,
                      "source": "   *        Object whose properties are options for this sanitization:",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "        ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "Object whose properties are options for this sanitization:",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 12,
                      "source": "   *         - ignoreTimespan (default: true): Time span only makes sense in",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "         ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- ignoreTimespan (default: true): Time span only makes sense in",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 13,
                      "source": "   *           certain cases.  Consumers who want to only clear some private",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "           ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "certain cases.  Consumers who want to only clear some private",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 14,
                      "source": "   *           data can opt in by setting this to false, and can optionally",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "           ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "data can opt in by setting this to false, and can optionally",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 15,
                      "source": "   *           specify a specific range.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "           ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "specify a specific range.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 16,
                      "source": "   *           If timespan is not ignored, and range is not set, sanitize() will",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "           ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "If timespan is not ignored, and range is not set, sanitize() will",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 17,
                      "source": "   *           use the value of the timespan pref to determine a range.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "           ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "use the value of the timespan pref to determine a range.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 18,
                      "source": "   *         - range (default: null): array-tuple of [from, to] timestamps",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "         ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- range (default: null): array-tuple of [from, to] timestamps",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 19,
                      "source": "   *         - privateStateForNewWindow (default: \"non-private\"): when clearing",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "         ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "- privateStateForNewWindow (default: \"non-private\"): when clearing",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 20,
                      "source": "   *           open windows, defines the private state for the newly opened window.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "           ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "open windows, defines the private state for the newly opened window.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "returns",
                  "name": "An",
                  "type": "object",
                  "optional": false,
                  "description": "object containing debug information about the sanitization progress. This state object is also used as AsyncShutdown metadata.",
                  "problems": [],
                  "source": [
                    {
                      "number": 21,
                      "source": "   * @returns {object} An object containing debug information about the",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@returns",
                        "postTag": " ",
                        "name": "An",
                        "postName": " ",
                        "type": "{object}",
                        "postType": " ",
                        "description": "object containing debug information about the",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 22,
                      "source": "   *          sanitization progress. This state object is also used as",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "          ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "sanitization progress. This state object is also used as",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 23,
                      "source": "   *          AsyncShutdown metadata.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": "          ",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "AsyncShutdown metadata.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 24,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 25,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Deletes privacy sensitive data in a batch, according to user preferences.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Deletes privacy sensitive data in a batch, according to user preferences.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * Returns a promise which is resolved if no errors occurred.  If an error",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Returns a promise which is resolved if no errors occurred.  If an error",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * occurs, a message is reported to the console and all other items are still",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "occurs, a message is reported to the console and all other items are still",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * cleared before the promise is finally rejected.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "cleared before the promise is finally rejected.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   * @param [optional] itemsToClear",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "[optional]",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "itemsToClear",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   *        Array of items to be cleared. if specified only those",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "        ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Array of items to be cleared. if specified only those",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   *        items get cleared, irrespectively of the preference settings.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "        ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "items get cleared, irrespectively of the preference settings.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   * @param [optional] options",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "[optional]",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "options",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "   *        Object whose properties are options for this sanitization:",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "        ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Object whose properties are options for this sanitization:",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 12,
                  "source": "   *         - ignoreTimespan (default: true): Time span only makes sense in",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "         ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- ignoreTimespan (default: true): Time span only makes sense in",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 13,
                  "source": "   *           certain cases.  Consumers who want to only clear some private",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "           ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "certain cases.  Consumers who want to only clear some private",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 14,
                  "source": "   *           data can opt in by setting this to false, and can optionally",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "           ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "data can opt in by setting this to false, and can optionally",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 15,
                  "source": "   *           specify a specific range.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "           ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "specify a specific range.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 16,
                  "source": "   *           If timespan is not ignored, and range is not set, sanitize() will",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "           ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "If timespan is not ignored, and range is not set, sanitize() will",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 17,
                  "source": "   *           use the value of the timespan pref to determine a range.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "           ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "use the value of the timespan pref to determine a range.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 18,
                  "source": "   *         - range (default: null): array-tuple of [from, to] timestamps",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "         ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- range (default: null): array-tuple of [from, to] timestamps",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 19,
                  "source": "   *         - privateStateForNewWindow (default: \"non-private\"): when clearing",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "         ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- privateStateForNewWindow (default: \"non-private\"): when clearing",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 20,
                  "source": "   *           open windows, defines the private state for the newly opened window.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "           ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "open windows, defines the private state for the newly opened window.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 21,
                  "source": "   * @returns {object} An object containing debug information about the",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@returns",
                    "postTag": " ",
                    "name": "An",
                    "postName": " ",
                    "type": "{object}",
                    "postType": " ",
                    "description": "object containing debug information about the",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 22,
                  "source": "   *          sanitization progress. This state object is also used as",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "          ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "sanitization progress. This state object is also used as",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 23,
                  "source": "   *          AsyncShutdown metadata.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "          ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "AsyncShutdown metadata.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 24,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 25,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 308,
          "id": "observe",
          "kind": "method",
          "params": [
            "subject",
            "topic",
            "data"
          ]
        },
        {
          "type": "object-property",
          "line": 345,
          "id": "QueryInterface"
        },
        {
          "type": "object-method",
          "line": 351,
          "id": "runSanitizeOnShutdown",
          "comments": [
            {
              "description": "This method is meant to be used by tests.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " This method is meant to be used by tests.",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "This method is meant to be used by tests.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-property",
          "line": 369,
          "id": "items",
          "comments": [
            {
              "description": "When making any changes to the sanitize implementations here,",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " When making any changes to the sanitize implementations here,",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "When making any changes to the sanitize implementations here,",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "please check whether the changes are applicable to Android",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " please check whether the changes are applicable to Android",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "please check whether the changes are applicable to Android",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            },
            {
              "description": "(mobile/android/modules/geckoview/GeckoViewStorageController.jsm) as well.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": " (mobile/android/modules/geckoview/GeckoViewStorageController.jsm) as well.",
                  "tokens": {
                    "start": " ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "(mobile/android/modules/geckoview/GeckoViewStorageController.jsm) as well.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "typeEstimation": {
            "type": "object-estimation",
            "keys": [
              {
                "type": "object-property",
                "line": 370,
                "id": "cache",
                "typeEstimation": {
                  "type": "object-estimation",
                  "keys": [
                    {
                      "type": "object-method",
                      "line": 371,
                      "id": "clear",
                      "kind": "method",
                      "params": [
                        "range"
                      ]
                    }
                  ]
                }
              },
              {
                "type": "object-property",
                "line": 379,
                "id": "cookies",
                "typeEstimation": {
                  "type": "object-estimation",
                  "keys": [
                    {
                      "type": "object-method",
                      "line": 380,
                      "id": "clear",
                      "kind": "method",
                      "params": [
                        "range",
                        "clearHonoringExceptions"
                      ]
                    }
                  ]
                }
              },
              {
                "type": "object-property",
                "line": 404,
                "id": "offlineApps",
                "typeEstimation": {
                  "type": "object-estimation",
                  "keys": [
                    {
                      "type": "object-method",
                      "line": 405,
                      "id": "clear",
                      "kind": "method",
                      "params": [
                        "range",
                        "clearHonoringExceptions"
                      ]
                    }
                  ]
                }
              },
              {
                "type": "object-property",
                "line": 425,
                "id": "history",
                "typeEstimation": {
                  "type": "object-estimation",
                  "keys": [
                    {
                      "type": "object-method",
                      "line": 426,
                      "id": "clear",
                      "kind": "method",
                      "params": [
                        "range"
                      ]
                    }
                  ]
                }
              },
              {
                "type": "object-property",
                "line": 462,
                "id": "formdata",
                "typeEstimation": {
                  "type": "object-estimation",
                  "keys": [
                    {
                      "type": "object-method",
                      "line": 463,
                      "id": "clear",
                      "kind": "method",
                      "params": [
                        "range"
                      ]
                    }
                  ]
                }
              },
              {
                "type": "object-property",
                "line": 521,
                "id": "downloads",
                "typeEstimation": {
                  "type": "object-estimation",
                  "keys": [
                    {
                      "type": "object-method",
                      "line": 522,
                      "id": "clear",
                      "kind": "method",
                      "params": [
                        "range"
                      ]
                    }
                  ]
                }
              },
              {
                "type": "object-property",
                "line": 530,
                "id": "sessions",
                "typeEstimation": {
                  "type": "object-estimation",
                  "keys": [
                    {
                      "type": "object-method",
                      "line": 531,
                      "id": "clear",
                      "kind": "method",
                      "params": [
                        "range"
                      ]
                    }
                  ]
                }
              },
              {
                "type": "object-property",
                "line": 543,
                "id": "siteSettings",
                "typeEstimation": {
                  "type": "object-estimation",
                  "keys": [
                    {
                      "type": "object-method",
                      "line": 544,
                      "id": "clear",
                      "kind": "method",
                      "params": [
                        "range"
                      ]
                    }
                  ]
                }
              },
              {
                "type": "object-property",
                "line": 560,
                "id": "openWindows",
                "typeEstimation": {
                  "type": "object-estimation",
                  "keys": [
                    {
                      "type": "object-method",
                      "line": 561,
                      "id": "_canCloseWindow",
                      "kind": "method",
                      "params": [
                        "win"
                      ]
                    },
                    {
                      "type": "object-method",
                      "line": 571,
                      "id": "_resetAllWindowClosures",
                      "kind": "method",
                      "params": [
                        "windowList"
                      ]
                    },
                    {
                      "type": "object-method",
                      "line": 576,
                      "id": "clear",
                      "kind": "method",
                      "params": [
                        "range"
                      ]
                    }
                  ]
                }
              },
              {
                "type": "object-property",
                "line": 705,
                "id": "pluginData",
                "typeEstimation": {
                  "type": "object-estimation",
                  "keys": [
                    {
                      "type": "object-method",
                      "line": 706,
                      "id": "clear",
                      "kind": "method",
                      "params": [
                        "range"
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    }
  }
]