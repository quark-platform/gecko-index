[
  {
    "type": "variable-declaration",
    "id": "RecipeRunner",
    "line": 83,
    "typeEstimation": {
      "type": "object-estimation",
      "keys": [
        {
          "type": "object-property",
          "line": 84,
          "id": "initializedPromise"
        },
        {
          "type": "object-method",
          "line": 86,
          "id": "init",
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 141,
          "id": "enable",
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 149,
          "id": "disable",
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 158,
          "id": "watchPrefs",
          "comments": [
            {
              "description": "Watch for prefs to change, and call this.observer when they do",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "* Watch for prefs to change, and call this.observer when they do ",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Watch for prefs to change, and call this.observer when they do ",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 166,
          "id": "unwatchPrefs",
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 173,
          "id": "observe",
          "comments": [
            {
              "description": "When prefs change, this is fired",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "* When prefs change, this is fired ",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "When prefs change, this is fired ",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "subject",
            "topic",
            "data"
          ]
        },
        {
          "type": "object-method",
          "line": 200,
          "id": "checkPrefs",
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 227,
          "id": "registerTimer",
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 234,
          "id": "unregisterTimer",
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 238,
          "id": "setUpRemoteSettings",
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 256,
          "id": "onSync",
          "comments": [
            {
              "description": "Called when our Remote Settings collection is updated",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "* Called when our Remote Settings collection is updated ",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Called when our Remote Settings collection is updated ",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 287,
          "id": "updateRunInterval",
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 295,
          "id": "run",
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 374,
          "id": "getFilterContext",
          "kind": "method",
          "params": [
            "recipe"
          ]
        },
        {
          "type": "object-method",
          "line": 394,
          "id": "getCapabilities",
          "comments": [
            {
              "description": "Return the set of capabilities this runner has. This is used to pre-filter recipes that aren't compatible with this client.",
              "tags": [
                {
                  "tag": "returns",
                  "name": "The",
                  "type": "Set<String>",
                  "optional": false,
                  "description": "capabilities supported by this client.",
                  "problems": [],
                  "source": [
                    {
                      "number": 6,
                      "source": "   * @returns {Set<String>} The capabilities supported by this client.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@returns",
                        "postTag": " ",
                        "name": "The",
                        "postName": " ",
                        "type": "{Set<String>}",
                        "postType": " ",
                        "description": "capabilities supported by this client.",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Return the set of capabilities this runner has.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Return the set of capabilities this runner has.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * This is used to pre-filter recipes that aren't compatible with this client.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "This is used to pre-filter recipes that aren't compatible with this client.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * @returns {Set<String>} The capabilities supported by this client.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@returns",
                    "postTag": " ",
                    "name": "The",
                    "postName": " ",
                    "type": "{Set<String>}",
                    "postType": " ",
                    "description": "capabilities supported by this client.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 471,
          "id": "getRecipeSuitability",
          "comments": [
            {
              "description": "Decide if a recipe is suitable to run, and returns a value from `BaseAction.suitability`. This checks several things in order: - recipe signature - capabilities - filter expression If the provided signature does not match the provided recipe, then `SIGNATURE_ERROR` is returned. Recipes with this suitability should not be trusted. These recipes are included so that temporary signature errors on the server can be handled intelligently by actions. Capabilities are a simple set of strings in the recipe. If the Normandy client has all of the capabilities listed, then execution continues. If not, then `CAPABILITY_MISMATCH` is returned. Recipes with this suitability should be considered incompatible and treated with caution. If the capabilities check passes, then the filter expression is evaluated against the current environment. The result of the expression is cast to a boolean. If it is true, then `FILTER_MATCH` is returned. If not, then `FILTER_MISMATCH` is returned. If there is an error while evaluating the recipe's filter, `FILTER_ERROR` is returned instead.",
              "tags": [
                {
                  "tag": "param",
                  "name": "recipe",
                  "type": "object",
                  "optional": false,
                  "description": "",
                  "problems": [],
                  "source": [
                    {
                      "number": 28,
                      "source": "   * @param {object} recipe",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "recipe",
                        "postName": "",
                        "type": "{object}",
                        "postType": " ",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "signature",
                  "type": "object",
                  "optional": false,
                  "description": "",
                  "problems": [],
                  "source": [
                    {
                      "number": 29,
                      "source": "   * @param {object} signature",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "signature",
                        "postName": "",
                        "type": "{object}",
                        "postType": " ",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "recipe.filter_expression",
                  "type": "string",
                  "optional": false,
                  "description": "The expression to evaluate against the environment.",
                  "problems": [],
                  "source": [
                    {
                      "number": 30,
                      "source": "   * @param {string} recipe.filter_expression The expression to evaluate against the environment.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "recipe.filter_expression",
                        "postName": " ",
                        "type": "{string}",
                        "postType": " ",
                        "description": "The expression to evaluate against the environment.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "param",
                  "name": "runnerCapabilities",
                  "type": "Set<String>",
                  "optional": false,
                  "description": "The capabilities provided by this runner.",
                  "problems": [],
                  "source": [
                    {
                      "number": 31,
                      "source": "   * @param {Set<String>} runnerCapabilities The capabilities provided by this runner.",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "runnerCapabilities",
                        "postName": " ",
                        "type": "{Set<String>}",
                        "postType": " ",
                        "description": "The capabilities provided by this runner.",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "return",
                  "name": "The",
                  "type": "Promise<BaseAction.suitability>",
                  "optional": false,
                  "description": "recipe's suitability",
                  "problems": [],
                  "source": [
                    {
                      "number": 32,
                      "source": "   * @return {Promise<BaseAction.suitability>} The recipe's suitability",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "The",
                        "postName": " ",
                        "type": "{Promise<BaseAction.suitability>}",
                        "postType": " ",
                        "description": "recipe's suitability",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 33,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 34,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Decide if a recipe is suitable to run, and returns a value from",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Decide if a recipe is suitable to run, and returns a value from",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * `BaseAction.suitability`.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "`BaseAction.suitability`.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * This checks several things in order:",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "This checks several things in order:",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *  - recipe signature",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- recipe signature",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   *  - capabilities",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- capabilities",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   *  - filter expression",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "  ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "- filter expression",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   * If the provided signature does not match the provided recipe, then",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "If the provided signature does not match the provided recipe, then",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "   * `SIGNATURE_ERROR` is returned. Recipes with this suitability should not be",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "`SIGNATURE_ERROR` is returned. Recipes with this suitability should not be",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 12,
                  "source": "   * trusted. These recipes are included so that temporary signature errors on",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "trusted. These recipes are included so that temporary signature errors on",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 13,
                  "source": "   * the server can be handled intelligently by actions.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "the server can be handled intelligently by actions.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 14,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 15,
                  "source": "   * Capabilities are a simple set of strings in the recipe. If the Normandy",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Capabilities are a simple set of strings in the recipe. If the Normandy",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 16,
                  "source": "   * client has all of the capabilities listed, then execution continues. If",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "client has all of the capabilities listed, then execution continues. If",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 17,
                  "source": "   * not, then `CAPABILITY_MISMATCH` is returned. Recipes with this suitability",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "not, then `CAPABILITY_MISMATCH` is returned. Recipes with this suitability",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 18,
                  "source": "   * should be considered incompatible and treated with caution.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "should be considered incompatible and treated with caution.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 19,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 20,
                  "source": "   * If the capabilities check passes, then the filter expression is evaluated",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "If the capabilities check passes, then the filter expression is evaluated",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 21,
                  "source": "   * against the current environment. The result of the expression is cast to a",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "against the current environment. The result of the expression is cast to a",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 22,
                  "source": "   * boolean. If it is true, then `FILTER_MATCH` is returned. If not, then",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "boolean. If it is true, then `FILTER_MATCH` is returned. If not, then",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 23,
                  "source": "   * `FILTER_MISMATCH` is returned.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "`FILTER_MISMATCH` is returned.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 24,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 25,
                  "source": "   * If there is an error while evaluating the recipe's filter, `FILTER_ERROR`",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "If there is an error while evaluating the recipe's filter, `FILTER_ERROR`",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 26,
                  "source": "   * is returned instead.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "is returned instead.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 27,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 28,
                  "source": "   * @param {object} recipe",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "recipe",
                    "postName": "",
                    "type": "{object}",
                    "postType": " ",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 29,
                  "source": "   * @param {object} signature",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "signature",
                    "postName": "",
                    "type": "{object}",
                    "postType": " ",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 30,
                  "source": "   * @param {string} recipe.filter_expression The expression to evaluate against the environment.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "recipe.filter_expression",
                    "postName": " ",
                    "type": "{string}",
                    "postType": " ",
                    "description": "The expression to evaluate against the environment.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 31,
                  "source": "   * @param {Set<String>} runnerCapabilities The capabilities provided by this runner.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "runnerCapabilities",
                    "postName": " ",
                    "type": "{Set<String>}",
                    "postType": " ",
                    "description": "The capabilities provided by this runner.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 32,
                  "source": "   * @return {Promise<BaseAction.suitability>} The recipe's suitability",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "The",
                    "postName": " ",
                    "type": "{Promise<BaseAction.suitability>}",
                    "postType": " ",
                    "description": "recipe's suitability",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 33,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 34,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "recipe",
            "signature"
          ]
        },
        {
          "type": "object-method",
          "line": 547,
          "id": "getAllSuitabilities",
          "comments": [
            {
              "description": "Some uses cases, such as Normandy Devtools, want the status of all suitabilities, not only the most important one. This checks the cases of suitabilities in order from most blocking to least blocking. The first yielded is the \"primary\" suitability to pass on to actions. If this function yields only [FILTER_MATCH], then the recipe fully matches and should be executed. If any other statuses are yielded, then the recipe should not be executed as normal. This is a generator so that the execution can be halted as needed. For example, after receiving a signature error, a caller can stop advancing the iterator to avoid exposing the browser to unneeded risk.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Some uses cases, such as Normandy Devtools, want the status of all",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Some uses cases, such as Normandy Devtools, want the status of all",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * suitabilities, not only the most important one. This checks the cases of",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "suitabilities, not only the most important one. This checks the cases of",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * suitabilities in order from most blocking to least blocking. The first",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "suitabilities in order from most blocking to least blocking. The first",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * yielded is the \"primary\" suitability to pass on to actions.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "yielded is the \"primary\" suitability to pass on to actions.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   * If this function yields only [FILTER_MATCH], then the recipe fully matches",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "If this function yields only [FILTER_MATCH], then the recipe fully matches",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   * and should be executed. If any other statuses are yielded, then the recipe",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "and should be executed. If any other statuses are yielded, then the recipe",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   * should not be executed as normal.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "should not be executed as normal.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "   * This is a generator so that the execution can be halted as needed. For",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "This is a generator so that the execution can be halted as needed. For",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 12,
                  "source": "   * example, after receiving a signature error, a caller can stop advancing",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "example, after receiving a signature error, a caller can stop advancing",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 13,
                  "source": "   * the iterator to avoid exposing the browser to unneeded risk.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "the iterator to avoid exposing the browser to unneeded risk.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 14,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 15,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "recipe",
            "signature"
          ]
        },
        {
          "type": "object-method",
          "line": 590,
          "id": "clearCaches",
          "comments": [
            {
              "description": "Clear all caches of systems used by RecipeRunner, in preparation for a clean run.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Clear all caches of systems used by RecipeRunner, in preparation",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Clear all caches of systems used by RecipeRunner, in preparation",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * for a clean run.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "for a clean run.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": []
        },
        {
          "type": "object-method",
          "line": 600,
          "id": "testRun",
          "comments": [
            {
              "description": "Clear out cached state and fetch/execute recipes from the given API url. This is used mainly by the mock-recipe-server JS that is executed in the browser console.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Clear out cached state and fetch/execute recipes from the given",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Clear out cached state and fetch/execute recipes from the given",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * API url. This is used mainly by the mock-recipe-server JS that is",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "API url. This is used mainly by the mock-recipe-server JS that is",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * executed in the browser console.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "executed in the browser console.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "baseApiUrl"
          ]
        },
        {
          "type": "object-method",
          "line": 624,
          "id": "_remoteSettingsClientForTesting",
          "comments": [
            {
              "description": "Offer a mechanism to get access to the lazily-instantiated gRemoteSettingsClient, because if someone instantiates it themselves, it won't have the options we provided in this module, and it will prevent instantiation by this module later. This is only meant to be used in testing, where it is a convenient hook to store data in the underlying remote-settings collection.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Offer a mechanism to get access to the lazily-instantiated",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Offer a mechanism to get access to the lazily-instantiated",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * gRemoteSettingsClient, because if someone instantiates it",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "gRemoteSettingsClient, because if someone instantiates it",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * themselves, it won't have the options we provided in this module,",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "themselves, it won't have the options we provided in this module,",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * and it will prevent instantiation by this module later.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "and it will prevent instantiation by this module later.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   * This is only meant to be used in testing, where it is a",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "This is only meant to be used in testing, where it is a",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   * convenient hook to store data in the underlying remote-settings",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "convenient hook to store data in the underlying remote-settings",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   * collection.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "collection.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "get",
          "params": []
        },
        {
          "type": "object-property",
          "line": 628,
          "id": "migrations",
          "typeEstimation": {
            "type": "object-estimation",
            "keys": [
              {
                "type": "object-method",
                "line": 633,
                "id": "migration01RemoveOldRecipesCollection",
                "comments": [
                  {
                    "description": "Delete the now-unused collection of recipes, since we are using the \"normandy-recipes-capabilities\" collection now.",
                    "tags": [],
                    "source": [
                      {
                        "number": 0,
                        "source": "/**",
                        "tokens": {
                          "start": "",
                          "delimiter": "/**",
                          "postDelimiter": "",
                          "tag": "",
                          "postTag": "",
                          "name": "",
                          "postName": "",
                          "type": "",
                          "postType": "",
                          "description": "",
                          "end": "",
                          "lineEnd": ""
                        }
                      },
                      {
                        "number": 1,
                        "source": "*",
                        "tokens": {
                          "start": "",
                          "delimiter": "*",
                          "postDelimiter": "",
                          "tag": "",
                          "postTag": "",
                          "name": "",
                          "postName": "",
                          "type": "",
                          "postType": "",
                          "description": "",
                          "end": "",
                          "lineEnd": ""
                        }
                      },
                      {
                        "number": 2,
                        "source": "     * Delete the now-unused collection of recipes, since we are using the",
                        "tokens": {
                          "start": "     ",
                          "delimiter": "*",
                          "postDelimiter": " ",
                          "tag": "",
                          "postTag": "",
                          "name": "",
                          "postName": "",
                          "type": "",
                          "postType": "",
                          "description": "Delete the now-unused collection of recipes, since we are using the",
                          "end": "",
                          "lineEnd": ""
                        }
                      },
                      {
                        "number": 3,
                        "source": "     * \"normandy-recipes-capabilities\" collection now.",
                        "tokens": {
                          "start": "     ",
                          "delimiter": "*",
                          "postDelimiter": " ",
                          "tag": "",
                          "postTag": "",
                          "name": "",
                          "postName": "",
                          "type": "",
                          "postType": "",
                          "description": "\"normandy-recipes-capabilities\" collection now.",
                          "end": "",
                          "lineEnd": ""
                        }
                      },
                      {
                        "number": 4,
                        "source": "     ",
                        "tokens": {
                          "start": "     ",
                          "delimiter": "",
                          "postDelimiter": "",
                          "tag": "",
                          "postTag": "",
                          "name": "",
                          "postName": "",
                          "type": "",
                          "postType": "",
                          "description": "",
                          "end": "",
                          "lineEnd": ""
                        }
                      },
                      {
                        "number": 5,
                        "source": "*/",
                        "tokens": {
                          "start": "",
                          "delimiter": "",
                          "postDelimiter": "",
                          "tag": "",
                          "postTag": "",
                          "name": "",
                          "postName": "",
                          "type": "",
                          "postType": "",
                          "description": "",
                          "end": "*/",
                          "lineEnd": ""
                        }
                      }
                    ],
                    "problems": []
                  }
                ],
                "kind": "method",
                "params": []
              }
            ]
          }
        }
      ]
    }
  }
]