[
  {
    "type": "class",
    "id": "AppUpdater",
    "line": 96,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 115,
        "params": [],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "update",
        "line": 181,
        "params": [],
        "comments": [
          {
            "description": "This can be accessed by consumers to inspect the update that is being prepared for installation. It will always be null if `AppUpdater.check` hasn't been called yet. `AppUpdater.check` will set it to an instance of nsIUpdate once there is one available. This may be immediate, if an update is already downloading or has been downloaded. It may be delayed if an update check needs to be performed first. It also may remain null if the browser is up to date or if the update check fails. Regarding the difference between `AppUpdater.update`, `AppUpdater.#update`, and `AppUpdater.#_update`: - `AppUpdater.update` and `AppUpdater.#update` are effectively identical except that `AppUpdater.update` is readonly since it should not be changed from outside this class. - `AppUpdater.#_update` should only ever be modified by the setter for `AppUpdater.#update` in order to ensure that the \"foregroundDownload\" property is set on assignment. The quick and easy rule for using these is to always use `#update` internally and (of course) always use `update` externally.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * This can be accessed by consumers to inspect the update that is being",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "This can be accessed by consumers to inspect the update that is being",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * prepared for installation. It will always be null if `AppUpdater.check`",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "prepared for installation. It will always be null if `AppUpdater.check`",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * hasn't been called yet. `AppUpdater.check` will set it to an instance of",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "hasn't been called yet. `AppUpdater.check` will set it to an instance of",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * nsIUpdate once there is one available. This may be immediate, if an update",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "nsIUpdate once there is one available. This may be immediate, if an update",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * is already downloading or has been downloaded. It may be delayed if an",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "is already downloading or has been downloaded. It may be delayed if an",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * update check needs to be performed first. It also may remain null if the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "update check needs to be performed first. It also may remain null if the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * browser is up to date or if the update check fails.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "browser is up to date or if the update check fails.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * Regarding the difference between `AppUpdater.update`, `AppUpdater.#update`,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Regarding the difference between `AppUpdater.update`, `AppUpdater.#update`,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * and `AppUpdater.#_update`:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "and `AppUpdater.#_update`:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *  - `AppUpdater.update` and `AppUpdater.#update` are effectively identical",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "  ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "- `AppUpdater.update` and `AppUpdater.#update` are effectively identical",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *    except that `AppUpdater.update` is readonly since it should not be",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "    ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "except that `AppUpdater.update` is readonly since it should not be",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   *    changed from outside this class.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "    ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "changed from outside this class.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   *  - `AppUpdater.#_update` should only ever be modified by the setter for",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "  ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "- `AppUpdater.#_update` should only ever be modified by the setter for",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   *    `AppUpdater.#update` in order to ensure that the \"foregroundDownload\"",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "    ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "`AppUpdater.#update` in order to ensure that the \"foregroundDownload\"",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   *    property is set on assignment.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "    ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "property is set on assignment.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   * The quick and easy rule for using these is to always use `#update`",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The quick and easy rule for using these is to always use `#update`",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   * internally and (of course) always use `update` externally.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "internally and (of course) always use `update` externally.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "check",
        "line": 221,
        "params": [],
        "comments": [
          {
            "description": "The main entry point for checking for updates.  As different stages of the check and possible subsequent update occur, the updater's status is set and listeners are called. Note that this is the correct entry point, regardless of the current state of the updater. Although the function name suggests that this function will start an update check, it will only do that if we aren't already in the update process. Otherwise, it will simply monitor the update process, update its own status, and call listeners. This function is async and will resolve when the update is ready to install, or a failure state is reached. However, most callers probably don't actually want to track its progress by awaiting on this function. More likely, it is desired to kick this function off without awaiting and add a listener via addListener. This allows the caller to see when the updater is checking for an update, downloading it, etc rather than just knowing \"now it's running\" and \"now it's done\". Note that calling this function while this instance is already performing or monitoring an update check/download will have no effect. In other words, it is only really necessary/useful to call this function when the status is `NEVER_CHECKED` or `NO_UPDATES_FOUND`.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * The main entry point for checking for updates.  As different stages of the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The main entry point for checking for updates.  As different stages of the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * check and possible subsequent update occur, the updater's status is set and",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "check and possible subsequent update occur, the updater's status is set and",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * listeners are called.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "listeners are called.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * Note that this is the correct entry point, regardless of the current state",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Note that this is the correct entry point, regardless of the current state",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * of the updater. Although the function name suggests that this function will",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "of the updater. Although the function name suggests that this function will",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * start an update check, it will only do that if we aren't already in the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "start an update check, it will only do that if we aren't already in the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * update process. Otherwise, it will simply monitor the update process,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "update process. Otherwise, it will simply monitor the update process,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * update its own status, and call listeners.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "update its own status, and call listeners.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   * This function is async and will resolve when the update is ready to",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "This function is async and will resolve when the update is ready to",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   * install, or a failure state is reached.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "install, or a failure state is reached.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   * However, most callers probably don't actually want to track its progress by",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "However, most callers probably don't actually want to track its progress by",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   * awaiting on this function. More likely, it is desired to kick this function",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "awaiting on this function. More likely, it is desired to kick this function",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   * off without awaiting and add a listener via addListener. This allows the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "off without awaiting and add a listener via addListener. This allows the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   * caller to see when the updater is checking for an update, downloading it,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "caller to see when the updater is checking for an update, downloading it,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   * etc rather than just knowing \"now it's running\" and \"now it's done\".",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "etc rather than just knowing \"now it's running\" and \"now it's done\".",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   * Note that calling this function while this instance is already performing",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Note that calling this function while this instance is already performing",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "   * or monitoring an update check/download will have no effect. In other words,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "or monitoring an update check/download will have no effect. In other words,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 22,
                "source": "   * it is only really necessary/useful to call this function when the status is",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "it is only really necessary/useful to call this function when the status is",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 23,
                "source": "   * `NEVER_CHECKED` or `NO_UPDATES_FOUND`.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "`NEVER_CHECKED` or `NO_UPDATES_FOUND`.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 24,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 25,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "allowUpdateDownload",
        "line": 398,
        "params": [],
        "comments": [
          {
            "description": "This only has an effect if the status is `DOWNLOAD_AND_INSTALL`.This indicates that the user has configured Firefox not to download updates without permission, and we are waiting the user's permission. This function should be called if and only if the user's permission was given as it will allow the update download to proceed.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * This only has an effect if the status is `DOWNLOAD_AND_INSTALL`.This",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "This only has an effect if the status is `DOWNLOAD_AND_INSTALL`.This",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * indicates that the user has configured Firefox not to download updates",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "indicates that the user has configured Firefox not to download updates",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * without permission, and we are waiting the user's permission.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "without permission, and we are waiting the user's permission.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * This function should be called if and only if the user's permission was",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "This function should be called if and only if the user's permission was",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * given as it will allow the update download to proceed.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "given as it will allow the update download to proceed.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "stop",
        "line": 649,
        "params": [],
        "comments": [
          {
            "description": "Stops the current check for updates and any ongoing download. If this is called before `AppUpdater.check()` is called or after it resolves, this should have no effect. If this is called while `check()` is still running, `AppUpdater` will return to the NEVER_CHECKED state. We don't really want to leave it in any of the intermediary states after we have disconnected all the listeners that would allow those states to ever change.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Stops the current check for updates and any ongoing download.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Stops the current check for updates and any ongoing download.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * If this is called before `AppUpdater.check()` is called or after it",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If this is called before `AppUpdater.check()` is called or after it",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * resolves, this should have no effect. If this is called while `check()` is",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "resolves, this should have no effect. If this is called while `check()` is",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * still running, `AppUpdater` will return to the NEVER_CHECKED state. We",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "still running, `AppUpdater` will return to the NEVER_CHECKED state. We",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * don't really want to leave it in any of the intermediary states after we",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "don't really want to leave it in any of the intermediary states after we",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * have disconnected all the listeners that would allow those states to ever",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "have disconnected all the listeners that would allow those states to ever",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * change.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "change.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "status",
        "line": 665,
        "params": [],
        "comments": [
          {
            "description": "{AppUpdater.STATUS} The status of the current check or update. Note that until AppUpdater.check has been called, this will always be set to NEVER_CHECKED.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * {AppUpdater.STATUS} The status of the current check or update.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{AppUpdater.STATUS} The status of the current check or update.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * Note that until AppUpdater.check has been called, this will always be set",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Note that until AppUpdater.check has been called, this will always be set",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * to NEVER_CHECKED.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "to NEVER_CHECKED.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "addListener",
        "line": 679,
        "params": [
          {
            "type": "params",
            "id": "listener",
            "line": 679
          }
        ],
        "comments": [
          {
            "description": "Adds a listener function that will be called back on status changes as different stages of updates occur.  The function will be called without arguments for most status changes; see the comments around the STATUS value definitions below.  This is safe to call multiple times with the same function.  It will be added only once.",
            "tags": [
              {
                "tag": "param",
                "name": "listener",
                "type": "function",
                "optional": false,
                "description": "The listener function to add.",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @param {function} listener",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "listener",
                      "postName": "",
                      "type": "{function}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *   The listener function to add.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The listener function to add.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Adds a listener function that will be called back on status changes as",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Adds a listener function that will be called back on status changes as",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * different stages of updates occur.  The function will be called without",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "different stages of updates occur.  The function will be called without",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * arguments for most status changes; see the comments around the STATUS value",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "arguments for most status changes; see the comments around the STATUS value",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * definitions below.  This is safe to call multiple times with the same",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "definitions below.  This is safe to call multiple times with the same",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * function.  It will be added only once.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "function.  It will be added only once.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @param {function} listener",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "listener",
                  "postName": "",
                  "type": "{function}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *   The listener function to add.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The listener function to add.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "removeListener",
        "line": 690,
        "params": [
          {
            "type": "params",
            "id": "listener",
            "line": 690
          }
        ],
        "comments": [
          {
            "description": "Removes a listener.  This is safe to call multiple times with the same function, or with a function that was never added.",
            "tags": [
              {
                "tag": "param",
                "name": "listener",
                "type": "function",
                "optional": false,
                "description": "The listener function to remove.",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {function} listener",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "listener",
                      "postName": "",
                      "type": "{function}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *   The listener function to remove.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The listener function to remove.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Removes a listener.  This is safe to call multiple times with the same",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Removes a listener.  This is safe to call multiple times with the same",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * function, or with a function that was never added.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "function, or with a function that was never added.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {function} listener",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "listener",
                  "postName": "",
                  "type": "{function}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *   The listener function to remove.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The listener function to remove.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "observe",
        "line": 710,
        "params": [
          {
            "type": "params",
            "id": "subject",
            "line": 710
          },
          {
            "type": "params",
            "id": "topic",
            "line": 710
          },
          {
            "type": "params",
            "id": "status",
            "line": 710
          }
        ],
        "kind": "method"
      }
    ]
  }
]