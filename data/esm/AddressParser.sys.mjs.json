[
  {
    "type": "class",
    "id": "StructuredStreetAddress",
    "line": 149,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 155,
        "params": [
          {
            "type": "params",
            "id": "street_number",
            "line": 155
          },
          {
            "type": "params",
            "id": "street_name",
            "line": 155
          },
          {
            "type": "params",
            "id": "apartment_number",
            "line": 155
          },
          {
            "type": "params",
            "id": "floor_number",
            "line": 155
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "street_number",
        "line": 162,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "street_name",
        "line": 166,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "apartment_number",
        "line": 170,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "floor_number",
        "line": 174,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "toString",
        "line": 178,
        "params": [],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "AddressParser",
    "line": 188,
    "methods": [
      {
        "type": "method",
        "id": "parseStreetAddress",
        "line": 197,
        "params": [
          {
            "type": "params",
            "id": "address",
            "line": 197
          }
        ],
        "comments": [
          {
            "description": "Parse street address with the following pattern. street number, street name, apartment number(optional), floor number(optional) For example, 2 Harrison St #175 floor 2",
            "tags": [
              {
                "tag": "param",
                "name": "address",
                "type": "string",
                "optional": false,
                "description": "The street address to be parsed.",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {string} address The street address to be parsed.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "address",
                      "postName": " ",
                      "type": "{string}",
                      "postType": " ",
                      "description": "The street address to be parsed.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "",
                "type": "StructuredStreetAddress",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @returns {StructuredStreetAddress}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{StructuredStreetAddress}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Parse street address with the following pattern.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Parse street address with the following pattern.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * street number, street name, apartment number(optional), floor number(optional)",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "street number, street name, apartment number(optional), floor number(optional)",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * For example, 2 Harrison St #175 floor 2",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "For example, 2 Harrison St #175 floor 2",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {string} address The street address to be parsed.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "address",
                  "postName": " ",
                  "type": "{string}",
                  "postType": " ",
                  "description": "The street address to be parsed.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @returns {StructuredStreetAddress}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{StructuredStreetAddress}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "parse",
        "line": 216,
        "params": [
          {
            "type": "params",
            "id": "address",
            "line": 216
          },
          {
            "type": "params",
            "id": "regexpes",
            "line": 216
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "normalizeString",
        "line": 237,
        "params": [
          {
            "type": "params",
            "id": "s",
            "line": 237
          },
          {
            "type": "params",
            "id": "options",
            "line": 237
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "replacePunctuation",
        "line": 265,
        "params": [
          {
            "type": "params",
            "id": "s",
            "line": 265
          },
          {
            "type": "params",
            "id": "replace",
            "line": 265
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "removePunctuation",
        "line": 270,
        "params": [
          {
            "type": "params",
            "id": "s",
            "line": 270
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "replaceControlCharacters",
        "line": 274,
        "params": [
          {
            "type": "params",
            "id": "s",
            "line": 274
          },
          {
            "type": "params",
            "id": "replace",
            "line": 274
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "removeWhitespace",
        "line": 278,
        "params": [
          {
            "type": "params",
            "id": "s",
            "line": 278
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "mergeWhitespace",
        "line": 282,
        "params": [
          {
            "type": "params",
            "id": "s",
            "line": 282
          }
        ],
        "kind": "method"
      }
    ]
  }
]