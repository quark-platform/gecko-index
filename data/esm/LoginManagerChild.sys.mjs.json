[
  {
    "type": "variable-declaration",
    "id": "AUTOFILL_RESULT",
    "line": 26,
    "typeEstimation": {
      "type": "object-estimation",
      "keys": [
        {
          "type": "object-property",
          "line": 27,
          "id": "FILLED"
        },
        {
          "type": "object-property",
          "line": 28,
          "id": "NO_PASSWORD_FIELD"
        },
        {
          "type": "object-property",
          "line": 29,
          "id": "PASSWORD_DISABLED_READONLY"
        },
        {
          "type": "object-property",
          "line": 30,
          "id": "NO_LOGINS_FIT"
        },
        {
          "type": "object-property",
          "line": 31,
          "id": "NO_SAVED_LOGINS"
        },
        {
          "type": "object-property",
          "line": 32,
          "id": "EXISTING_PASSWORD"
        },
        {
          "type": "object-property",
          "line": 33,
          "id": "EXISTING_USERNAME"
        },
        {
          "type": "object-property",
          "line": 34,
          "id": "MULTIPLE_LOGINS"
        },
        {
          "type": "object-property",
          "line": 35,
          "id": "NO_AUTOFILL_FORMS"
        },
        {
          "type": "object-property",
          "line": 36,
          "id": "AUTOCOMPLETE_OFF"
        },
        {
          "type": "object-property",
          "line": 37,
          "id": "INSECURE"
        },
        {
          "type": "object-property",
          "line": 38,
          "id": "PASSWORD_AUTOCOMPLETE_NEW_PASSWORD"
        },
        {
          "type": "object-property",
          "line": 39,
          "id": "TYPE_NO_LONGER_PASSWORD"
        },
        {
          "type": "object-property",
          "line": 40,
          "id": "FORM_IN_CROSSORIGIN_SUBFRAME"
        },
        {
          "type": "object-property",
          "line": 41,
          "id": "FILLED_USERNAME_ONLY_FORM"
        }
      ]
    }
  },
  {
    "type": "class",
    "id": "LoginFormState",
    "line": 444,
    "methods": [
      {
        "type": "method",
        "id": "getScenario",
        "line": 501,
        "params": [
          {
            "type": "params",
            "id": "inputElement",
            "line": 501
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "setScenario",
        "line": 506,
        "params": [
          {
            "type": "params",
            "id": "formLikeRoot",
            "line": 506
          },
          {
            "type": "params",
            "id": "scenario",
            "line": 506
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "storeUserInput",
        "line": 510,
        "params": [
          {
            "type": "params",
            "id": "field",
            "line": 510
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "isProbablyAnEmailField",
        "line": 527,
        "params": [
          {
            "type": "params",
            "id": "inputElement",
            "line": 527
          }
        ],
        "comments": [
          {
            "description": "Returns true if the input field is considered an email field by 'LoginHelper.isInferredEmailField'.",
            "tags": [
              {
                "tag": "param",
                "name": "element",
                "type": "Element",
                "optional": false,
                "description": "the field to check.",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {Element} element the field to check.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "element",
                      "postName": " ",
                      "type": "{Element}",
                      "postType": " ",
                      "description": "the field to check.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "True",
                "type": "boolean",
                "optional": false,
                "description": "if the element is likely an email field",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @returns {boolean} True if the element is likely an email field",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "True",
                      "postName": " ",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "if the element is likely an email field",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Returns true if the input field is considered an email field by",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Returns true if the input field is considered an email field by",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * 'LoginHelper.isInferredEmailField'.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "'LoginHelper.isInferredEmailField'.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {Element} element the field to check.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "element",
                  "postName": " ",
                  "type": "{Element}",
                  "postType": " ",
                  "description": "the field to check.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @returns {boolean} True if the element is likely an email field",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "True",
                  "postName": " ",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "if the element is likely an email field",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "isProbablyAUsernameField",
        "line": 550,
        "params": [
          {
            "type": "params",
            "id": "inputElement",
            "line": 550
          }
        ],
        "comments": [
          {
            "description": "Returns true if the input field is considered a username field by 'LoginHelper.isInferredUsernameField'. The main purpose of this method is to cache the result because _getFormFields has many call sites and we want to avoid applying the heuristic every time.",
            "tags": [
              {
                "tag": "param",
                "name": "element",
                "type": "Element",
                "optional": false,
                "description": "the field to check.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {Element} element the field to check.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "element",
                      "postName": " ",
                      "type": "{Element}",
                      "postType": " ",
                      "description": "the field to check.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "True",
                "type": "boolean",
                "optional": false,
                "description": "if the element is likely a username field",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @returns {boolean} True if the element is likely a username field",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "True",
                      "postName": " ",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "if the element is likely a username field",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Returns true if the input field is considered a username field by",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Returns true if the input field is considered a username field by",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * 'LoginHelper.isInferredUsernameField'. The main purpose of this method",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "'LoginHelper.isInferredUsernameField'. The main purpose of this method",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * is to cache the result because _getFormFields has many call sites and we",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "is to cache the result because _getFormFields has many call sites and we",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * want to avoid applying the heuristic every time.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "want to avoid applying the heuristic every time.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {Element} element the field to check.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "element",
                  "postName": " ",
                  "type": "{Element}",
                  "postType": " ",
                  "description": "the field to check.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @returns {boolean} True if the element is likely a username field",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "True",
                  "postName": " ",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "if the element is likely a username field",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_togglePasswordFieldMasking",
        "line": 650,
        "params": [
          {
            "type": "params",
            "id": "passwordField",
            "line": 650
          },
          {
            "type": "params",
            "id": "unmask",
            "line": 650
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_treatAsGeneratedPasswordField",
        "line": 682,
        "params": [
          {
            "type": "params",
            "id": "passwordField",
            "line": 682
          }
        ],
        "comments": [
          {
            "description": "Track a form field as has having been filled with a generated password. This adds explicit focus & blur handling to unmask & mask the value, and enables special handling of edits to generated password values (see the observer's input event handler.)",
            "tags": [
              {
                "tag": "param",
                "name": "passwordField",
                "type": "HTMLInputElement",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {HTMLInputElement} passwordField",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "passwordField",
                      "postName": "",
                      "type": "{HTMLInputElement}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Track a form field as has having been filled with a generated password. This adds explicit",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Track a form field as has having been filled with a generated password. This adds explicit",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * focus & blur handling to unmask & mask the value, and enables special handling of edits to",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "focus & blur handling to unmask & mask the value, and enables special handling of edits to",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * generated password values (see the observer's input event handler.)",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "generated password values (see the observer's input event handler.)",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {HTMLInputElement} passwordField",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "passwordField",
                  "postName": "",
                  "type": "{HTMLInputElement}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_formHasModifiedFields",
        "line": 698,
        "params": [
          {
            "type": "params",
            "id": "form",
            "line": 698
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_stopTreatingAsGeneratedPasswordField",
        "line": 734,
        "params": [
          {
            "type": "params",
            "id": "passwordField",
            "line": 734
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onFocus",
        "line": 749,
        "params": [
          {
            "type": "params",
            "id": "field",
            "line": 749
          },
          {
            "type": "params",
            "id": "focusedField",
            "line": 749
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_highlightFilledField",
        "line": 811,
        "params": [
          {
            "type": "params",
            "id": "element",
            "line": 811
          }
        ],
        "comments": [
          {
            "description": "Highlight login fields on autocomplete or autofill on page load.",
            "tags": [
              {
                "tag": "param",
                "name": "element",
                "type": "Node",
                "optional": false,
                "description": "that needs highlighting.",
                "problems": [],
                "source": [
                  {
                    "number": 3,
                    "source": "   * @param {Node} element that needs highlighting.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "element",
                      "postName": " ",
                      "type": "{Node}",
                      "postType": " ",
                      "description": "that needs highlighting.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 4,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Highlight login fields on autocomplete or autofill on page load.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Highlight login fields on autocomplete or autofill on page load.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * @param {Node} element that needs highlighting.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "element",
                  "postName": " ",
                  "type": "{Node}",
                  "postType": " ",
                  "description": "that needs highlighting.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getUsernameFieldFromUsernameOnlyForm",
        "line": 843,
        "params": [
          {
            "type": "params",
            "id": "formElement",
            "line": 843
          }
        ],
        "comments": [
          {
            "description": "Returns the username field of the passed form if the form is a username-only form. A form is considered a username-only form only if it meets all the following conditions: 1. Does not have any password field, 2. Only contains one input field whose type is username compatible. 3. The username compatible input field looks like a username field or the form itself looks like a sign-in or sign-up form.",
            "tags": [
              {
                "tag": "param",
                "name": "formElement",
                "type": "Element",
                "optional": false,
                "description": "the form to check.",
                "problems": [],
                "source": [
                  {
                    "number": 11,
                    "source": "   * @param {Element} formElement",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "formElement",
                      "postName": "",
                      "type": "{Element}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *                  the form to check.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                  ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "the form to check.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "recipe=null",
                "type": "Object",
                "optional": false,
                "description": "A relevant field override recipe to use.",
                "problems": [],
                "source": [
                  {
                    "number": 13,
                    "source": "   * @param {Object}  recipe=null",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "recipe=null",
                      "postName": "",
                      "type": "{Object}",
                      "postType": "  ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   *                  A relevant field override recipe to use.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                  ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "A relevant field override recipe to use.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "The",
                "type": "Element",
                "optional": false,
                "description": "username field or null (if the form is not a username-only form).",
                "problems": [],
                "source": [
                  {
                    "number": 15,
                    "source": "   * @returns {Element} The username field or null (if the form is not a",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "The",
                      "postName": " ",
                      "type": "{Element}",
                      "postType": " ",
                      "description": "username field or null (if the form is not a",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   *                    username-only form).",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                    ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "username-only form).",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Returns the username field of the passed form if the form is a",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Returns the username field of the passed form if the form is a",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * username-only form.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "username-only form.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * A form is considered a username-only form only if it meets all the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A form is considered a username-only form only if it meets all the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * following conditions:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "following conditions:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * 1. Does not have any password field,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "1. Does not have any password field,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * 2. Only contains one input field whose type is username compatible.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "2. Only contains one input field whose type is username compatible.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * 3. The username compatible input field looks like a username field",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "3. The username compatible input field looks like a username field",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *    or the form itself looks like a sign-in or sign-up form.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "    ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "or the form itself looks like a sign-in or sign-up form.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * @param {Element} formElement",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "formElement",
                  "postName": "",
                  "type": "{Element}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *                  the form to check.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                  ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "the form to check.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   * @param {Object}  recipe=null",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "recipe=null",
                  "postName": "",
                  "type": "{Object}",
                  "postType": "  ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   *                  A relevant field override recipe to use.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                  ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A relevant field override recipe to use.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   * @returns {Element} The username field or null (if the form is not a",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "The",
                  "postName": " ",
                  "type": "{Element}",
                  "postType": " ",
                  "description": "username field or null (if the form is not a",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   *                    username-only form).",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                    ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "username-only form).",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_getPasswordFields",
        "line": 897,
        "params": [
          {
            "type": "params",
            "id": "form",
            "line": 898
          }
        ],
        "comments": [
          {
            "description": "",
            "tags": [
              {
                "tag": "param",
                "name": "form",
                "type": "LoginForm",
                "optional": false,
                "description": "- the LoginForm to look for password fields in.",
                "problems": [],
                "source": [
                  {
                    "number": 2,
                    "source": "   * @param {LoginForm} form - the LoginForm to look for password fields in.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "form",
                      "postName": " ",
                      "type": "{LoginForm}",
                      "postType": " ",
                      "description": "- the LoginForm to look for password fields in.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options",
                "type": "Object",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 3,
                    "source": "   * @param {Object} options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": "",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.skipEmptyFields",
                "type": "bool",
                "optional": true,
                "description": "- Whether to ignore password fields with no value. Used at capture time since saving empty values isn't useful.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {bool} [options.skipEmptyFields=false] - Whether to ignore password fields with no value.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options.skipEmptyFields=false]",
                      "postName": " ",
                      "type": "{bool}",
                      "postType": " ",
                      "description": "- Whether to ignore password fields with no value.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *                                                 Used at capture time since saving empty values isn't",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                                                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Used at capture time since saving empty values isn't",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *                                                 useful.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                                                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "useful.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ],
                "default": "false"
              },
              {
                "tag": "param",
                "name": "options.fieldOverrideRecipe",
                "type": "Object",
                "optional": true,
                "description": "- A relevant field override recipe to use.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {Object} [options.fieldOverrideRecipe=null] - A relevant field override recipe to use.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options.fieldOverrideRecipe=null]",
                      "postName": " ",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "- A relevant field override recipe to use.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ],
                "default": "null"
              },
              {
                "tag": "return",
                "name": "Array",
                "type": "Array|null",
                "optional": false,
                "description": "of password field elements for the specified form. If no pw fields are found, or if more than 5 are found, then null is returned.",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @return {Array|null} Array of password field elements for the specified form.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@return",
                      "postTag": " ",
                      "name": "Array",
                      "postName": " ",
                      "type": "{Array|null}",
                      "postType": " ",
                      "description": "of password field elements for the specified form.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *                      If no pw fields are found, or if more than 5 are found, then null",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                      ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "If no pw fields are found, or if more than 5 are found, then null",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *                      is returned.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                      ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "is returned.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * @param {LoginForm} form - the LoginForm to look for password fields in.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "form",
                  "postName": " ",
                  "type": "{LoginForm}",
                  "postType": " ",
                  "description": "- the LoginForm to look for password fields in.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * @param {Object} options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": "",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {bool} [options.skipEmptyFields=false] - Whether to ignore password fields with no value.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options.skipEmptyFields=false]",
                  "postName": " ",
                  "type": "{bool}",
                  "postType": " ",
                  "description": "- Whether to ignore password fields with no value.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *                                                 Used at capture time since saving empty values isn't",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                                                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Used at capture time since saving empty values isn't",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *                                                 useful.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                                                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "useful.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {Object} [options.fieldOverrideRecipe=null] - A relevant field override recipe to use.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options.fieldOverrideRecipe=null]",
                  "postName": " ",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "- A relevant field override recipe to use.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @return {Array|null} Array of password field elements for the specified form.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@return",
                  "postTag": " ",
                  "name": "Array",
                  "postName": " ",
                  "type": "{Array|null}",
                  "postType": " ",
                  "description": "of password field elements for the specified form.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *                      If no pw fields are found, or if more than 5 are found, then null",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                      ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If no pw fields are found, or if more than 5 are found, then null",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *                      is returned.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                      ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "is returned.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "compareAndUpdatePreviouslySentValues",
        "line": 975,
        "params": [
          {
            "type": "params",
            "id": "formLikeRoot",
            "line": 976
          },
          {
            "type": "params",
            "id": "usernameValue",
            "line": 977
          },
          {
            "type": "params",
            "id": "passwordValue",
            "line": 978
          }
        ],
        "comments": [
          {
            "description": "Stores passed arguments, and returns whether or not they match the args given the last time this method was called with the same [formLikeRoot]. This is used to avoid sending duplicate messages to the parent.",
            "tags": [
              {
                "tag": "param",
                "name": "formLikeRoot",
                "type": "Element",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {Element} formLikeRoot",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "formLikeRoot",
                      "postName": "",
                      "type": "{Element}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "usernameValue",
                "type": "string",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {string} usernameValue",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "usernameValue",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "passwordValue",
                "type": "string",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @param {string} passwordValue",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "passwordValue",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "dismissed",
                "type": "boolean?",
                "optional": true,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 9,
                    "source": "   * @param {boolean?} [dismissed=false]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[dismissed=false]",
                      "postName": "",
                      "type": "{boolean?}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ],
                "default": "false"
              },
              {
                "tag": "param",
                "name": "triggeredByFillingGenerated",
                "type": "boolean?",
                "optional": true,
                "description": "whether or not this call was triggered by a generated password being filled into a form-like element.",
                "problems": [],
                "source": [
                  {
                    "number": 10,
                    "source": "   * @param {boolean?} [triggeredByFillingGenerated=false] whether or not this call was triggered by a generated",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[triggeredByFillingGenerated=false]",
                      "postName": " ",
                      "type": "{boolean?}",
                      "postType": " ",
                      "description": "whether or not this call was triggered by a generated",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *        password being filled into a form-like element.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "password being filled into a form-like element.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ],
                "default": "false"
              },
              {
                "tag": "returns",
                "name": "true",
                "type": "boolean",
                "optional": false,
                "description": "if args match the most recently passed values",
                "problems": [],
                "source": [
                  {
                    "number": 13,
                    "source": "   * @returns {boolean} true if args match the most recently passed values",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "true",
                      "postName": " ",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "if args match the most recently passed values",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Stores passed arguments, and returns whether or not they match the args given the last time",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Stores passed arguments, and returns whether or not they match the args given the last time",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * this method was called with the same [formLikeRoot]. This is used to avoid sending duplicate",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "this method was called with the same [formLikeRoot]. This is used to avoid sending duplicate",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * messages to the parent.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "messages to the parent.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {Element} formLikeRoot",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "formLikeRoot",
                  "postName": "",
                  "type": "{Element}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {string} usernameValue",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "usernameValue",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @param {string} passwordValue",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "passwordValue",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * @param {boolean?} [dismissed=false]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[dismissed=false]",
                  "postName": "",
                  "type": "{boolean?}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * @param {boolean?} [triggeredByFillingGenerated=false] whether or not this call was triggered by a generated",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[triggeredByFillingGenerated=false]",
                  "postName": " ",
                  "type": "{boolean?}",
                  "postType": " ",
                  "description": "whether or not this call was triggered by a generated",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *        password being filled into a form-like element.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "password being filled into a form-like element.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   * @returns {boolean} true if args match the most recently passed values",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "true",
                  "postName": " ",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "if args match the most recently passed values",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "fillConfirmFieldWithGeneratedPassword",
        "line": 1017,
        "params": [
          {
            "type": "params",
            "id": "passwordField",
            "line": 1017
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_getFormFields",
        "line": 1109,
        "params": [
          {
            "type": "params",
            "id": "form",
            "line": 1109
          },
          {
            "type": "params",
            "id": "isSubmission",
            "line": 1109
          },
          {
            "type": "params",
            "id": "recipes",
            "line": 1109
          }
        ],
        "comments": [
          {
            "description": "Returns the username and password fields found in the form. Can handle complex forms by trying to figure out what the relevant fields are.",
            "tags": [
              {
                "tag": "param",
                "name": "form",
                "type": "LoginForm",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {LoginForm} form",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "form",
                      "postName": "",
                      "type": "{LoginForm}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "isSubmission",
                "type": "bool",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {bool} isSubmission",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "isSubmission",
                      "postName": "",
                      "type": "{bool}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "recipes",
                "type": "Set",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @param {Set} recipes",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "recipes",
                      "postName": "",
                      "type": "{Set}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options",
                "type": "Object",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 9,
                    "source": "   * @param {Object} options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": "",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.ignoreConnect",
                "type": "bool",
                "optional": true,
                "description": "- Whether to ignore checking isConnected of the element.",
                "problems": [],
                "source": [
                  {
                    "number": 10,
                    "source": "   * @param {bool} [options.ignoreConnect] - Whether to ignore checking isConnected",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options.ignoreConnect]",
                      "postName": " ",
                      "type": "{bool}",
                      "postType": " ",
                      "description": "- Whether to ignore checking isConnected",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *                                         of the element.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                                         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "of the element.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "return",
                "name": "{usernameField,",
                "type": "Object",
                "optional": false,
                "description": "newPasswordField, oldPasswordField, confirmPasswordField} usernameField may be null. newPasswordField may be null. If null, this is a username-only form. oldPasswordField may be null. If null, newPasswordField is just \"theLoginField\". If not null, the form is apparently a change-password field, with oldPasswordField containing the password that is being changed. Note that even though we can create a LoginForm from a text field, this method will only return a non-null usernameField if the LoginForm has a password field.",
                "problems": [],
                "source": [
                  {
                    "number": 12,
                    "source": "   * @return {Object} {usernameField, newPasswordField, oldPasswordField, confirmPasswordField}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@return",
                      "postTag": " ",
                      "name": "{usernameField,",
                      "postName": " ",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "newPasswordField, oldPasswordField, confirmPasswordField}",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   * usernameField may be null.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "usernameField may be null.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "   * newPasswordField may be null. If null, this is a username-only form.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "newPasswordField may be null. If null, this is a username-only form.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   * oldPasswordField may be null. If null, newPasswordField is just",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "oldPasswordField may be null. If null, newPasswordField is just",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "   * \"theLoginField\". If not null, the form is apparently a",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "\"theLoginField\". If not null, the form is apparently a",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   * change-password field, with oldPasswordField containing the password",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "change-password field, with oldPasswordField containing the password",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 19,
                    "source": "   * that is being changed.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "that is being changed.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 20,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 21,
                    "source": "   * Note that even though we can create a LoginForm from a text field,",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Note that even though we can create a LoginForm from a text field,",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 22,
                    "source": "   * this method will only return a non-null usernameField if the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "this method will only return a non-null usernameField if the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 23,
                    "source": "   * LoginForm has a password field.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "LoginForm has a password field.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 24,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 25,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Returns the username and password fields found in the form.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Returns the username and password fields found in the form.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * Can handle complex forms by trying to figure out what the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Can handle complex forms by trying to figure out what the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * relevant fields are.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "relevant fields are.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {LoginForm} form",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "form",
                  "postName": "",
                  "type": "{LoginForm}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {bool} isSubmission",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "isSubmission",
                  "postName": "",
                  "type": "{bool}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @param {Set} recipes",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "recipes",
                  "postName": "",
                  "type": "{Set}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * @param {Object} options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": "",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * @param {bool} [options.ignoreConnect] - Whether to ignore checking isConnected",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options.ignoreConnect]",
                  "postName": " ",
                  "type": "{bool}",
                  "postType": " ",
                  "description": "- Whether to ignore checking isConnected",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *                                         of the element.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                                         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "of the element.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   * @return {Object} {usernameField, newPasswordField, oldPasswordField, confirmPasswordField}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@return",
                  "postTag": " ",
                  "name": "{usernameField,",
                  "postName": " ",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "newPasswordField, oldPasswordField, confirmPasswordField}",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   * usernameField may be null.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "usernameField may be null.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   * newPasswordField may be null. If null, this is a username-only form.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "newPasswordField may be null. If null, this is a username-only form.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   * oldPasswordField may be null. If null, newPasswordField is just",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "oldPasswordField may be null. If null, newPasswordField is just",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   * \"theLoginField\". If not null, the form is apparently a",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "\"theLoginField\". If not null, the form is apparently a",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   * change-password field, with oldPasswordField containing the password",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "change-password field, with oldPasswordField containing the password",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   * that is being changed.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "that is being changed.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "   * Note that even though we can create a LoginForm from a text field,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Note that even though we can create a LoginForm from a text field,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 22,
                "source": "   * this method will only return a non-null usernameField if the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "this method will only return a non-null usernameField if the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 23,
                "source": "   * LoginForm has a password field.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "LoginForm has a password field.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 24,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 25,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getUserNameAndPasswordFields",
        "line": 1343,
        "params": [
          {
            "type": "params",
            "id": "aField",
            "line": 1343
          }
        ],
        "comments": [
          {
            "description": "Returns the username and password fields found in the form by input element into form.",
            "tags": [
              {
                "tag": "param",
                "name": "aField",
                "type": "HTMLInputElement",
                "optional": false,
                "description": "A form field",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {HTMLInputElement} aField",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "aField",
                      "postName": "",
                      "type": "{HTMLInputElement}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *                           A form field",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                           ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "A form field",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "return",
                "name": "usernameField, newPasswordField, oldPasswordField",
                "type": "Array",
                "optional": true,
                "description": "Details of these values are the same as _getFormFields.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @return {Array} [usernameField, newPasswordField, oldPasswordField]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@return",
                      "postTag": " ",
                      "name": "[usernameField, newPasswordField, oldPasswordField]",
                      "postName": "",
                      "type": "{Array}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   * Details of these values are the same as _getFormFields.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Details of these values are the same as _getFormFields.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Returns the username and password fields found in the form by input",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Returns the username and password fields found in the form by input",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * element into form.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "element into form.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {HTMLInputElement} aField",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "aField",
                  "postName": "",
                  "type": "{HTMLInputElement}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *                           A form field",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                           ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A form field",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @return {Array} [usernameField, newPasswordField, oldPasswordField]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@return",
                  "postTag": " ",
                  "name": "[usernameField, newPasswordField, oldPasswordField]",
                  "postName": "",
                  "type": "{Array}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * Details of these values are the same as _getFormFields.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Details of these values are the same as _getFormFields.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getFieldContext",
        "line": 1385,
        "params": [
          {
            "type": "params",
            "id": "aField",
            "line": 1385
          }
        ],
        "comments": [
          {
            "description": "Verify if a field is a valid login form field and returns some information about it's LoginForm.",
            "tags": [
              {
                "tag": "param",
                "name": "aField",
                "type": "Element",
                "optional": false,
                "description": "A form field we want to verify.",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {Element} aField",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "aField",
                      "postName": "",
                      "type": "{Element}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *                  A form field we want to verify.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                  ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "A form field we want to verify.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "an",
                "type": "Object",
                "optional": false,
                "description": "object with information about the LoginForm username and password field or null if the passed field is invalid.",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @returns {Object} an object with information about the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "an",
                      "postName": " ",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "object with information about the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *                   LoginForm username and password field",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "LoginForm username and password field",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *                   or null if the passed field is invalid.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "or null if the passed field is invalid.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Verify if a field is a valid login form field and",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Verify if a field is a valid login form field and",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * returns some information about it's LoginForm.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "returns some information about it's LoginForm.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {Element} aField",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "aField",
                  "postName": "",
                  "type": "{Element}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *                  A form field we want to verify.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                  ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A form field we want to verify.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @returns {Object} an object with information about the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "an",
                  "postName": " ",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "object with information about the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *                   LoginForm username and password field",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "LoginForm username and password field",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *                   or null if the passed field is invalid.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "or null if the passed field is invalid.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "LoginManagerChild",
    "superClass": "JSWindowActorChild",
    "line": 1439,
    "methods": [
      {
        "type": "method",
        "id": "forWindow",
        "line": 1474,
        "params": [
          {
            "type": "params",
            "id": "window",
            "line": 1474
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "receiveMessage",
        "line": 1478,
        "params": [
          {
            "type": "params",
            "id": "msg",
            "line": 1478
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "repopulateAutocompletePopup",
        "line": 1527,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "shouldIgnoreLoginManagerEvent",
        "line": 1534,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 1534
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "handleEvent",
        "line": 1545,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 1545
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "notifyObserversOfFormProcessed",
        "line": 1595,
        "params": [
          {
            "type": "params",
            "id": "formid",
            "line": 1595
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_getLoginDataFromParent",
        "line": 1607,
        "params": [
          {
            "type": "params",
            "id": "form",
            "line": 1607
          },
          {
            "type": "params",
            "id": "options",
            "line": 1607
          }
        ],
        "comments": [
          {
            "description": "Get relevant logins and recipes from the parent",
            "tags": [
              {
                "tag": "param",
                "name": "form",
                "type": "HTMLFormElement",
                "optional": false,
                "description": "- form to get login data for",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {HTMLFormElement} form - form to get login data for",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "form",
                      "postName": " ",
                      "type": "{HTMLFormElement}",
                      "postType": " ",
                      "description": "- form to get login data for",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options",
                "type": "Object",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {Object} options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": "",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.guid",
                "type": "boolean",
                "optional": false,
                "description": "- guid of a login to retrieve",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {boolean} options.guid - guid of a login to retrieve",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.guid",
                      "postName": " ",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "- guid of a login to retrieve",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.showPrimaryPassword",
                "type": "boolean",
                "optional": false,
                "description": "- whether to show a primary password prompt",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {boolean} options.showPrimaryPassword - whether to show a primary password prompt",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.showPrimaryPassword",
                      "postName": " ",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "- whether to show a primary password prompt",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Get relevant logins and recipes from the parent",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Get relevant logins and recipes from the parent",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {HTMLFormElement} form - form to get login data for",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "form",
                  "postName": " ",
                  "type": "{HTMLFormElement}",
                  "postType": " ",
                  "description": "- form to get login data for",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {Object} options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": "",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {boolean} options.guid - guid of a login to retrieve",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.guid",
                  "postName": " ",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "- guid of a login to retrieve",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {boolean} options.showPrimaryPassword - whether to show a primary password prompt",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.showPrimaryPassword",
                  "postName": " ",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "- whether to show a primary password prompt",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "setupProgressListener",
        "line": 1624,
        "params": [
          {
            "type": "params",
            "id": "window",
            "line": 1624
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onDocumentVisibilityChange",
        "line": 1764,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 1764
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_deferHandlingEventUntilDocumentVisible",
        "line": 1780,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 1780
          },
          {
            "type": "params",
            "id": "document",
            "line": 1780
          },
          {
            "type": "params",
            "id": "fn",
            "line": 1780
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_processDOMFormHasPasswordEvent",
        "line": 1830,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 1830
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_processDOMFormHasPossibleUsernameEvent",
        "line": 1874,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 1874
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_processDOMInputPasswordAddedEvent",
        "line": 1931,
        "params": [
          {
            "type": "params",
            "id": "event",
            "line": 1931
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_fetchLoginsFromParentAndFillForm",
        "line": 1999,
        "params": [
          {
            "type": "params",
            "id": "form",
            "line": 1999
          }
        ],
        "comments": [
          {
            "description": "Fetch logins from the parent for a given form and then attempt to fill it.",
            "tags": [
              {
                "tag": "param",
                "name": "form",
                "type": "LoginForm",
                "optional": false,
                "description": "to fetch the logins for then try autofill.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {LoginForm} form to fetch the logins for then try autofill.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "form",
                      "postName": " ",
                      "type": "{LoginForm}",
                      "postType": " ",
                      "description": "to fetch the logins for then try autofill.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Fetch logins from the parent for a given form and then attempt to fill it.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Fetch logins from the parent for a given form and then attempt to fill it.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {LoginForm} form to fetch the logins for then try autofill.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "form",
                  "postName": " ",
                  "type": "{LoginForm}",
                  "postType": " ",
                  "description": "to fetch the logins for then try autofill.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "isPasswordGenerationForcedOn",
        "line": 2021,
        "params": [
          {
            "type": "params",
            "id": "passwordField",
            "line": 2021
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "stateForDocument",
        "line": 2029,
        "params": [
          {
            "type": "params",
            "id": "document",
            "line": 2029
          }
        ],
        "comments": [
          {
            "description": "Retrieves a reference to the state object associated with the given document. This is initialized to an object with default values.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Retrieves a reference to the state object associated with the given",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Retrieves a reference to the state object associated with the given",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * document. This is initialized to an object with default values.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "document. This is initialized to an object with default values.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "fillForm",
        "line": 2060,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 2060
          }
        ],
        "comments": [
          {
            "description": "Perform a password fill upon user request coming from the parent process. The fill will be in the form previously identified during page navigation.",
            "tags": [
              {
                "tag": "param",
                "name": "An",
                "type": "",
                "optional": false,
                "description": "object with the following properties: { loginFormOrigin: String with the origin for which the login UI was displayed. This must match the origin of the form used for the fill. loginsFound: Array containing the login to fill. While other messages may have more logins, for this use case this is expected to have exactly one element. The origin of the login may be different from the origin of the form used for the fill. recipes: Fill recipes transmitted together with the original message. inputElementIdentifier: An identifier generated for the input element via ContentDOMReference. originMatches: True if the origin of the form matches the page URI. }",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param An object with the following properties:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "An",
                      "postName": " ",
                      "type": "",
                      "postType": "",
                      "description": "object with the following properties:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *        {",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *          loginFormOrigin:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "          ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "loginFormOrigin:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *            String with the origin for which the login UI was displayed.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "            ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "String with the origin for which the login UI was displayed.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *            This must match the origin of the form used for the fill.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "            ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "This must match the origin of the form used for the fill.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *          loginsFound:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "          ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "loginsFound:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *            Array containing the login to fill. While other messages may",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "            ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Array containing the login to fill. While other messages may",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *            have more logins, for this use case this is expected to have",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "            ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "have more logins, for this use case this is expected to have",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *            exactly one element. The origin of the login may be different",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "            ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "exactly one element. The origin of the login may be different",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   *            from the origin of the form used for the fill.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "            ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "from the origin of the form used for the fill.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "   *          recipes:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "          ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "recipes:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   *            Fill recipes transmitted together with the original message.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "            ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Fill recipes transmitted together with the original message.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "   *          inputElementIdentifier:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "          ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "inputElementIdentifier:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   *            An identifier generated for the input element via ContentDOMReference.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "            ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "An identifier generated for the input element via ContentDOMReference.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 19,
                    "source": "   *          originMatches:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "          ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "originMatches:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 20,
                    "source": "   *            True if the origin of the form matches the page URI.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "            ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "True if the origin of the form matches the page URI.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 21,
                    "source": "   *        }",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "}",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 22,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 23,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Perform a password fill upon user request coming from the parent process.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Perform a password fill upon user request coming from the parent process.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * The fill will be in the form previously identified during page navigation.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The fill will be in the form previously identified during page navigation.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param An object with the following properties:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "An",
                  "postName": " ",
                  "type": "",
                  "postType": "",
                  "description": "object with the following properties:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *        {",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *          loginFormOrigin:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "          ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "loginFormOrigin:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *            String with the origin for which the login UI was displayed.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "            ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "String with the origin for which the login UI was displayed.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *            This must match the origin of the form used for the fill.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "            ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "This must match the origin of the form used for the fill.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *          loginsFound:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "          ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "loginsFound:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *            Array containing the login to fill. While other messages may",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "            ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Array containing the login to fill. While other messages may",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *            have more logins, for this use case this is expected to have",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "            ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "have more logins, for this use case this is expected to have",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *            exactly one element. The origin of the login may be different",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "            ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "exactly one element. The origin of the login may be different",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   *            from the origin of the form used for the fill.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "            ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "from the origin of the form used for the fill.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   *          recipes:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "          ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "recipes:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   *            Fill recipes transmitted together with the original message.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "            ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Fill recipes transmitted together with the original message.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   *          inputElementIdentifier:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "          ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "inputElementIdentifier:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   *            An identifier generated for the input element via ContentDOMReference.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "            ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An identifier generated for the input element via ContentDOMReference.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   *          originMatches:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "          ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "originMatches:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   *            True if the origin of the form matches the page URI.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "            ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "True if the origin of the form matches the page URI.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "   *        }",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "}",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 22,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 23,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "loginsFound",
        "line": 2111,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 2111
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onFieldAutoComplete",
        "line": 2126,
        "params": [
          {
            "type": "params",
            "id": "acInputField",
            "line": 2126
          },
          {
            "type": "params",
            "id": "loginGUID",
            "line": 2126
          }
        ],
        "comments": [
          {
            "description": "A username or password was autocompleted into a field.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * A username or password was autocompleted into a field.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A username or password was autocompleted into a field.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onUsernameAutocompleted",
        "line": 2155,
        "params": [
          {
            "type": "params",
            "id": "acInputField",
            "line": 2155
          }
        ],
        "comments": [
          {
            "description": "A username field was filled or tabbed away from so try fill in the associated password in the password field.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * A username field was filled or tabbed away from so try fill in the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A username field was filled or tabbed away from so try fill in the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * associated password in the password field.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "associated password in the password field.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_isAutocompleteDisabled",
        "line": 2214,
        "params": [
          {
            "type": "params",
            "id": "element",
            "line": 2214
          }
        ],
        "comments": [
          {
            "description": "",
            "tags": [
              {
                "tag": "return",
                "name": "true",
                "type": "",
                "optional": false,
                "description": "if the page requests autocomplete be disabled for the specified element.",
                "problems": [],
                "source": [
                  {
                    "number": 2,
                    "source": "   * @return true if the page requests autocomplete be disabled for the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@return",
                      "postTag": " ",
                      "name": "true",
                      "postName": " ",
                      "type": "",
                      "postType": "",
                      "description": "if the page requests autocomplete be disabled for the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 3,
                    "source": "   *              specified element.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "              ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "specified element.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 4,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * @return true if the page requests autocomplete be disabled for the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@return",
                  "postTag": " ",
                  "name": "true",
                  "postName": " ",
                  "type": "",
                  "postType": "",
                  "description": "if the page requests autocomplete be disabled for the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *              specified element.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "              ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "specified element.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_onDocumentRestored",
        "line": 2223,
        "params": [
          {
            "type": "params",
            "id": "aDocument",
            "line": 2223
          }
        ],
        "comments": [
          {
            "description": "Fill a page that was restored from bfcache since we wouldn't receive DOMInputPasswordAdded or DOMFormHasPassword events for it.",
            "tags": [
              {
                "tag": "param",
                "name": "aDocument",
                "type": "Document",
                "optional": false,
                "description": "that was restored from bfcache.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {Document} aDocument that was restored from bfcache.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "aDocument",
                      "postName": " ",
                      "type": "{Document}",
                      "postType": " ",
                      "description": "that was restored from bfcache.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Fill a page that was restored from bfcache since we wouldn't receive",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Fill a page that was restored from bfcache since we wouldn't receive",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * DOMInputPasswordAdded or DOMFormHasPassword events for it.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "DOMInputPasswordAdded or DOMFormHasPassword events for it.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {Document} aDocument that was restored from bfcache.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "aDocument",
                  "postName": " ",
                  "type": "{Document}",
                  "postType": " ",
                  "description": "that was restored from bfcache.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_onNavigation",
        "line": 2254,
        "params": [
          {
            "type": "params",
            "id": "aDocument",
            "line": 2254
          }
        ],
        "comments": [
          {
            "description": "Trigger capture on any relevant FormLikes due to a navigation alone (not necessarily due to an actual form submission). This method is used to capture logins for cases where form submit events are not used. To avoid multiple notifications for the same LoginForm, this currently avoids capturing when dealing with a real <form> which are ideally already using a submit event.",
            "tags": [
              {
                "tag": "param",
                "name": "document",
                "type": "Document",
                "optional": false,
                "description": "being navigated",
                "problems": [],
                "source": [
                  {
                    "number": 10,
                    "source": "   * @param {Document} document being navigated",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "document",
                      "postName": " ",
                      "type": "{Document}",
                      "postType": " ",
                      "description": "being navigated",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Trigger capture on any relevant FormLikes due to a navigation alone (not",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Trigger capture on any relevant FormLikes due to a navigation alone (not",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * necessarily due to an actual form submission). This method is used to",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "necessarily due to an actual form submission). This method is used to",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * capture logins for cases where form submit events are not used.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "capture logins for cases where form submit events are not used.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * To avoid multiple notifications for the same LoginForm, this currently",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "To avoid multiple notifications for the same LoginForm, this currently",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * avoids capturing when dealing with a real <form> which are ideally already",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "avoids capturing when dealing with a real <form> which are ideally already",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * using a submit event.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "using a submit event.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * @param {Document} document being navigated",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "document",
                  "postName": " ",
                  "type": "{Document}",
                  "postType": " ",
                  "description": "being navigated",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_onFormSubmit",
        "line": 2280,
        "params": [
          {
            "type": "params",
            "id": "form",
            "line": 2280
          },
          {
            "type": "params",
            "id": "reason",
            "line": 2280
          }
        ],
        "comments": [
          {
            "description": "Called by our observer when notified of a form submission. [Note that this happens before any DOM onsubmit handlers are invoked.] Looks for a password change in the submitted form, so we can update our stored password.",
            "tags": [
              {
                "tag": "param",
                "name": "form",
                "type": "LoginForm",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {LoginForm} form",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "form",
                      "postName": "",
                      "type": "{LoginForm}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Called by our observer when notified of a form submission.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Called by our observer when notified of a form submission.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * [Note that this happens before any DOM onsubmit handlers are invoked.]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "[Note that this happens before any DOM onsubmit handlers are invoked.]",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * Looks for a password change in the submitted form, so we can update",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Looks for a password change in the submitted form, so we can update",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * our stored password.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "our stored password.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {LoginForm} form",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "form",
                  "postName": "",
                  "type": "{LoginForm}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_maybeSendFormInteractionMessage",
        "line": 2320,
        "params": [
          {
            "type": "params",
            "id": "form",
            "line": 2321
          },
          {
            "type": "params",
            "id": "messageName",
            "line": 2322
          },
          {
            "type": "params",
            "id": "param2",
            "line": 2323
          }
        ],
        "comments": [
          {
            "description": "Extracts and validates information from a form-like element on the page.  If validation is successful, sends a message to the parent process requesting that it show a dialog. The validation works are divided into two parts: 1. Whether this is a valid form with a password (validate in this function) 2. Whether the password manager decides to send interaction message for this form (validate in _maybeSendFormInteractionMessageContinue) When the function is triggered by a form submission event, and the form is valid (pass #1), We still send the message to the parent even the validation of #2 fails. This is because there might be someone who is interested in form submission events regardless of whether the password manager decides to show the doorhanger or not.",
            "tags": [
              {
                "tag": "param",
                "name": "form",
                "type": "LoginForm",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 15,
                    "source": "   * @param {LoginForm} form",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "form",
                      "postName": "",
                      "type": "{LoginForm}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "messageName",
                "type": "string",
                "optional": false,
                "description": "used to categorize the type of message sent to the parent process.",
                "problems": [],
                "source": [
                  {
                    "number": 16,
                    "source": "   * @param {string} messageName used to categorize the type of message sent to the parent process.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "messageName",
                      "postName": " ",
                      "type": "{string}",
                      "postType": " ",
                      "description": "used to categorize the type of message sent to the parent process.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.targetField",
                "type": "Element?",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 17,
                    "source": "   * @param {Element?} options.targetField",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.targetField",
                      "postName": "",
                      "type": "{Element?}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.isSubmission",
                "type": "boolean",
                "optional": false,
                "description": "if true, this function call was prompted by a form submission.",
                "problems": [],
                "source": [
                  {
                    "number": 18,
                    "source": "   * @param {boolean} options.isSubmission if true, this function call was prompted by a form submission.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.isSubmission",
                      "postName": " ",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "if true, this function call was prompted by a form submission.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.triggeredByFillingGenerated",
                "type": "boolean?",
                "optional": false,
                "description": "whether or not this call was triggered by a generated password being filled into a form-like element.",
                "problems": [],
                "source": [
                  {
                    "number": 19,
                    "source": "   * @param {boolean?} options.triggeredByFillingGenerated whether or not this call was triggered by a",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.triggeredByFillingGenerated",
                      "postName": " ",
                      "type": "{boolean?}",
                      "postType": " ",
                      "description": "whether or not this call was triggered by a",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 20,
                    "source": "   *        generated password being filled into a form-like element.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "generated password being filled into a form-like element.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.ignoreConnect",
                "type": "boolean?",
                "optional": false,
                "description": "Whether to ignore isConnected attribute of a element.",
                "problems": [],
                "source": [
                  {
                    "number": 21,
                    "source": "   * @param {boolean?} options.ignoreConnect Whether to ignore isConnected attribute of a element.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.ignoreConnect",
                      "postName": " ",
                      "type": "{boolean?}",
                      "postType": " ",
                      "description": "Whether to ignore isConnected attribute of a element.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 22,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "whether",
                "type": "Boolean",
                "optional": false,
                "description": "the message is sent to the parent process.",
                "problems": [],
                "source": [
                  {
                    "number": 23,
                    "source": "   * @returns {Boolean} whether the message is sent to the parent process.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "whether",
                      "postName": " ",
                      "type": "{Boolean}",
                      "postType": " ",
                      "description": "the message is sent to the parent process.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 24,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 25,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Extracts and validates information from a form-like element on the page.  If validation is",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Extracts and validates information from a form-like element on the page.  If validation is",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * successful, sends a message to the parent process requesting that it show a dialog.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "successful, sends a message to the parent process requesting that it show a dialog.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * The validation works are divided into two parts:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The validation works are divided into two parts:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * 1. Whether this is a valid form with a password (validate in this function)",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "1. Whether this is a valid form with a password (validate in this function)",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * 2. Whether the password manager decides to send interaction message for this form",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "2. Whether the password manager decides to send interaction message for this form",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *    (validate in _maybeSendFormInteractionMessageContinue)",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "    ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "(validate in _maybeSendFormInteractionMessageContinue)",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * When the function is triggered by a form submission event, and the form is valid (pass #1),",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "When the function is triggered by a form submission event, and the form is valid (pass #1),",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * We still send the message to the parent even the validation of #2 fails. This is because",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "We still send the message to the parent even the validation of #2 fails. This is because",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   * there might be someone who is interested in form submission events regardless of whether",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "there might be someone who is interested in form submission events regardless of whether",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   * the password manager decides to show the doorhanger or not.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "the password manager decides to show the doorhanger or not.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   * @param {LoginForm} form",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "form",
                  "postName": "",
                  "type": "{LoginForm}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   * @param {string} messageName used to categorize the type of message sent to the parent process.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "messageName",
                  "postName": " ",
                  "type": "{string}",
                  "postType": " ",
                  "description": "used to categorize the type of message sent to the parent process.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   * @param {Element?} options.targetField",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.targetField",
                  "postName": "",
                  "type": "{Element?}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   * @param {boolean} options.isSubmission if true, this function call was prompted by a form submission.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.isSubmission",
                  "postName": " ",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "if true, this function call was prompted by a form submission.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   * @param {boolean?} options.triggeredByFillingGenerated whether or not this call was triggered by a",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.triggeredByFillingGenerated",
                  "postName": " ",
                  "type": "{boolean?}",
                  "postType": " ",
                  "description": "whether or not this call was triggered by a",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   *        generated password being filled into a form-like element.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "generated password being filled into a form-like element.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "   * @param {boolean?} options.ignoreConnect Whether to ignore isConnected attribute of a element.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.ignoreConnect",
                  "postName": " ",
                  "type": "{boolean?}",
                  "postType": " ",
                  "description": "Whether to ignore isConnected attribute of a element.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 22,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 23,
                "source": "   * @returns {Boolean} whether the message is sent to the parent process.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "whether",
                  "postName": " ",
                  "type": "{Boolean}",
                  "postType": " ",
                  "description": "the message is sent to the parent process.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 24,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 25,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_maybeSendFormInteractionMessageContinue",
        "line": 2402,
        "params": [
          {
            "type": "params",
            "id": "form",
            "line": 2403
          },
          {
            "type": "params",
            "id": "messageName",
            "line": 2404
          },
          {
            "type": "params",
            "id": "param2",
            "line": 2405
          }
        ],
        "comments": [
          {
            "description": "Continues the works that are not done in _maybeSendFormInteractionMessage. See comments in _maybeSendFormInteractionMessage for more details.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Continues the works that are not done in _maybeSendFormInteractionMessage.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Continues the works that are not done in _maybeSendFormInteractionMessage.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * See comments in _maybeSendFormInteractionMessage for more details.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "See comments in _maybeSendFormInteractionMessage for more details.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_doesEventClearPrevFieldValue",
        "line": 2581,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 2581
          }
        ],
        "comments": [
          {
            "description": "Heuristic for whether or not we should consider [field]s value to be 'new' (as opposed to 'changed') after applying [event].",
            "tags": [
              {
                "tag": "param",
                "name": "event.target",
                "type": "HTMLInputElement",
                "optional": false,
                "description": "input element being changed.",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {HTMLInputElement} event.target input element being changed.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "event.target",
                      "postName": " ",
                      "type": "{HTMLInputElement}",
                      "postType": " ",
                      "description": "input element being changed.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "event.data",
                "type": "string?",
                "optional": false,
                "description": "new value being input into the field.",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {string?} event.data new value being input into the field.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "event.data",
                      "postName": " ",
                      "type": "{string?}",
                      "postType": " ",
                      "description": "new value being input into the field.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "",
                "type": "boolean",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @returns {boolean}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Heuristic for whether or not we should consider [field]s value to be 'new' (as opposed to",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Heuristic for whether or not we should consider [field]s value to be 'new' (as opposed to",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * 'changed') after applying [event].",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "'changed') after applying [event].",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {HTMLInputElement} event.target input element being changed.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "event.target",
                  "postName": " ",
                  "type": "{HTMLInputElement}",
                  "postType": " ",
                  "description": "input element being changed.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {string?} event.data new value being input into the field.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "event.data",
                  "postName": " ",
                  "type": "{string?}",
                  "postType": " ",
                  "description": "new value being input into the field.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @returns {boolean}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_filledWithGeneratedPassword",
        "line": 2599,
        "params": [
          {
            "type": "params",
            "id": "passwordField",
            "line": 2599
          }
        ],
        "comments": [
          {
            "description": "The password field has been filled with a generated password, ensure the field is handled accordingly.",
            "tags": [
              {
                "tag": "param",
                "name": "passwordField",
                "type": "HTMLInputElement",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {HTMLInputElement} passwordField",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "passwordField",
                      "postName": "",
                      "type": "{HTMLInputElement}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * The password field has been filled with a generated password, ensure the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The password field has been filled with a generated password, ensure the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * field is handled accordingly.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "field is handled accordingly.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {HTMLInputElement} passwordField",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "passwordField",
                  "postName": "",
                  "type": "{HTMLInputElement}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_ignorePasswordEdit",
        "line": 2613,
        "params": [],
        "comments": [
          {
            "description": "Notify the parent that we are ignoring the password edit so that tests can listen for this as opposed to waiting for nothing to happen.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Notify the parent that we are ignoring the password edit",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Notify the parent that we are ignoring the password edit",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * so that tests can listen for this as opposed to waiting for",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "so that tests can listen for this as opposed to waiting for",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * nothing to happen.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "nothing to happen.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_passwordEditedOrGenerated",
        "line": 2623,
        "params": [
          {
            "type": "params",
            "id": "passwordField",
            "line": 2624
          }
        ],
        "comments": [
          {
            "description": "Notify the parent that a generated password was filled into a field or edited so that it can potentially be saved.",
            "tags": [
              {
                "tag": "param",
                "name": "passwordField",
                "type": "HTMLInputElement",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {HTMLInputElement} passwordField",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "passwordField",
                      "postName": "",
                      "type": "{HTMLInputElement}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Notify the parent that a generated password was filled into a field or",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Notify the parent that a generated password was filled into a field or",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * edited so that it can potentially be saved.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "edited so that it can potentially be saved.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {HTMLInputElement} passwordField",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "passwordField",
                  "postName": "",
                  "type": "{HTMLInputElement}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_filterForExactFormOriginLogins",
        "line": 2668,
        "params": [
          {
            "type": "params",
            "id": "logins",
            "line": 2668
          },
          {
            "type": "params",
            "id": "form",
            "line": 2668
          }
        ],
        "comments": [
          {
            "description": "Filter logins for exact origin/formActionOrigin and dedupe on usernamematche",
            "tags": [
              {
                "tag": "param",
                "name": "logins",
                "type": "nsILoginInfo[]",
                "optional": false,
                "description": "an array of nsILoginInfo that could be used for the form, including ones with a different form action origin which are only used when the fill is userTriggered",
                "problems": [],
                "source": [
                  {
                    "number": 3,
                    "source": "   * @param {nsILoginInfo[]} logins an array of nsILoginInfo that could be",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "logins",
                      "postName": " ",
                      "type": "{nsILoginInfo[]}",
                      "postType": " ",
                      "description": "an array of nsILoginInfo that could be",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 4,
                    "source": "   *        used for the form, including ones with a different form action origin",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "used for the form, including ones with a different form action origin",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *        which are only used when the fill is userTriggered",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "which are only used when the fill is userTriggered",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "form",
                "type": "LoginForm",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {LoginForm} form",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "form",
                      "postName": "",
                      "type": "{LoginForm}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Filter logins for exact origin/formActionOrigin and dedupe on usernamematche",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Filter logins for exact origin/formActionOrigin and dedupe on usernamematche",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * @param {nsILoginInfo[]} logins an array of nsILoginInfo that could be",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "logins",
                  "postName": " ",
                  "type": "{nsILoginInfo[]}",
                  "postType": " ",
                  "description": "an array of nsILoginInfo that could be",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *        used for the form, including ones with a different form action origin",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "used for the form, including ones with a different form action origin",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *        which are only used when the fill is userTriggered",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "which are only used when the fill is userTriggered",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {LoginForm} form",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "form",
                  "postName": "",
                  "type": "{LoginForm}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_fillForm",
        "line": 2734,
        "params": [
          {
            "type": "params",
            "id": "form",
            "line": 2735
          },
          {
            "type": "params",
            "id": "foundLogins",
            "line": 2736
          },
          {
            "type": "params",
            "id": "recipes",
            "line": 2737
          }
        ],
        "comments": [
          {
            "description": "Attempt to find the username and password fields in a form, and fill them in using the provided logins and recipes.",
            "tags": [
              {
                "tag": "param",
                "name": "form",
                "type": "LoginForm",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {LoginForm} form",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "form",
                      "postName": "",
                      "type": "{LoginForm}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "foundLogins",
                "type": "nsILoginInfo[]",
                "optional": false,
                "description": "an array of nsILoginInfo that could be used for the form, including ones with a different form action origin which are only used when the fill is userTriggered",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {nsILoginInfo[]} foundLogins an array of nsILoginInfo that could be",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "foundLogins",
                      "postName": " ",
                      "type": "{nsILoginInfo[]}",
                      "postType": " ",
                      "description": "an array of nsILoginInfo that could be",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *        used for the form, including ones with a different form action origin",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "used for the form, including ones with a different form action origin",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *        which are only used when the fill is userTriggered",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "which are only used when the fill is userTriggered",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "recipes",
                "type": "Set",
                "optional": false,
                "description": "a set of recipes that could be used to affect how the form is filled",
                "problems": [],
                "source": [
                  {
                    "number": 9,
                    "source": "   * @param {Set} recipes a set of recipes that could be used to affect how the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "recipes",
                      "postName": " ",
                      "type": "{Set}",
                      "postType": " ",
                      "description": "a set of recipes that could be used to affect how the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *        form is filled",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "form is filled",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options",
                "type": "Object",
                "optional": true,
                "description": "a list of options for this method",
                "problems": [],
                "source": [
                  {
                    "number": 11,
                    "source": "   * @param {Object} [options = {}] a list of options for this method",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options = {}]",
                      "postName": " ",
                      "type": "{Object}",
                      "postType": " ",
                      "description": "a list of options for this method",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ],
                "default": "{}"
              },
              {
                "tag": "param",
                "name": "options.inputElement",
                "type": "HTMLInputElement",
                "optional": true,
                "description": "an optional target input element we want to fill",
                "problems": [],
                "source": [
                  {
                    "number": 12,
                    "source": "   * @param {HTMLInputElement} [options.inputElement = null] an optional target",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options.inputElement = null]",
                      "postName": " ",
                      "type": "{HTMLInputElement}",
                      "postType": " ",
                      "description": "an optional target",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *        input element we want to fill",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "input element we want to fill",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ],
                "default": "null"
              },
              {
                "tag": "param",
                "name": "options.autofillForm",
                "type": "bool",
                "optional": true,
                "description": "denotes if we should fill the form in automatically",
                "problems": [],
                "source": [
                  {
                    "number": 14,
                    "source": "   * @param {bool} [options.autofillForm = false] denotes if we should fill the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options.autofillForm = false]",
                      "postName": " ",
                      "type": "{bool}",
                      "postType": " ",
                      "description": "denotes if we should fill the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "   *        form in automatically",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "form in automatically",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ],
                "default": "false"
              },
              {
                "tag": "param",
                "name": "options.clobberUsername",
                "type": "bool",
                "optional": true,
                "description": "controls if an existing username can be overwritten. If this is false and an inputElement of type password is also passed, the username field will be ignored. If this is false and no inputElement is passed, if the username field value is not found in foundLogins, it will not fill the password.",
                "problems": [],
                "source": [
                  {
                    "number": 16,
                    "source": "   * @param {bool} [options.clobberUsername = false] controls if an existing",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options.clobberUsername = false]",
                      "postName": " ",
                      "type": "{bool}",
                      "postType": " ",
                      "description": "controls if an existing",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "   *        username can be overwritten. If this is false and an inputElement",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "username can be overwritten. If this is false and an inputElement",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   *        of type password is also passed, the username field will be ignored.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "of type password is also passed, the username field will be ignored.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 19,
                    "source": "   *        If this is false and no inputElement is passed, if the username",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "If this is false and no inputElement is passed, if the username",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 20,
                    "source": "   *        field value is not found in foundLogins, it will not fill the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "field value is not found in foundLogins, it will not fill the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 21,
                    "source": "   *        password.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "password.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ],
                "default": "false"
              },
              {
                "tag": "param",
                "name": "options.clobberPassword",
                "type": "bool",
                "optional": true,
                "description": "controls if an existing password value can be overwritten",
                "problems": [],
                "source": [
                  {
                    "number": 22,
                    "source": "   * @param {bool} [options.clobberPassword = false] controls if an existing",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options.clobberPassword = false]",
                      "postName": " ",
                      "type": "{bool}",
                      "postType": " ",
                      "description": "controls if an existing",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 23,
                    "source": "   *        password value can be overwritten",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "password value can be overwritten",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ],
                "default": "false"
              },
              {
                "tag": "param",
                "name": "options.userTriggered",
                "type": "bool",
                "optional": true,
                "description": "an indication of whether this filling was triggered by the user",
                "problems": [],
                "source": [
                  {
                    "number": 24,
                    "source": "   * @param {bool} [options.userTriggered = false] an indication of whether",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[options.userTriggered = false]",
                      "postName": " ",
                      "type": "{bool}",
                      "postType": " ",
                      "description": "an indication of whether",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 25,
                    "source": "   *        this filling was triggered by the user",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "this filling was triggered by the user",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 26,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 27,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ],
                "default": "false"
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Attempt to find the username and password fields in a form, and fill them",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Attempt to find the username and password fields in a form, and fill them",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * in using the provided logins and recipes.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "in using the provided logins and recipes.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {LoginForm} form",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "form",
                  "postName": "",
                  "type": "{LoginForm}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {nsILoginInfo[]} foundLogins an array of nsILoginInfo that could be",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "foundLogins",
                  "postName": " ",
                  "type": "{nsILoginInfo[]}",
                  "postType": " ",
                  "description": "an array of nsILoginInfo that could be",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *        used for the form, including ones with a different form action origin",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "used for the form, including ones with a different form action origin",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *        which are only used when the fill is userTriggered",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "which are only used when the fill is userTriggered",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * @param {Set} recipes a set of recipes that could be used to affect how the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "recipes",
                  "postName": " ",
                  "type": "{Set}",
                  "postType": " ",
                  "description": "a set of recipes that could be used to affect how the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *        form is filled",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "form is filled",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * @param {Object} [options = {}] a list of options for this method",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options = {}]",
                  "postName": " ",
                  "type": "{Object}",
                  "postType": " ",
                  "description": "a list of options for this method",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   * @param {HTMLInputElement} [options.inputElement = null] an optional target",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options.inputElement = null]",
                  "postName": " ",
                  "type": "{HTMLInputElement}",
                  "postType": " ",
                  "description": "an optional target",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *        input element we want to fill",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "input element we want to fill",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   * @param {bool} [options.autofillForm = false] denotes if we should fill the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options.autofillForm = false]",
                  "postName": " ",
                  "type": "{bool}",
                  "postType": " ",
                  "description": "denotes if we should fill the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   *        form in automatically",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "form in automatically",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   * @param {bool} [options.clobberUsername = false] controls if an existing",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options.clobberUsername = false]",
                  "postName": " ",
                  "type": "{bool}",
                  "postType": " ",
                  "description": "controls if an existing",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   *        username can be overwritten. If this is false and an inputElement",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "username can be overwritten. If this is false and an inputElement",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   *        of type password is also passed, the username field will be ignored.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "of type password is also passed, the username field will be ignored.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   *        If this is false and no inputElement is passed, if the username",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If this is false and no inputElement is passed, if the username",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   *        field value is not found in foundLogins, it will not fill the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "field value is not found in foundLogins, it will not fill the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "   *        password.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "password.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 22,
                "source": "   * @param {bool} [options.clobberPassword = false] controls if an existing",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options.clobberPassword = false]",
                  "postName": " ",
                  "type": "{bool}",
                  "postType": " ",
                  "description": "controls if an existing",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 23,
                "source": "   *        password value can be overwritten",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "password value can be overwritten",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 24,
                "source": "   * @param {bool} [options.userTriggered = false] an indication of whether",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[options.userTriggered = false]",
                  "postName": " ",
                  "type": "{bool}",
                  "postType": " ",
                  "description": "an indication of whether",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 25,
                "source": "   *        this filling was triggered by the user",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "this filling was triggered by the user",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 26,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 27,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "eslint-disable-next-line complexity",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " eslint-disable-next-line complexity",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "eslint-disable-next-line complexity",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getScenario",
        "line": 3129,
        "params": [
          {
            "type": "params",
            "id": "inputElement",
            "line": 3129
          }
        ],
        "kind": "method"
      }
    ]
  }
]