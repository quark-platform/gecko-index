[
  {
    "type": "variable-declaration",
    "id": "FormLikeFactory",
    "line": 10,
    "typeEstimation": {
      "type": "object-estimation",
      "keys": [
        {
          "type": "object-property",
          "line": 11,
          "id": "_propsFromForm"
        },
        {
          "type": "object-method",
          "line": 20,
          "id": "createFromForm",
          "comments": [
            {
              "description": "Create a FormLike object from a <form>.",
              "tags": [
                {
                  "tag": "param",
                  "name": "aForm",
                  "type": "HTMLFormElement",
                  "optional": false,
                  "description": "",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @param {HTMLFormElement} aForm",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "aForm",
                        "postName": "",
                        "type": "{HTMLFormElement}",
                        "postType": " ",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "return",
                  "name": "",
                  "type": "FormLike",
                  "optional": false,
                  "description": "",
                  "problems": [],
                  "source": [
                    {
                      "number": 5,
                      "source": "   * @return {FormLike}",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "",
                        "postName": "",
                        "type": "{FormLike}",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "throws",
                  "name": "Error",
                  "type": "",
                  "optional": false,
                  "description": "if aForm isn't an HTMLFormElement",
                  "problems": [],
                  "source": [
                    {
                      "number": 6,
                      "source": "   * @throws Error if aForm isn't an HTMLFormElement",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@throws",
                        "postTag": " ",
                        "name": "Error",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "if aForm isn't an HTMLFormElement",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 8,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Create a FormLike object from a <form>.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Create a FormLike object from a <form>.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @param {HTMLFormElement} aForm",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "aForm",
                    "postName": "",
                    "type": "{HTMLFormElement}",
                    "postType": " ",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * @return {FormLike}",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "",
                    "postName": "",
                    "type": "{FormLike}",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * @throws Error if aForm isn't an HTMLFormElement",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@throws",
                    "postTag": " ",
                    "name": "Error",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "if aForm isn't an HTMLFormElement",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "aForm"
          ]
        },
        {
          "type": "object-method",
          "line": 55,
          "id": "createFromField",
          "comments": [
            {
              "description": "Create a FormLike object from an <input>/<select> in a document. If the field is in a <form>, construct the FormLike from the form. Otherwise, create a FormLike with a rootElement (wrapper) according to heuristics. Currently all <input>/<select> not in a <form> are one FormLike but this shouldn't be relied upon as the heuristics may change to detect multiple \"forms\" (e.g. registration and login) on one page with a <form>. Note that two FormLikes created from the same field won't return the same FormLike object. Use the `rootElement` property on the FormLike as a key instead.",
              "tags": [
                {
                  "tag": "param",
                  "name": "aField",
                  "type": "HTMLInputElement|HTMLSelectElement",
                  "optional": false,
                  "description": "- an <input> or <select> field in a document",
                  "problems": [],
                  "source": [
                    {
                      "number": 13,
                      "source": "   * @param {HTMLInputElement|HTMLSelectElement} aField - an <input> or <select> field in a document",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "aField",
                        "postName": " ",
                        "type": "{HTMLInputElement|HTMLSelectElement}",
                        "postType": " ",
                        "description": "- an <input> or <select> field in a document",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "return",
                  "name": "",
                  "type": "FormLike",
                  "optional": false,
                  "description": "",
                  "problems": [],
                  "source": [
                    {
                      "number": 14,
                      "source": "   * @return {FormLike}",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "",
                        "postName": "",
                        "type": "{FormLike}",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "throws",
                  "name": "Error",
                  "type": "",
                  "optional": false,
                  "description": "if aField isn't a password or username field in a document",
                  "problems": [],
                  "source": [
                    {
                      "number": 15,
                      "source": "   * @throws Error if aField isn't a password or username field in a document",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@throws",
                        "postTag": " ",
                        "name": "Error",
                        "postName": " ",
                        "type": "",
                        "postType": "",
                        "description": "if aField isn't a password or username field in a document",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 16,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 17,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Create a FormLike object from an <input>/<select> in a document.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Create a FormLike object from an <input>/<select> in a document.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * If the field is in a <form>, construct the FormLike from the form.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "If the field is in a <form>, construct the FormLike from the form.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * Otherwise, create a FormLike with a rootElement (wrapper) according to",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Otherwise, create a FormLike with a rootElement (wrapper) according to",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * heuristics. Currently all <input>/<select> not in a <form> are one FormLike",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "heuristics. Currently all <input>/<select> not in a <form> are one FormLike",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   * but this shouldn't be relied upon as the heuristics may change to detect",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "but this shouldn't be relied upon as the heuristics may change to detect",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   * multiple \"forms\" (e.g. registration and login) on one page with a <form>.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "multiple \"forms\" (e.g. registration and login) on one page with a <form>.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   * Note that two FormLikes created from the same field won't return the same FormLike object.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Note that two FormLikes created from the same field won't return the same FormLike object.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "   * Use the `rootElement` property on the FormLike as a key instead.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Use the `rootElement` property on the FormLike as a key instead.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 12,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 13,
                  "source": "   * @param {HTMLInputElement|HTMLSelectElement} aField - an <input> or <select> field in a document",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "aField",
                    "postName": " ",
                    "type": "{HTMLInputElement|HTMLSelectElement}",
                    "postType": " ",
                    "description": "- an <input> or <select> field in a document",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 14,
                  "source": "   * @return {FormLike}",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "",
                    "postName": "",
                    "type": "{FormLike}",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 15,
                  "source": "   * @throws Error if aField isn't a password or username field in a document",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@throws",
                    "postTag": " ",
                    "name": "Error",
                    "postName": " ",
                    "type": "",
                    "postType": "",
                    "description": "if aField isn't a password or username field in a document",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 16,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 17,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "aField"
          ]
        },
        {
          "type": "object-method",
          "line": 106,
          "id": "closestFormIgnoringShadowRoots",
          "comments": [
            {
              "description": "Find the closest <form> if any when aField is inside a ShadowRoot.",
              "tags": [
                {
                  "tag": "param",
                  "name": "aField",
                  "type": "HTMLInputElement",
                  "optional": false,
                  "description": "- a password or username field in a document",
                  "problems": [],
                  "source": [
                    {
                      "number": 4,
                      "source": "   * @param {HTMLInputElement} aField - a password or username field in a document",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "aField",
                        "postName": " ",
                        "type": "{HTMLInputElement}",
                        "postType": " ",
                        "description": "- a password or username field in a document",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "return",
                  "name": "",
                  "type": "HTMLFormElement|null",
                  "optional": false,
                  "description": "",
                  "problems": [],
                  "source": [
                    {
                      "number": 5,
                      "source": "   * @return {HTMLFormElement|null}",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "",
                        "postName": "",
                        "type": "{HTMLFormElement|null}",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 6,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 7,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Find the closest <form> if any when aField is inside a ShadowRoot.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Find the closest <form> if any when aField is inside a ShadowRoot.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * @param {HTMLInputElement} aField - a password or username field in a document",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "aField",
                    "postName": " ",
                    "type": "{HTMLInputElement}",
                    "postType": " ",
                    "description": "- a password or username field in a document",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * @return {HTMLFormElement|null}",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "",
                    "postName": "",
                    "type": "{HTMLFormElement|null}",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "aField"
          ]
        },
        {
          "type": "object-method",
          "line": 131,
          "id": "findRootForField",
          "comments": [
            {
              "description": "Determine the Element that encapsulates the related fields. For example, if a page contains a login form and a checkout form which are \"submitted\" separately, and the username field is passed in, ideally this would return an ancestor Element of the username and password fields which doesn't include any of the checkout fields.",
              "tags": [
                {
                  "tag": "param",
                  "name": "aField",
                  "type": "HTMLInputElement|HTMLSelectElement",
                  "optional": false,
                  "description": "- a field in a document",
                  "problems": [],
                  "source": [
                    {
                      "number": 8,
                      "source": "   * @param {HTMLInputElement|HTMLSelectElement} aField - a field in a document",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@param",
                        "postTag": " ",
                        "name": "aField",
                        "postName": " ",
                        "type": "{HTMLInputElement|HTMLSelectElement}",
                        "postType": " ",
                        "description": "- a field in a document",
                        "end": "",
                        "lineEnd": ""
                      }
                    }
                  ]
                },
                {
                  "tag": "return",
                  "name": "-",
                  "type": "HTMLElement",
                  "optional": false,
                  "description": "the root element surrounding related fields",
                  "problems": [],
                  "source": [
                    {
                      "number": 9,
                      "source": "   * @return {HTMLElement} - the root element surrounding related fields",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "*",
                        "postDelimiter": " ",
                        "tag": "@return",
                        "postTag": " ",
                        "name": "-",
                        "postName": " ",
                        "type": "{HTMLElement}",
                        "postType": " ",
                        "description": "the root element surrounding related fields",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 10,
                      "source": "   ",
                      "tokens": {
                        "start": "   ",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "",
                        "lineEnd": ""
                      }
                    },
                    {
                      "number": 11,
                      "source": "*/",
                      "tokens": {
                        "start": "",
                        "delimiter": "",
                        "postDelimiter": "",
                        "tag": "",
                        "postTag": "",
                        "name": "",
                        "postName": "",
                        "type": "",
                        "postType": "",
                        "description": "",
                        "end": "*/",
                        "lineEnd": ""
                      }
                    }
                  ]
                }
              ],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Determine the Element that encapsulates the related fields. For example, if",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Determine the Element that encapsulates the related fields. For example, if",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * a page contains a login form and a checkout form which are \"submitted\"",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "a page contains a login form and a checkout form which are \"submitted\"",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   * separately, and the username field is passed in, ideally this would return",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "separately, and the username field is passed in, ideally this would return",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "   * an ancestor Element of the username and password fields which doesn't",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "an ancestor Element of the username and password fields which doesn't",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 6,
                  "source": "   * include any of the checkout fields.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "include any of the checkout fields.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 7,
                  "source": "   *",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 8,
                  "source": "   * @param {HTMLInputElement|HTMLSelectElement} aField - a field in a document",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@param",
                    "postTag": " ",
                    "name": "aField",
                    "postName": " ",
                    "type": "{HTMLInputElement|HTMLSelectElement}",
                    "postType": " ",
                    "description": "- a field in a document",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 9,
                  "source": "   * @return {HTMLElement} - the root element surrounding related fields",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "@return",
                    "postTag": " ",
                    "name": "-",
                    "postName": " ",
                    "type": "{HTMLElement}",
                    "postType": " ",
                    "description": "the root element surrounding related fields",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 10,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 11,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "aField"
          ]
        },
        {
          "type": "object-method",
          "line": 144,
          "id": "_addToJSONProperty",
          "comments": [
            {
              "description": "Add a `toJSON` property to a FormLike so logging which ends up going through dump doesn't include usless garbage from DOM objects.",
              "tags": [],
              "source": [
                {
                  "number": 0,
                  "source": "/**",
                  "tokens": {
                    "start": "",
                    "delimiter": "/**",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 1,
                  "source": "*",
                  "tokens": {
                    "start": "",
                    "delimiter": "*",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 2,
                  "source": "   * Add a `toJSON` property to a FormLike so logging which ends up going",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "Add a `toJSON` property to a FormLike so logging which ends up going",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 3,
                  "source": "   * through dump doesn't include usless garbage from DOM objects.",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "*",
                    "postDelimiter": " ",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "through dump doesn't include usless garbage from DOM objects.",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 4,
                  "source": "   ",
                  "tokens": {
                    "start": "   ",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "",
                    "lineEnd": ""
                  }
                },
                {
                  "number": 5,
                  "source": "*/",
                  "tokens": {
                    "start": "",
                    "delimiter": "",
                    "postDelimiter": "",
                    "tag": "",
                    "postTag": "",
                    "name": "",
                    "postName": "",
                    "type": "",
                    "postType": "",
                    "description": "",
                    "end": "*/",
                    "lineEnd": ""
                  }
                }
              ],
              "problems": []
            }
          ],
          "kind": "method",
          "params": [
            "aFormLike"
          ]
        }
      ]
    }
  }
]