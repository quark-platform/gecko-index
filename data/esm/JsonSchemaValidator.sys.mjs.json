[
  {
    "type": "class",
    "id": "JsonSchemaValidator",
    "line": 36,
    "methods": [
      {
        "type": "method",
        "id": "validate",
        "line": 127,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 128
          },
          {
            "type": "params",
            "id": "schema",
            "line": 129
          },
          {
            "type": "params",
            "id": "param2",
            "line": 130
          }
        ],
        "comments": [
          {
            "description": "Validates a value against a schema.",
            "tags": [
              {
                "tag": "param",
                "name": "value",
                "type": "*",
                "optional": false,
                "description": "The value to validate.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {*} value",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "value",
                      "postName": "",
                      "type": "{*}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *   The value to validate.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The value to validate.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "schema",
                "type": "object",
                "optional": false,
                "description": "The schema to validate against.",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {object} schema",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "schema",
                      "postName": "",
                      "type": "{object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *   The schema to validate against.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The schema to validate against.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "allowArrayNonMatchingItems",
                "type": "boolean",
                "optional": false,
                "description": "When true: Invalid items in arrays will be ignored, and they won't be included in result.parsedValue. When false: Invalid items in arrays will cause validation to fail.",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @param {boolean} allowArrayNonMatchingItems",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "allowArrayNonMatchingItems",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *   When true:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "When true:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *     Invalid items in arrays will be ignored, and they won't be included in",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Invalid items in arrays will be ignored, and they won't be included in",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *     result.parsedValue.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "result.parsedValue.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *   When false:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "When false:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *     Invalid items in arrays will cause validation to fail.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Invalid items in arrays will cause validation to fail.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "allowExplicitUndefinedProperties",
                "type": "boolean",
                "optional": false,
                "description": "When true: `someProperty: undefined` will be allowed for non-required properties. When false: `someProperty: undefined` will cause validation to fail even for properties that are not required.",
                "problems": [],
                "source": [
                  {
                    "number": 14,
                    "source": "   * @param {boolean} allowExplicitUndefinedProperties",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "allowExplicitUndefinedProperties",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "   *   When true:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "When true:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   *     `someProperty: undefined` will be allowed for non-required properties.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "`someProperty: undefined` will be allowed for non-required properties.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "   *   When false:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "When false:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   *     `someProperty: undefined` will cause validation to fail even for",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "`someProperty: undefined` will cause validation to fail even for",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 19,
                    "source": "   *     properties that are not required.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "properties that are not required.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "allowNullAsUndefinedProperties",
                "type": "boolean",
                "optional": false,
                "description": "When true: `someProperty: null` will be allowed for non-required properties whose expected types are non-null. When false: `someProperty: null` will cause validation to fail for non-required properties, except for properties whose expected types are null.",
                "problems": [],
                "source": [
                  {
                    "number": 20,
                    "source": "   * @param {boolean} allowNullAsUndefinedProperties",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "allowNullAsUndefinedProperties",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 21,
                    "source": "   *   When true:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "When true:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 22,
                    "source": "   *     `someProperty: null` will be allowed for non-required properties whose",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "`someProperty: null` will be allowed for non-required properties whose",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 23,
                    "source": "   *     expected types are non-null.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "expected types are non-null.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 24,
                    "source": "   *   When false:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "When false:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 25,
                    "source": "   *     `someProperty: null` will cause validation to fail for non-required",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "`someProperty: null` will cause validation to fail for non-required",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 26,
                    "source": "   *     properties, except for properties whose expected types are null.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "properties, except for properties whose expected types are null.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "allowAdditionalProperties",
                "type": "boolean",
                "optional": false,
                "description": "When true: Properties that are not defined in the schema will be ignored, and they won't be included in result.parsedValue. When false: Properties that are not defined in the schema will cause validation to fail. Note: Schema objects of type \"object\" can also contain a boolean property called `additionalProperties` that functions as a local version of this param. When true, extra properties will be allowed in the corresponding input objects regardless of `allowAdditionalProperties`, and as with `allowAdditionalProperties`, extra properties won't be included in `result.parsedValue`. (The inverse is not true: If a schema object defines `additionalProperties: false` but `allowAdditionalProperties` is true, extra properties will be allowed.)",
                "problems": [],
                "source": [
                  {
                    "number": 27,
                    "source": "   * @param {boolean} allowAdditionalProperties",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "allowAdditionalProperties",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 28,
                    "source": "   *   When true:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "When true:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 29,
                    "source": "   *     Properties that are not defined in the schema will be ignored, and they",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Properties that are not defined in the schema will be ignored, and they",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 30,
                    "source": "   *     won't be included in result.parsedValue.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "won't be included in result.parsedValue.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 31,
                    "source": "   *   When false:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "When false:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 32,
                    "source": "   *     Properties that are not defined in the schema will cause validation to",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Properties that are not defined in the schema will cause validation to",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 33,
                    "source": "   *     fail.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "fail.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 34,
                    "source": "   *   Note: Schema objects of type \"object\" can also contain a boolean property",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Note: Schema objects of type \"object\" can also contain a boolean property",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 35,
                    "source": "   *     called `additionalProperties` that functions as a local version of this",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "called `additionalProperties` that functions as a local version of this",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 36,
                    "source": "   *     param. When true, extra properties will be allowed in the corresponding",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "param. When true, extra properties will be allowed in the corresponding",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 37,
                    "source": "   *     input objects regardless of `allowAdditionalProperties`, and as with",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "input objects regardless of `allowAdditionalProperties`, and as with",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 38,
                    "source": "   *     `allowAdditionalProperties`, extra properties won't be included in",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "`allowAdditionalProperties`, extra properties won't be included in",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 39,
                    "source": "   *     `result.parsedValue`. (The inverse is not true: If a schema object",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "`result.parsedValue`. (The inverse is not true: If a schema object",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 40,
                    "source": "   *     defines `additionalProperties: false` but `allowAdditionalProperties`",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "defines `additionalProperties: false` but `allowAdditionalProperties`",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 41,
                    "source": "   *     is true, extra properties will be allowed.)",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "is true, extra properties will be allowed.)",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "return",
                "name": "",
                "type": "object",
                "optional": false,
                "description": "The result of the validation, an object that looks like this: { valid, parsedValue, error: { message, rootValue, rootSchema, invalidValue, invalidPropertyNameComponents, } } {boolean} valid True if validation is successful, false if not. {*} parsedValue If validation is successful, this is the validated value.  It can differ from the passed-in value in the following ways: * If a type in the schema is \"URL\" or \"URLorEmpty\", the passed-in value can use a string instead and it will be converted into a `URL` object in parsedValue. * Some of the `allow*` parameters control the properties that appear. See above. {Error} error If validation fails, `error` will be present.  It contains a number of properties useful for understanding the validation failure. {string} error.message The validation failure message. {*} error.rootValue The passed-in value. {object} error.rootSchema The passed-in schema. {*} invalidValue The value that caused validation to fail.  If the passed-in value is a scalar type, this will be the value itself.  If the value is an object or array, it will be the specific nested value in the object or array that caused validation to fail. {array} invalidPropertyNameComponents If the passed-in value is an object or array, this will contain the names of the object properties or array indexes where invalidValue can be found.  For example, assume the passed-in value is: { foo: { bar: { baz: 123 }}} And assume `baz` should be a string instead of a number.  Then invalidValue will be 123, and invalidPropertyNameComponents will be [\"foo\", \"bar\", \"baz\"], indicating that the erroneous property in the passed-in object is `foo.bar.baz`.",
                "problems": [],
                "source": [
                  {
                    "number": 42,
                    "source": "   * @return {object}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@return",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{object}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 43,
                    "source": "   *   The result of the validation, an object that looks like this:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The result of the validation, an object that looks like this:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 44,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 45,
                    "source": "   *   {",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 46,
                    "source": "   *     valid,",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "valid,",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 47,
                    "source": "   *     parsedValue,",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "parsedValue,",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 48,
                    "source": "   *     error: {",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "error: {",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 49,
                    "source": "   *       message,",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "       ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "message,",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 50,
                    "source": "   *       rootValue,",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "       ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "rootValue,",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 51,
                    "source": "   *       rootSchema,",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "       ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "rootSchema,",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 52,
                    "source": "   *       invalidValue,",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "       ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "invalidValue,",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 53,
                    "source": "   *       invalidPropertyNameComponents,",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "       ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "invalidPropertyNameComponents,",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 54,
                    "source": "   *     }",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "}",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 55,
                    "source": "   *   }",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "}",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 56,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 57,
                    "source": "   *   {boolean} valid",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{boolean} valid",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 58,
                    "source": "   *     True if validation is successful, false if not.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "True if validation is successful, false if not.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 59,
                    "source": "   *   {*} parsedValue",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{*} parsedValue",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 60,
                    "source": "   *     If validation is successful, this is the validated value.  It can",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "If validation is successful, this is the validated value.  It can",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 61,
                    "source": "   *     differ from the passed-in value in the following ways:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "differ from the passed-in value in the following ways:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 62,
                    "source": "   *       * If a type in the schema is \"URL\" or \"URLorEmpty\", the passed-in",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "       ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "* If a type in the schema is \"URL\" or \"URLorEmpty\", the passed-in",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 63,
                    "source": "   *         value can use a string instead and it will be converted into a",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "value can use a string instead and it will be converted into a",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 64,
                    "source": "   *         `URL` object in parsedValue.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "`URL` object in parsedValue.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 65,
                    "source": "   *       * Some of the `allow*` parameters control the properties that appear.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "       ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "* Some of the `allow*` parameters control the properties that appear.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 66,
                    "source": "   *         See above.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "         ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "See above.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 67,
                    "source": "   *   {Error} error",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{Error} error",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 68,
                    "source": "   *     If validation fails, `error` will be present.  It contains a number of",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "If validation fails, `error` will be present.  It contains a number of",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 69,
                    "source": "   *     properties useful for understanding the validation failure.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "properties useful for understanding the validation failure.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 70,
                    "source": "   *   {string} error.message",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{string} error.message",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 71,
                    "source": "   *     The validation failure message.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The validation failure message.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 72,
                    "source": "   *   {*} error.rootValue",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{*} error.rootValue",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 73,
                    "source": "   *     The passed-in value.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The passed-in value.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 74,
                    "source": "   *   {object} error.rootSchema",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{object} error.rootSchema",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 75,
                    "source": "   *     The passed-in schema.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The passed-in schema.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 76,
                    "source": "   *   {*} invalidValue",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{*} invalidValue",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 77,
                    "source": "   *     The value that caused validation to fail.  If the passed-in value is a",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The value that caused validation to fail.  If the passed-in value is a",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 78,
                    "source": "   *     scalar type, this will be the value itself.  If the value is an object",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "scalar type, this will be the value itself.  If the value is an object",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 79,
                    "source": "   *     or array, it will be the specific nested value in the object or array",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "or array, it will be the specific nested value in the object or array",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 80,
                    "source": "   *     that caused validation to fail.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "that caused validation to fail.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 81,
                    "source": "   *   {array} invalidPropertyNameComponents",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{array} invalidPropertyNameComponents",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 82,
                    "source": "   *     If the passed-in value is an object or array, this will contain the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "If the passed-in value is an object or array, this will contain the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 83,
                    "source": "   *     names of the object properties or array indexes where invalidValue can",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "names of the object properties or array indexes where invalidValue can",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 84,
                    "source": "   *     be found.  For example, assume the passed-in value is:",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "be found.  For example, assume the passed-in value is:",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 85,
                    "source": "   *       { foo: { bar: { baz: 123 }}}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "       ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{ foo: { bar: { baz: 123 }}}",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 86,
                    "source": "   *     And assume `baz` should be a string instead of a number.  Then",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "And assume `baz` should be a string instead of a number.  Then",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 87,
                    "source": "   *     invalidValue will be 123, and invalidPropertyNameComponents will be",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "invalidValue will be 123, and invalidPropertyNameComponents will be",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 88,
                    "source": "   *     [\"foo\", \"bar\", \"baz\"], indicating that the erroneous property in the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "[\"foo\", \"bar\", \"baz\"], indicating that the erroneous property in the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 89,
                    "source": "   *     passed-in object is `foo.bar.baz`.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "passed-in object is `foo.bar.baz`.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 90,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 91,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Validates a value against a schema.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Validates a value against a schema.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {*} value",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "value",
                  "postName": "",
                  "type": "{*}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *   The value to validate.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The value to validate.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {object} schema",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "schema",
                  "postName": "",
                  "type": "{object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *   The schema to validate against.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The schema to validate against.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @param {boolean} allowArrayNonMatchingItems",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "allowArrayNonMatchingItems",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *   When true:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "When true:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *     Invalid items in arrays will be ignored, and they won't be included in",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Invalid items in arrays will be ignored, and they won't be included in",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *     result.parsedValue.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "result.parsedValue.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *   When false:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "When false:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *     Invalid items in arrays will cause validation to fail.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Invalid items in arrays will cause validation to fail.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   * @param {boolean} allowExplicitUndefinedProperties",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "allowExplicitUndefinedProperties",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   *   When true:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "When true:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   *     `someProperty: undefined` will be allowed for non-required properties.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "`someProperty: undefined` will be allowed for non-required properties.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   *   When false:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "When false:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   *     `someProperty: undefined` will cause validation to fail even for",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "`someProperty: undefined` will cause validation to fail even for",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   *     properties that are not required.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "properties that are not required.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   * @param {boolean} allowNullAsUndefinedProperties",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "allowNullAsUndefinedProperties",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "   *   When true:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "When true:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 22,
                "source": "   *     `someProperty: null` will be allowed for non-required properties whose",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "`someProperty: null` will be allowed for non-required properties whose",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 23,
                "source": "   *     expected types are non-null.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "expected types are non-null.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 24,
                "source": "   *   When false:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "When false:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 25,
                "source": "   *     `someProperty: null` will cause validation to fail for non-required",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "`someProperty: null` will cause validation to fail for non-required",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 26,
                "source": "   *     properties, except for properties whose expected types are null.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "properties, except for properties whose expected types are null.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 27,
                "source": "   * @param {boolean} allowAdditionalProperties",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "allowAdditionalProperties",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 28,
                "source": "   *   When true:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "When true:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 29,
                "source": "   *     Properties that are not defined in the schema will be ignored, and they",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Properties that are not defined in the schema will be ignored, and they",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 30,
                "source": "   *     won't be included in result.parsedValue.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "won't be included in result.parsedValue.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 31,
                "source": "   *   When false:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "When false:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 32,
                "source": "   *     Properties that are not defined in the schema will cause validation to",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Properties that are not defined in the schema will cause validation to",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 33,
                "source": "   *     fail.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "fail.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 34,
                "source": "   *   Note: Schema objects of type \"object\" can also contain a boolean property",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Note: Schema objects of type \"object\" can also contain a boolean property",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 35,
                "source": "   *     called `additionalProperties` that functions as a local version of this",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "called `additionalProperties` that functions as a local version of this",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 36,
                "source": "   *     param. When true, extra properties will be allowed in the corresponding",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "param. When true, extra properties will be allowed in the corresponding",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 37,
                "source": "   *     input objects regardless of `allowAdditionalProperties`, and as with",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "input objects regardless of `allowAdditionalProperties`, and as with",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 38,
                "source": "   *     `allowAdditionalProperties`, extra properties won't be included in",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "`allowAdditionalProperties`, extra properties won't be included in",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 39,
                "source": "   *     `result.parsedValue`. (The inverse is not true: If a schema object",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "`result.parsedValue`. (The inverse is not true: If a schema object",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 40,
                "source": "   *     defines `additionalProperties: false` but `allowAdditionalProperties`",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "defines `additionalProperties: false` but `allowAdditionalProperties`",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 41,
                "source": "   *     is true, extra properties will be allowed.)",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "is true, extra properties will be allowed.)",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 42,
                "source": "   * @return {object}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@return",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{object}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 43,
                "source": "   *   The result of the validation, an object that looks like this:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The result of the validation, an object that looks like this:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 44,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 45,
                "source": "   *   {",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 46,
                "source": "   *     valid,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "valid,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 47,
                "source": "   *     parsedValue,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "parsedValue,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 48,
                "source": "   *     error: {",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "error: {",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 49,
                "source": "   *       message,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "       ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "message,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 50,
                "source": "   *       rootValue,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "       ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "rootValue,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 51,
                "source": "   *       rootSchema,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "       ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "rootSchema,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 52,
                "source": "   *       invalidValue,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "       ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "invalidValue,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 53,
                "source": "   *       invalidPropertyNameComponents,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "       ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "invalidPropertyNameComponents,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 54,
                "source": "   *     }",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "}",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 55,
                "source": "   *   }",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "}",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 56,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 57,
                "source": "   *   {boolean} valid",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{boolean} valid",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 58,
                "source": "   *     True if validation is successful, false if not.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "True if validation is successful, false if not.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 59,
                "source": "   *   {*} parsedValue",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{*} parsedValue",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 60,
                "source": "   *     If validation is successful, this is the validated value.  It can",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If validation is successful, this is the validated value.  It can",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 61,
                "source": "   *     differ from the passed-in value in the following ways:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "differ from the passed-in value in the following ways:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 62,
                "source": "   *       * If a type in the schema is \"URL\" or \"URLorEmpty\", the passed-in",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "       ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "* If a type in the schema is \"URL\" or \"URLorEmpty\", the passed-in",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 63,
                "source": "   *         value can use a string instead and it will be converted into a",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "value can use a string instead and it will be converted into a",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 64,
                "source": "   *         `URL` object in parsedValue.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "`URL` object in parsedValue.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 65,
                "source": "   *       * Some of the `allow*` parameters control the properties that appear.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "       ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "* Some of the `allow*` parameters control the properties that appear.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 66,
                "source": "   *         See above.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "         ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "See above.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 67,
                "source": "   *   {Error} error",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{Error} error",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 68,
                "source": "   *     If validation fails, `error` will be present.  It contains a number of",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If validation fails, `error` will be present.  It contains a number of",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 69,
                "source": "   *     properties useful for understanding the validation failure.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "properties useful for understanding the validation failure.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 70,
                "source": "   *   {string} error.message",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{string} error.message",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 71,
                "source": "   *     The validation failure message.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The validation failure message.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 72,
                "source": "   *   {*} error.rootValue",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{*} error.rootValue",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 73,
                "source": "   *     The passed-in value.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The passed-in value.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 74,
                "source": "   *   {object} error.rootSchema",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{object} error.rootSchema",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 75,
                "source": "   *     The passed-in schema.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The passed-in schema.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 76,
                "source": "   *   {*} invalidValue",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{*} invalidValue",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 77,
                "source": "   *     The value that caused validation to fail.  If the passed-in value is a",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The value that caused validation to fail.  If the passed-in value is a",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 78,
                "source": "   *     scalar type, this will be the value itself.  If the value is an object",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "scalar type, this will be the value itself.  If the value is an object",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 79,
                "source": "   *     or array, it will be the specific nested value in the object or array",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "or array, it will be the specific nested value in the object or array",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 80,
                "source": "   *     that caused validation to fail.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "that caused validation to fail.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 81,
                "source": "   *   {array} invalidPropertyNameComponents",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{array} invalidPropertyNameComponents",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 82,
                "source": "   *     If the passed-in value is an object or array, this will contain the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If the passed-in value is an object or array, this will contain the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 83,
                "source": "   *     names of the object properties or array indexes where invalidValue can",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "names of the object properties or array indexes where invalidValue can",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 84,
                "source": "   *     be found.  For example, assume the passed-in value is:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "be found.  For example, assume the passed-in value is:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 85,
                "source": "   *       { foo: { bar: { baz: 123 }}}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "       ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{ foo: { bar: { baz: 123 }}}",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 86,
                "source": "   *     And assume `baz` should be a string instead of a number.  Then",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "And assume `baz` should be a string instead of a number.  Then",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 87,
                "source": "   *     invalidValue will be 123, and invalidPropertyNameComponents will be",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "invalidValue will be 123, and invalidPropertyNameComponents will be",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 88,
                "source": "   *     [\"foo\", \"bar\", \"baz\"], indicating that the erroneous property in the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "[\"foo\", \"bar\", \"baz\"], indicating that the erroneous property in the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 89,
                "source": "   *     passed-in object is `foo.bar.baz`.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "passed-in object is `foo.bar.baz`.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 90,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 91,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "constructor",
        "line": 158,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 158
          }
        ],
        "comments": [
          {
            "description": "Constructor.",
            "tags": [
              {
                "tag": "param",
                "name": "allowArrayNonMatchingItems",
                "type": "boolean",
                "optional": false,
                "description": "See the static `validate` method above.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {boolean} allowArrayNonMatchingItems",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "allowArrayNonMatchingItems",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *   See the static `validate` method above.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "See the static `validate` method above.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "allowExplicitUndefinedProperties",
                "type": "boolean",
                "optional": false,
                "description": "See the static `validate` method above.",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {boolean} allowExplicitUndefinedProperties",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "allowExplicitUndefinedProperties",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *   See the static `validate` method above.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "See the static `validate` method above.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "allowNullAsUndefinedProperties",
                "type": "boolean",
                "optional": false,
                "description": "See the static `validate` method above.",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @param {boolean} allowNullAsUndefinedProperties",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "allowNullAsUndefinedProperties",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *   See the static `validate` method above.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "See the static `validate` method above.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "allowAdditionalProperties",
                "type": "boolean",
                "optional": false,
                "description": "See the static `validate` method above.",
                "problems": [],
                "source": [
                  {
                    "number": 10,
                    "source": "   * @param {boolean} allowAdditionalProperties",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "allowAdditionalProperties",
                      "postName": "",
                      "type": "{boolean}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *   See the static `validate` method above.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "See the static `validate` method above.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Constructor.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Constructor.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {boolean} allowArrayNonMatchingItems",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "allowArrayNonMatchingItems",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *   See the static `validate` method above.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "See the static `validate` method above.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {boolean} allowExplicitUndefinedProperties",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "allowExplicitUndefinedProperties",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *   See the static `validate` method above.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "See the static `validate` method above.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @param {boolean} allowNullAsUndefinedProperties",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "allowNullAsUndefinedProperties",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *   See the static `validate` method above.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "See the static `validate` method above.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * @param {boolean} allowAdditionalProperties",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "allowAdditionalProperties",
                  "postName": "",
                  "type": "{boolean}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *   See the static `validate` method above.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "See the static `validate` method above.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "validate",
        "line": 180,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 180
          },
          {
            "type": "params",
            "id": "schema",
            "line": 180
          }
        ],
        "comments": [
          {
            "description": "Validates a value against a schema.",
            "tags": [
              {
                "tag": "param",
                "name": "value",
                "type": "*",
                "optional": false,
                "description": "The value to validate.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {*} value",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "value",
                      "postName": "",
                      "type": "{*}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *   The value to validate.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The value to validate.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "schema",
                "type": "object",
                "optional": false,
                "description": "The schema to validate against.",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {object} schema",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "schema",
                      "postName": "",
                      "type": "{object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *   The schema to validate against.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The schema to validate against.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "return",
                "name": "",
                "type": "object",
                "optional": false,
                "description": "The result object.  See the static `validate` method above.",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @return {object}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@return",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{object}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *   The result object.  See the static `validate` method above.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The result object.  See the static `validate` method above.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Validates a value against a schema.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Validates a value against a schema.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {*} value",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "value",
                  "postName": "",
                  "type": "{*}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *   The value to validate.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The value to validate.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {object} schema",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "schema",
                  "postName": "",
                  "type": "{object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *   The schema to validate against.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The schema to validate against.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @return {object}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@return",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{object}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *   The result object.  See the static `validate` method above.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The result object.  See the static `validate` method above.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_validateRecursive",
        "line": 188,
        "params": [
          {
            "type": "params",
            "id": "param",
            "line": 188
          },
          {
            "type": "params",
            "id": "properties",
            "line": 188
          },
          {
            "type": "params",
            "id": "keyPath",
            "line": 188
          },
          {
            "type": "params",
            "id": "state",
            "line": 188
          }
        ],
        "comments": [
          {
            "description": "eslint-disable-next-line complexity",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " eslint-disable-next-line complexity",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "eslint-disable-next-line complexity",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_validateSimpleParam",
        "line": 457,
        "params": [
          {
            "type": "params",
            "id": "param",
            "line": 457
          },
          {
            "type": "params",
            "id": "type",
            "line": 457
          },
          {
            "type": "params",
            "id": "keyPath",
            "line": 457
          },
          {
            "type": "params",
            "id": "state",
            "line": 457
          }
        ],
        "kind": "method"
      }
    ],
    "properties": []
  }
]