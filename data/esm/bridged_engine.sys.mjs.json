[
  {
    "type": "class",
    "id": "LogAdapter",
    "line": 150,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 151,
        "params": [
          {
            "type": "params",
            "id": "log",
            "line": 151
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "maxLevel",
        "line": 155,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "trace",
        "line": 172,
        "params": [
          {
            "type": "params",
            "id": "message",
            "line": 172
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "debug",
        "line": 176,
        "params": [
          {
            "type": "params",
            "id": "message",
            "line": 176
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "warn",
        "line": 180,
        "params": [
          {
            "type": "params",
            "id": "message",
            "line": 180
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "error",
        "line": 184,
        "params": [
          {
            "type": "params",
            "id": "message",
            "line": 184
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "BridgeWrapperXPCOM",
    "line": 191,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 192,
        "params": [
          {
            "type": "params",
            "id": "component",
            "line": 192
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "storageVersion",
        "line": 197,
        "params": [],
        "comments": [
          {
            "description": "A few sync, non-callback based attributes.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " A few sync, non-callback based attributes.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A few sync, non-callback based attributes.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "allowSkippedRecord",
        "line": 201,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "logger",
        "line": 205,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "lastSync",
        "line": 211,
        "params": [],
        "comments": [
          {
            "description": "And the async functions we promisify.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " And the async functions we promisify.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "And the async functions we promisify.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "Note this is `lastSync` via uniffi but `getLastSync` via xpcom",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Note this is `lastSync` via uniffi but `getLastSync` via xpcom",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Note this is `lastSync` via uniffi but `getLastSync` via xpcom",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "setLastSync",
        "line": 215,
        "params": [
          {
            "type": "params",
            "id": "lastSyncMillis",
            "line": 215
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getSyncId",
        "line": 219,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "resetSyncId",
        "line": 223,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "ensureCurrentSyncId",
        "line": 227,
        "params": [
          {
            "type": "params",
            "id": "newSyncId",
            "line": 227
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "syncStarted",
        "line": 234,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "storeIncoming",
        "line": 238,
        "params": [
          {
            "type": "params",
            "id": "incomingEnvelopesAsJSON",
            "line": 238
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "apply",
        "line": 245,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "setUploaded",
        "line": 249,
        "params": [
          {
            "type": "params",
            "id": "newTimestampMillis",
            "line": 249
          },
          {
            "type": "params",
            "id": "uploadedIds",
            "line": 249
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "syncFinished",
        "line": 257,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "reset",
        "line": 261,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "wipe",
        "line": 265,
        "params": [],
        "kind": "method"
      }
    ]
  },
  {
    "type": "function-declaration",
    "id": "BridgedEngine",
    "line": 309,
    "params": [
      "name",
      "service"
    ]
  }
]