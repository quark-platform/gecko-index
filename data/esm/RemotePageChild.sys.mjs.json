[
  {
    "type": "class",
    "id": "RemotePageChild",
    "line": 21,
    "methods": [
      {
        "type": "method",
        "id": "actorCreated",
        "line": 22,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "exportBaseFunctions",
        "line": 27,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "exportFunctions",
        "line": 55,
        "params": [
          {
            "type": "params",
            "id": "functions",
            "line": 55
          }
        ],
        "comments": [
          {
            "description": "Exports a list of functions to be accessible by the privileged page. Subclasses may call this function to add functions that are specific to a page. When the page calls a function, a function with the same name is called within the child actor. Only functions that appear in the whitelist in the RemotePageAccessManager for that page will be exported.",
            "tags": [
              {
                "tag": "param",
                "name": "array",
                "type": "",
                "optional": false,
                "description": "of function names.",
                "problems": [],
                "source": [
                  {
                    "number": 10,
                    "source": "   * @param array of function names.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "array",
                      "postName": " ",
                      "type": "",
                      "postType": "",
                      "description": "of function names.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Exports a list of functions to be accessible by the privileged page.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Exports a list of functions to be accessible by the privileged page.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * Subclasses may call this function to add functions that are specific",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Subclasses may call this function to add functions that are specific",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * to a page. When the page calls a function, a function with the same",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "to a page. When the page calls a function, a function with the same",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * name is called within the child actor.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "name is called within the child actor.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * Only functions that appear in the whitelist in the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Only functions that appear in the whitelist in the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * RemotePageAccessManager for that page will be exported.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "RemotePageAccessManager for that page will be exported.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   * @param array of function names.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "array",
                  "postName": " ",
                  "type": "",
                  "postType": "",
                  "description": "of function names.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "handleEvent",
        "line": 87,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "receiveMessage",
        "line": 92,
        "params": [
          {
            "type": "params",
            "id": "messagedata",
            "line": 92
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "wrapPromise",
        "line": 113,
        "params": [
          {
            "type": "params",
            "id": "promise",
            "line": 113
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "checkAllowAccess",
        "line": 128,
        "params": [
          {
            "type": "params",
            "id": "aFeature",
            "line": 128
          },
          {
            "type": "params",
            "id": "aValue",
            "line": 128
          }
        ],
        "comments": [
          {
            "description": "Returns true if a feature cannot be accessed by the current page. Throws an exception if the feature may not be accessed.",
            "tags": [
              {
                "tag": "param",
                "name": "aDocument",
                "type": "",
                "optional": false,
                "description": "child process document to call from",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param aDocument child process document to call from",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "aDocument",
                      "postName": " ",
                      "type": "",
                      "postType": "",
                      "description": "child process document to call from",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "aFeature",
                "type": "",
                "optional": false,
                "description": "to feature to check access to",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param aFeature to feature to check access to",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "aFeature",
                      "postName": " ",
                      "type": "",
                      "postType": "",
                      "description": "to feature to check access to",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "aValue",
                "type": "",
                "optional": false,
                "description": "value that must be included with that feature's whitelist",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param aValue value that must be included with that feature's whitelist",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "aValue",
                      "postName": " ",
                      "type": "",
                      "postType": "",
                      "description": "value that must be included with that feature's whitelist",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "true",
                "type": "",
                "optional": false,
                "description": "if access is allowed or throws an exception otherwise",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @returns true if access is allowed or throws an exception otherwise",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "true",
                      "postName": " ",
                      "type": "",
                      "postType": "",
                      "description": "if access is allowed or throws an exception otherwise",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Returns true if a feature cannot be accessed by the current page.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Returns true if a feature cannot be accessed by the current page.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * Throws an exception if the feature may not be accessed.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Throws an exception if the feature may not be accessed.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param aDocument child process document to call from",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "aDocument",
                  "postName": " ",
                  "type": "",
                  "postType": "",
                  "description": "child process document to call from",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param aFeature to feature to check access to",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "aFeature",
                  "postName": " ",
                  "type": "",
                  "postType": "",
                  "description": "to feature to check access to",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param aValue value that must be included with that feature's whitelist",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "aValue",
                  "postName": " ",
                  "type": "",
                  "postType": "",
                  "description": "value that must be included with that feature's whitelist",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @returns true if access is allowed or throws an exception otherwise",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "true",
                  "postName": " ",
                  "type": "",
                  "postType": "",
                  "description": "if access is allowed or throws an exception otherwise",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "addPage",
        "line": 139,
        "params": [
          {
            "type": "params",
            "id": "aUrl",
            "line": 139
          },
          {
            "type": "params",
            "id": "aFunctionMap",
            "line": 139
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMSendAsyncMessage",
        "line": 145,
        "params": [
          {
            "type": "params",
            "id": "aName",
            "line": 145
          }
        ],
        "comments": [
          {
            "description": "Implementation of functions that are exported into the page.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Implementation of functions that are exported into the page.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Implementation of functions that are exported into the page.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMSendQuery",
        "line": 149,
        "params": [
          {
            "type": "params",
            "id": "aName",
            "line": 149
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMAddMessageListener",
        "line": 167,
        "params": [
          {
            "type": "params",
            "id": "aName",
            "line": 167
          },
          {
            "type": "params",
            "id": "aCallback",
            "line": 167
          }
        ],
        "comments": [
          {
            "description": "Adds a listener for messages. Many callbacks can be registered for the same message if necessary. An attempt to register the same callback for the same message twice will be ignored. When called the callback is passed an object with these properties: name:   The message name data:   Any data sent with the message",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Adds a listener for messages. Many callbacks can be registered for the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Adds a listener for messages. Many callbacks can be registered for the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * same message if necessary. An attempt to register the same callback for the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "same message if necessary. An attempt to register the same callback for the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * same message twice will be ignored. When called the callback is passed an",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "same message twice will be ignored. When called the callback is passed an",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * object with these properties:",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "object with these properties:",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *   name:   The message name",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "name:   The message name",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *   data:   Any data sent with the message",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "data:   Any data sent with the message",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMRemoveMessageListener",
        "line": 178,
        "params": [
          {
            "type": "params",
            "id": "aName",
            "line": 178
          },
          {
            "type": "params",
            "id": "aCallback",
            "line": 178
          }
        ],
        "comments": [
          {
            "description": "Removes a listener for messages.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Removes a listener for messages.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Removes a listener for messages.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMGetIntPref",
        "line": 186,
        "params": [
          {
            "type": "params",
            "id": "aPref",
            "line": 186
          },
          {
            "type": "params",
            "id": "defaultValue",
            "line": 186
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMGetStringPref",
        "line": 195,
        "params": [
          {
            "type": "params",
            "id": "aPref",
            "line": 195
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMGetBoolPref",
        "line": 199,
        "params": [
          {
            "type": "params",
            "id": "aPref",
            "line": 199
          },
          {
            "type": "params",
            "id": "defaultValue",
            "line": 199
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMSetPref",
        "line": 208,
        "params": [
          {
            "type": "params",
            "id": "aPref",
            "line": 208
          },
          {
            "type": "params",
            "id": "aVal",
            "line": 208
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMGetFormatURLPref",
        "line": 212,
        "params": [
          {
            "type": "params",
            "id": "aFormatURL",
            "line": 212
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "RPMIsWindowPrivate",
        "line": 216,
        "params": [],
        "kind": "method"
      }
    ]
  }
]