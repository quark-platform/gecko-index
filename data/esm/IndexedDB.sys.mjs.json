[
  {
    "type": "class",
    "id": "IndexedDB",
    "line": 278,
    "methods": [
      {
        "type": "method",
        "id": "open",
        "line": 299,
        "params": [
          {
            "type": "params",
            "id": "dbName",
            "line": 299
          },
          {
            "type": "params",
            "id": "options",
            "line": 299
          },
          {
            "type": "params",
            "id": "param2",
            "line": 299
          }
        ],
        "comments": [
          {
            "description": "Opens the database with the given name, and returns a Promise which resolves to an IndexedDB instance when the operation completes.",
            "tags": [
              {
                "tag": "param",
                "name": "dbName",
                "type": "string",
                "optional": false,
                "description": "The name of the database to open.",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {string} dbName",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "dbName",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *        The name of the database to open.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The name of the database to open.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options",
                "type": "object",
                "optional": false,
                "description": "The options with which to open the database.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {object} options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": "",
                      "type": "{object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *        The options with which to open the database.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The options with which to open the database.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.version",
                "type": "integer",
                "optional": false,
                "description": "The schema version with which the database needs to be opened. If the database does not exist, or its current schema version does not match, the `onupgradeneeded` function will be called.",
                "problems": [],
                "source": [
                  {
                    "number": 9,
                    "source": "   * @param {integer} options.version",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.version",
                      "postName": "",
                      "type": "{integer}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *        The schema version with which the database needs to be opened. If",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The schema version with which the database needs to be opened. If",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *        the database does not exist, or its current schema version does",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "the database does not exist, or its current schema version does",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *        not match, the `onupgradeneeded` function will be called.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "not match, the `onupgradeneeded` function will be called.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "onupgradeneeded",
                "type": "function",
                "optional": true,
                "description": "A function which will be called with an IndexedDB object as its first parameter when the database needs to be created, or its schema needs to be upgraded. If this function is not provided, the {@link #onupgradeneeded} method will be called instead.",
                "problems": [],
                "source": [
                  {
                    "number": 13,
                    "source": "   * @param {function} [onupgradeneeded]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[onupgradeneeded]",
                      "postName": "",
                      "type": "{function}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   *        A function which will be called with an IndexedDB object as its",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "A function which will be called with an IndexedDB object as its",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "   *        first parameter when the database needs to be created, or its",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "first parameter when the database needs to be created, or its",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   *        schema needs to be upgraded. If this function is not provided, the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "schema needs to be upgraded. If this function is not provided, the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "   *        {@link #onupgradeneeded} method will be called instead.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{@link #onupgradeneeded} method will be called instead.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "",
                "type": "Promise<IndexedDB>",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 19,
                    "source": "   * @returns {Promise<IndexedDB>}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{Promise<IndexedDB>}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 20,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 21,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Opens the database with the given name, and returns a Promise which",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Opens the database with the given name, and returns a Promise which",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * resolves to an IndexedDB instance when the operation completes.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "resolves to an IndexedDB instance when the operation completes.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {string} dbName",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "dbName",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *        The name of the database to open.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The name of the database to open.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {object} options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": "",
                  "type": "{object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *        The options with which to open the database.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The options with which to open the database.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * @param {integer} options.version",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.version",
                  "postName": "",
                  "type": "{integer}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *        The schema version with which the database needs to be opened. If",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The schema version with which the database needs to be opened. If",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *        the database does not exist, or its current schema version does",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "the database does not exist, or its current schema version does",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *        not match, the `onupgradeneeded` function will be called.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "not match, the `onupgradeneeded` function will be called.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   * @param {function} [onupgradeneeded]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[onupgradeneeded]",
                  "postName": "",
                  "type": "{function}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   *        A function which will be called with an IndexedDB object as its",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A function which will be called with an IndexedDB object as its",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   *        first parameter when the database needs to be created, or its",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "first parameter when the database needs to be created, or its",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   *        schema needs to be upgraded. If this function is not provided, the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "schema needs to be upgraded. If this function is not provided, the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   *        {@link #onupgradeneeded} method will be called instead.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{@link #onupgradeneeded} method will be called instead.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   * @returns {Promise<IndexedDB>}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{Promise<IndexedDB>}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "openForPrincipal",
        "line": 326,
        "params": [
          {
            "type": "params",
            "id": "principal",
            "line": 326
          },
          {
            "type": "params",
            "id": "dbName",
            "line": 326
          },
          {
            "type": "params",
            "id": "options",
            "line": 326
          },
          {
            "type": "params",
            "id": "param3",
            "line": 326
          }
        ],
        "comments": [
          {
            "description": "Opens the database for a given principal and with the given name, returns a Promise which resolves to an IndexedDB instance when the operation completes.",
            "tags": [
              {
                "tag": "param",
                "name": "principal",
                "type": "nsIPrincipal",
                "optional": false,
                "description": "The principal to open the database for.",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {nsIPrincipal} principal",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "principal",
                      "postName": "",
                      "type": "{nsIPrincipal}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *        The principal to open the database for.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The principal to open the database for.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "dbName",
                "type": "string",
                "optional": false,
                "description": "The name of the database to open.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {string} dbName",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "dbName",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *        The name of the database to open.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The name of the database to open.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options",
                "type": "object",
                "optional": false,
                "description": "The options with which to open the database.",
                "problems": [],
                "source": [
                  {
                    "number": 9,
                    "source": "   * @param {object} options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": "",
                      "type": "{object}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *        The options with which to open the database.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The options with which to open the database.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.version",
                "type": "integer",
                "optional": false,
                "description": "The schema version with which the database needs to be opened. If the database does not exist, or its current schema version does not match, the `onupgradeneeded` function will be called.",
                "problems": [],
                "source": [
                  {
                    "number": 11,
                    "source": "   * @param {integer} options.version",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.version",
                      "postName": "",
                      "type": "{integer}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *        The schema version with which the database needs to be opened. If",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The schema version with which the database needs to be opened. If",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *        the database does not exist, or its current schema version does",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "the database does not exist, or its current schema version does",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   *        not match, the `onupgradeneeded` function will be called.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "not match, the `onupgradeneeded` function will be called.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "onupgradeneeded",
                "type": "function",
                "optional": true,
                "description": "A function which will be called with an IndexedDB object as its first parameter when the database needs to be created, or its schema needs to be upgraded. If this function is not provided, the {@link #onupgradeneeded} method will be called instead.",
                "problems": [],
                "source": [
                  {
                    "number": 15,
                    "source": "   * @param {function} [onupgradeneeded]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[onupgradeneeded]",
                      "postName": "",
                      "type": "{function}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   *        A function which will be called with an IndexedDB object as its",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "A function which will be called with an IndexedDB object as its",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "   *        first parameter when the database needs to be created, or its",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "first parameter when the database needs to be created, or its",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   *        schema needs to be upgraded. If this function is not provided, the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "schema needs to be upgraded. If this function is not provided, the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 19,
                    "source": "   *        {@link #onupgradeneeded} method will be called instead.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "{@link #onupgradeneeded} method will be called instead.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 20,
                    "source": "   *",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "",
                "type": "Promise<IndexedDB>",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 21,
                    "source": "   * @returns {Promise<IndexedDB>}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{Promise<IndexedDB>}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 22,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 23,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Opens the database for a given principal and with the given name, returns",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Opens the database for a given principal and with the given name, returns",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * a Promise which resolves to an IndexedDB instance when the operation completes.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "a Promise which resolves to an IndexedDB instance when the operation completes.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {nsIPrincipal} principal",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "principal",
                  "postName": "",
                  "type": "{nsIPrincipal}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *        The principal to open the database for.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The principal to open the database for.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {string} dbName",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "dbName",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *        The name of the database to open.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The name of the database to open.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * @param {object} options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": "",
                  "type": "{object}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *        The options with which to open the database.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The options with which to open the database.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * @param {integer} options.version",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.version",
                  "postName": "",
                  "type": "{integer}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *        The schema version with which the database needs to be opened. If",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The schema version with which the database needs to be opened. If",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *        the database does not exist, or its current schema version does",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "the database does not exist, or its current schema version does",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   *        not match, the `onupgradeneeded` function will be called.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "not match, the `onupgradeneeded` function will be called.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   * @param {function} [onupgradeneeded]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[onupgradeneeded]",
                  "postName": "",
                  "type": "{function}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   *        A function which will be called with an IndexedDB object as its",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A function which will be called with an IndexedDB object as its",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   *        first parameter when the database needs to be created, or its",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "first parameter when the database needs to be created, or its",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   *        schema needs to be upgraded. If this function is not provided, the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "schema needs to be upgraded. If this function is not provided, the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   *        {@link #onupgradeneeded} method will be called instead.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "{@link #onupgradeneeded} method will be called instead.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "   * @returns {Promise<IndexedDB>}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{Promise<IndexedDB>}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 22,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 23,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_wrapOpenRequest",
        "line": 331,
        "params": [
          {
            "type": "params",
            "id": "request",
            "line": 331
          },
          {
            "type": "params",
            "id": "param1",
            "line": 331
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "constructor",
        "line": 344,
        "params": [
          {
            "type": "params",
            "id": "db",
            "line": 344
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "onupgradeneeded",
        "line": 348,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "transaction",
        "line": 364,
        "params": [
          {
            "type": "params",
            "id": "storeNames",
            "line": 364
          },
          {
            "type": "params",
            "id": "mode",
            "line": 364
          },
          {
            "type": "params",
            "id": "param2",
            "line": 364
          }
        ],
        "comments": [
          {
            "description": "Opens a transaction for the given object stores.",
            "tags": [
              {
                "tag": "param",
                "name": "storeNames",
                "type": "Array<string>",
                "optional": false,
                "description": "The names of the object stores for which to open a transaction.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {Array<string>} storeNames",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "storeNames",
                      "postName": "",
                      "type": "{Array<string>}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *        The names of the object stores for which to open a transaction.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The names of the object stores for which to open a transaction.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "mode",
                "type": "string",
                "optional": true,
                "description": "The mode in which to open the transaction.",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {string} [mode = \"readonly\"]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[mode = \"readonly\"]",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *        The mode in which to open the transaction.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The mode in which to open the transaction.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ],
                "default": "\"readonly\""
              },
              {
                "tag": "param",
                "name": "callback",
                "type": "function",
                "optional": true,
                "description": "An optional callback function. If provided, the function will be called with the Transaction, and a Promise will be returned, which will resolve to the callback's return value when the transaction completes.",
                "problems": [],
                "source": [
                  {
                    "number": 8,
                    "source": "   * @param {function} [callback]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[callback]",
                      "postName": "",
                      "type": "{function}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *        An optional callback function. If provided, the function will be",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "An optional callback function. If provided, the function will be",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *        called with the Transaction, and a Promise will be returned, which",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "called with the Transaction, and a Promise will be returned, which",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *        will resolve to the callback's return value when the transaction",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "will resolve to the callback's return value when the transaction",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *        completes.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "completes.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "",
                "type": "Transaction|Promise",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 13,
                    "source": "   * @returns {Transaction|Promise}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{Transaction|Promise}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Opens a transaction for the given object stores.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Opens a transaction for the given object stores.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {Array<string>} storeNames",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "storeNames",
                  "postName": "",
                  "type": "{Array<string>}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *        The names of the object stores for which to open a transaction.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The names of the object stores for which to open a transaction.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {string} [mode = \"readonly\"]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[mode = \"readonly\"]",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *        The mode in which to open the transaction.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The mode in which to open the transaction.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   * @param {function} [callback]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[callback]",
                  "postName": "",
                  "type": "{function}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *        An optional callback function. If provided, the function will be",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An optional callback function. If provided, the function will be",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *        called with the Transaction, and a Promise will be returned, which",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "called with the Transaction, and a Promise will be returned, which",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *        will resolve to the callback's return value when the transaction",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "will resolve to the callback's return value when the transaction",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *        completes.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "completes.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   * @returns {Transaction|Promise}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{Transaction|Promise}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "objectStore",
        "line": 392,
        "params": [
          {
            "type": "params",
            "id": "storeName",
            "line": 392
          },
          {
            "type": "params",
            "id": "mode",
            "line": 392
          },
          {
            "type": "params",
            "id": "param2",
            "line": 392
          }
        ],
        "comments": [
          {
            "description": "Opens a transaction for a single object store, and returns that object store.",
            "tags": [
              {
                "tag": "param",
                "name": "storeName",
                "type": "string",
                "optional": false,
                "description": "The name of the object store to open.",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {string} storeName",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "storeName",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *        The name of the object store to open.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The name of the object store to open.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "mode",
                "type": "string",
                "optional": true,
                "description": "The mode in which to open the transaction.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {string} [mode = \"readonly\"]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[mode = \"readonly\"]",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *        The mode in which to open the transaction.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The mode in which to open the transaction.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ],
                "default": "\"readonly\""
              },
              {
                "tag": "param",
                "name": "callback",
                "type": "function",
                "optional": true,
                "description": "An optional callback function. If provided, the function will be called with the ObjectStore, and a Promise will be returned, which will resolve to the callback's return value when the transaction completes.",
                "problems": [],
                "source": [
                  {
                    "number": 9,
                    "source": "   * @param {function} [callback]",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "[callback]",
                      "postName": "",
                      "type": "{function}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *        An optional callback function. If provided, the function will be",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "An optional callback function. If provided, the function will be",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *        called with the ObjectStore, and a Promise will be returned, which",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "called with the ObjectStore, and a Promise will be returned, which",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *        will resolve to the callback's return value when the transaction",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "will resolve to the callback's return value when the transaction",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *        completes.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "        ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "completes.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "returns",
                "name": "",
                "type": "ObjectStore|Promise",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 14,
                    "source": "   * @returns {ObjectStore|Promise}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{ObjectStore|Promise}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Opens a transaction for a single object store, and returns that object",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Opens a transaction for a single object store, and returns that object",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * store.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "store.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {string} storeName",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "storeName",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *        The name of the object store to open.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The name of the object store to open.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {string} [mode = \"readonly\"]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[mode = \"readonly\"]",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *        The mode in which to open the transaction.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The mode in which to open the transaction.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   * @param {function} [callback]",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "[callback]",
                  "postName": "",
                  "type": "{function}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *        An optional callback function. If provided, the function will be",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An optional callback function. If provided, the function will be",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *        called with the ObjectStore, and a Promise will be returned, which",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "called with the ObjectStore, and a Promise will be returned, which",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *        will resolve to the callback's return value when the transaction",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "will resolve to the callback's return value when the transaction",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *        completes.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "        ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "completes.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   * @returns {ObjectStore|Promise}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{ObjectStore|Promise}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "createObjectStore",
        "line": 406,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 406
          }
        ],
        "kind": "method"
      }
    ],
    "properties": []
  }
]