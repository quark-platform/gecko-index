[
  {
    "type": "variable-declaration",
    "id": "UnitTestObjs",
    "line": 9,
    "typeEstimation": {
      "type": "object-estimation",
      "keys": []
    }
  },
  {
    "type": "class",
    "id": "FfiConverterF64",
    "line": 245,
    "methods": [
      {
        "type": "method",
        "id": "computeSize",
        "line": 246,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lift",
        "line": 249,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 249
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 252,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 252
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 255,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 255
          },
          {
            "type": "params",
            "id": "value",
            "line": 255
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 258,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 258
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterString",
    "line": 264,
    "methods": [
      {
        "type": "method",
        "id": "checkType",
        "line": 265,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 265
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lift",
        "line": 272,
        "params": [
          {
            "type": "params",
            "id": "buf",
            "line": 272
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 277,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 277
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 282,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 282
          },
          {
            "type": "params",
            "id": "value",
            "line": 282
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 286,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 286
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 290,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 290
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "Sprite",
    "line": 296,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 299,
        "params": [
          {
            "type": "params",
            "id": "opts",
            "line": 299
          }
        ],
        "comments": [
          {
            "description": "Use `init` to instantiate this class.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Use `init` to instantiate this class.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Use `init` to instantiate this class.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "DO NOT USE THIS CONSTRUCTOR DIRECTLY",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " DO NOT USE THIS CONSTRUCTOR DIRECTLY",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "DO NOT USE THIS CONSTRUCTOR DIRECTLY",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "init",
        "line": 315,
        "params": [
          {
            "type": "params",
            "id": "initialPosition",
            "line": 315
          }
        ],
        "comments": [
          {
            "description": "An async constructor for Sprite.",
            "tags": [
              {
                "tag": "returns",
                "name": ":",
                "type": "Promise<Sprite>",
                "optional": false,
                "description": "A promise that resolves to a newly constructed Sprite",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "     * @returns {Promise<Sprite>}: A promise that resolves",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": ":",
                      "postName": " ",
                      "type": "{Promise<Sprite>}",
                      "postType": "",
                      "description": "A promise that resolves",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "     *      to a newly constructed Sprite",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "*",
                      "postDelimiter": "      ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "to a newly constructed Sprite",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "     ",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "     * An async constructor for Sprite.",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An async constructor for Sprite.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "     * ",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "     * @returns {Promise<Sprite>}: A promise that resolves",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": ":",
                  "postName": " ",
                  "type": "{Promise<Sprite>}",
                  "postType": "",
                  "description": "A promise that resolves",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "     *      to a newly constructed Sprite",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": "      ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "to a newly constructed Sprite",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "     ",
                "tokens": {
                  "start": "     ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "newRelativeTo",
        "line": 343,
        "params": [
          {
            "type": "params",
            "id": "reference",
            "line": 343
          },
          {
            "type": "params",
            "id": "direction",
            "line": 343
          }
        ],
        "comments": [
          {
            "description": "An async constructor for Sprite.",
            "tags": [
              {
                "tag": "returns",
                "name": ":",
                "type": "Promise<Sprite>",
                "optional": false,
                "description": "A promise that resolves to a newly constructed Sprite",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "     * @returns {Promise<Sprite>}: A promise that resolves",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": ":",
                      "postName": " ",
                      "type": "{Promise<Sprite>}",
                      "postType": "",
                      "description": "A promise that resolves",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "     *      to a newly constructed Sprite",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "*",
                      "postDelimiter": "      ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "to a newly constructed Sprite",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "     ",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "     * An async constructor for Sprite.",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An async constructor for Sprite.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "     * ",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "     * @returns {Promise<Sprite>}: A promise that resolves",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": ":",
                  "postName": " ",
                  "type": "{Promise<Sprite>}",
                  "postType": "",
                  "description": "A promise that resolves",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "     *      to a newly constructed Sprite",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": "      ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "to a newly constructed Sprite",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "     ",
                "tokens": {
                  "start": "     ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getPosition",
        "line": 375,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "moveTo",
        "line": 391,
        "params": [
          {
            "type": "params",
            "id": "position",
            "line": 391
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "moveBy",
        "line": 416,
        "params": [
          {
            "type": "params",
            "id": "direction",
            "line": 416
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterTypeSprite",
    "line": 444,
    "methods": [
      {
        "type": "method",
        "id": "lift",
        "line": 445,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 445
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 451,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 451
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 455,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 455
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 459,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 459
          },
          {
            "type": "params",
            "id": "value",
            "line": 459
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 463,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 463
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "Point",
    "line": 468,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 469,
        "params": [
          {
            "type": "params",
            "id": "x",
            "line": 469
          },
          {
            "type": "params",
            "id": "y",
            "line": 469
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "equals",
        "line": 489,
        "params": [
          {
            "type": "params",
            "id": "other",
            "line": 489
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterTypePoint",
    "line": 498,
    "methods": [
      {
        "type": "method",
        "id": "read",
        "line": 499,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 499
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 505,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 505
          },
          {
            "type": "params",
            "id": "value",
            "line": 505
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 510,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 510
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "checkType",
        "line": 517,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 517
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "Vector",
    "line": 538,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 539,
        "params": [
          {
            "type": "params",
            "id": "dx",
            "line": 539
          },
          {
            "type": "params",
            "id": "dy",
            "line": 539
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "equals",
        "line": 559,
        "params": [
          {
            "type": "params",
            "id": "other",
            "line": 559
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterTypeVector",
    "line": 568,
    "methods": [
      {
        "type": "method",
        "id": "read",
        "line": 569,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 569
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 575,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 575
          },
          {
            "type": "params",
            "id": "value",
            "line": 575
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 580,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 580
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "checkType",
        "line": 587,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 587
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterOptionalTypePoint",
    "line": 609,
    "methods": [
      {
        "type": "method",
        "id": "checkType",
        "line": 610,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 610
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 616,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 616
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 628,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 628
          },
          {
            "type": "params",
            "id": "value",
            "line": 628
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 637,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 637
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "function-declaration",
    "id": "translate",
    "line": 649,
    "params": [
      "position",
      "direction"
    ]
  }
]