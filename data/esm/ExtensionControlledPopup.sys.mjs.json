[
  {
    "type": "class",
    "id": "ExtensionControlledPopup",
    "line": 47,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 103,
        "params": [
          {
            "type": "params",
            "id": "opts",
            "line": 103
          }
        ],
        "comments": [
          {
            "description": "Provide necessary options for the popup.",
            "tags": [
              {
                "tag": "param",
                "name": "opts",
                "type": "object",
                "optional": false,
                "description": "Options for configuring popup.",
                "problems": [],
                "source": [
                  {
                    "number": 3,
                    "source": "   * @param {object} opts Options for configuring popup.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "opts",
                      "postName": " ",
                      "type": "{object}",
                      "postType": " ",
                      "description": "Options for configuring popup.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "opts.confirmedType",
                "type": "string",
                "optional": false,
                "description": "The type to use for storing a user's confirmation in ExtensionSettingsStore.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {string} opts.confirmedType",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "opts.confirmedType",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *                 The type to use for storing a user's confirmation in",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The type to use for storing a user's confirmation in",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *                 ExtensionSettingsStore.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "ExtensionSettingsStore.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "opts.observerTopic",
                "type": "string",
                "optional": false,
                "description": "An observer topic to trigger the popup on with Services.obs. If the doorhanger should appear on a specific window include it as the subject in the observer event.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {string} opts.observerTopic",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "opts.observerTopic",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *                 An observer topic to trigger the popup on with Services.obs. If the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "An observer topic to trigger the popup on with Services.obs. If the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *                 doorhanger should appear on a specific window include it as the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "doorhanger should appear on a specific window include it as the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *                 subject in the observer event.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "subject in the observer event.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "opts.anchorId",
                "type": "string",
                "optional": false,
                "description": "The id to anchor the popupnotification on. If it is not provided then it will anchor to a browser action or the app menu.",
                "problems": [],
                "source": [
                  {
                    "number": 11,
                    "source": "   * @param {string} opts.anchorId",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "opts.anchorId",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 12,
                    "source": "   *                 The id to anchor the popupnotification on. If it is not provided",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The id to anchor the popupnotification on. If it is not provided",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *                 then it will anchor to a browser action or the app menu.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "then it will anchor to a browser action or the app menu.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "opts.popupnotificationId",
                "type": "string",
                "optional": false,
                "description": "The id for the popupnotification element in the markup. This element should be defined in panelUI.inc.xhtml.",
                "problems": [],
                "source": [
                  {
                    "number": 14,
                    "source": "   * @param {string} opts.popupnotificationId",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "opts.popupnotificationId",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "   *                 The id for the popupnotification element in the markup. This",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The id for the popupnotification element in the markup. This",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 16,
                    "source": "   *                 element should be defined in panelUI.inc.xhtml.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "element should be defined in panelUI.inc.xhtml.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "opts.settingType",
                "type": "string",
                "optional": false,
                "description": "The setting type to check in ExtensionSettingsStore to retrieve the controlling extension.",
                "problems": [],
                "source": [
                  {
                    "number": 17,
                    "source": "   * @param {string} opts.settingType",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "opts.settingType",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   *                 The setting type to check in ExtensionSettingsStore to retrieve",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The setting type to check in ExtensionSettingsStore to retrieve",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 19,
                    "source": "   *                 the controlling extension.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "the controlling extension.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "opts.settingKey",
                "type": "string",
                "optional": false,
                "description": "The setting key to check in ExtensionSettingsStore to retrieve the controlling extension.",
                "problems": [],
                "source": [
                  {
                    "number": 20,
                    "source": "   * @param {string} opts.settingKey",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "opts.settingKey",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 21,
                    "source": "   *                 The setting key to check in ExtensionSettingsStore to retrieve",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The setting key to check in ExtensionSettingsStore to retrieve",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 22,
                    "source": "   *                 the controlling extension.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "the controlling extension.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "opts.descriptionId",
                "type": "string",
                "optional": false,
                "description": "The id of the element where the description should be displayed.",
                "problems": [],
                "source": [
                  {
                    "number": 23,
                    "source": "   * @param {string} opts.descriptionId",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "opts.descriptionId",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 24,
                    "source": "   *                 The id of the element where the description should be displayed.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The id of the element where the description should be displayed.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "opts.descriptionMessageId",
                "type": "string",
                "optional": false,
                "description": "The message id to be used for the description. The translated string will have the add-on's name and icon injected into it.",
                "problems": [],
                "source": [
                  {
                    "number": 25,
                    "source": "   * @param {string} opts.descriptionMessageId",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "opts.descriptionMessageId",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 26,
                    "source": "   *                 The message id to be used for the description. The translated",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The message id to be used for the description. The translated",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 27,
                    "source": "   *                 string will have the add-on's name and icon injected into it.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "string will have the add-on's name and icon injected into it.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "opts.getLocalizedDescription",
                "type": "string",
                "optional": false,
                "description": "A function to get the localized message string. This function is passed doc, message and addonDetails (the add-on's icon and name). If not provided, then the add-on's icon and name are added to the description.",
                "problems": [],
                "source": [
                  {
                    "number": 28,
                    "source": "   * @param {string} opts.getLocalizedDescription",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "opts.getLocalizedDescription",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 29,
                    "source": "   *                 A function to get the localized message string. This",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "A function to get the localized message string. This",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 30,
                    "source": "   *                 function is passed doc, message and addonDetails (the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "function is passed doc, message and addonDetails (the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 31,
                    "source": "   *                 add-on's icon and name). If not provided, then the add-on's",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "add-on's icon and name). If not provided, then the add-on's",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 32,
                    "source": "   *                 icon and name are added to the description.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "icon and name are added to the description.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "opts.learnMoreLink",
                "type": "string",
                "optional": false,
                "description": "The name of the SUMO page to link to, this is added to app.support.baseURL.",
                "problems": [],
                "source": [
                  {
                    "number": 33,
                    "source": "   * @param {string} opts.learnMoreLink",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "opts.learnMoreLink",
                      "postName": "",
                      "type": "{string}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 34,
                    "source": "   *                 The name of the SUMO page to link to, this is added to",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The name of the SUMO page to link to, this is added to",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 35,
                    "source": "   *                 app.support.baseURL.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "app.support.baseURL.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "optional",
                "type": "",
                "optional": false,
                "description": "{string} opts.preferencesLocation If included, the name of the preferences tab that will be opened by the secondary action. If not included, the secondary option will disable the addon.",
                "problems": [],
                "source": [
                  {
                    "number": 36,
                    "source": "   * @param optional {string} opts.preferencesLocation",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "optional",
                      "postName": " ",
                      "type": "",
                      "postType": "",
                      "description": "{string} opts.preferencesLocation",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 37,
                    "source": "   *                 If included, the name of the preferences tab that will be opened",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "If included, the name of the preferences tab that will be opened",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 38,
                    "source": "   *                 by the secondary action. If not included, the secondary option will",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "by the secondary action. If not included, the secondary option will",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 39,
                    "source": "   *                 disable the addon.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "disable the addon.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "optional",
                "type": "",
                "optional": false,
                "description": "{string} opts.preferencesEntrypoint The entrypoint to pass to preferences telemetry.",
                "problems": [],
                "source": [
                  {
                    "number": 40,
                    "source": "   * @param optional {string} opts.preferencesEntrypoint",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "optional",
                      "postName": " ",
                      "type": "",
                      "postType": "",
                      "description": "{string} opts.preferencesEntrypoint",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 41,
                    "source": "   *                 The entrypoint to pass to preferences telemetry.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                 ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The entrypoint to pass to preferences telemetry.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "opts.onObserverAdded",
                "type": "function",
                "optional": false,
                "description": "A callback that is triggered when an observer is registered to trigger the popup on the next observerTopic.",
                "problems": [],
                "source": [
                  {
                    "number": 42,
                    "source": "   * @param {function} opts.onObserverAdded",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "opts.onObserverAdded",
                      "postName": "",
                      "type": "{function}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 43,
                    "source": "   *                   A callback that is triggered when an observer is registered to",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "A callback that is triggered when an observer is registered to",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 44,
                    "source": "   *                   trigger the popup on the next observerTopic.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "trigger the popup on the next observerTopic.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "opts.onObserverRemoved",
                "type": "function",
                "optional": false,
                "description": "A callback that is triggered when the observer is removed, either because the popup is opening or it was explicitly cancelled by calling removeObserver.",
                "problems": [],
                "source": [
                  {
                    "number": 45,
                    "source": "   * @param {function} opts.onObserverRemoved",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "opts.onObserverRemoved",
                      "postName": "",
                      "type": "{function}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 46,
                    "source": "   *                   A callback that is triggered when the observer is removed,",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "A callback that is triggered when the observer is removed,",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 47,
                    "source": "   *                   either because the popup is opening or it was explicitly",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "either because the popup is opening or it was explicitly",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 48,
                    "source": "   *                   cancelled by calling removeObserver.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "cancelled by calling removeObserver.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "opts.beforeDisableAddon",
                "type": "function",
                "optional": false,
                "description": "A function that is called before disabling an extension when the user decides to disable the extension. If this function is async then the extension won't be disabled until it is fulfilled. This function gets two arguments, the ExtensionControlledPopup instance for the panel and the window that the popup appears on.",
                "problems": [],
                "source": [
                  {
                    "number": 49,
                    "source": "   * @param {function} opts.beforeDisableAddon",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "opts.beforeDisableAddon",
                      "postName": "",
                      "type": "{function}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 50,
                    "source": "   *                   A function that is called before disabling an extension when the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "A function that is called before disabling an extension when the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 51,
                    "source": "   *                   user decides to disable the extension. If this function is async",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "user decides to disable the extension. If this function is async",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 52,
                    "source": "   *                   then the extension won't be disabled until it is fulfilled.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "then the extension won't be disabled until it is fulfilled.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 53,
                    "source": "   *                   This function gets two arguments, the ExtensionControlledPopup",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "This function gets two arguments, the ExtensionControlledPopup",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 54,
                    "source": "   *                   instance for the panel and the window that the popup appears on.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "                   ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "instance for the panel and the window that the popup appears on.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 55,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 56,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Provide necessary options for the popup.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Provide necessary options for the popup.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * @param {object} opts Options for configuring popup.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "opts",
                  "postName": " ",
                  "type": "{object}",
                  "postType": " ",
                  "description": "Options for configuring popup.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {string} opts.confirmedType",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "opts.confirmedType",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *                 The type to use for storing a user's confirmation in",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The type to use for storing a user's confirmation in",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *                 ExtensionSettingsStore.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "ExtensionSettingsStore.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {string} opts.observerTopic",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "opts.observerTopic",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *                 An observer topic to trigger the popup on with Services.obs. If the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An observer topic to trigger the popup on with Services.obs. If the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *                 doorhanger should appear on a specific window include it as the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "doorhanger should appear on a specific window include it as the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *                 subject in the observer event.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "subject in the observer event.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   * @param {string} opts.anchorId",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "opts.anchorId",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   *                 The id to anchor the popupnotification on. If it is not provided",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The id to anchor the popupnotification on. If it is not provided",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *                 then it will anchor to a browser action or the app menu.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "then it will anchor to a browser action or the app menu.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   * @param {string} opts.popupnotificationId",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "opts.popupnotificationId",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   *                 The id for the popupnotification element in the markup. This",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The id for the popupnotification element in the markup. This",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   *                 element should be defined in panelUI.inc.xhtml.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "element should be defined in panelUI.inc.xhtml.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   * @param {string} opts.settingType",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "opts.settingType",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   *                 The setting type to check in ExtensionSettingsStore to retrieve",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The setting type to check in ExtensionSettingsStore to retrieve",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   *                 the controlling extension.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "the controlling extension.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   * @param {string} opts.settingKey",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "opts.settingKey",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "   *                 The setting key to check in ExtensionSettingsStore to retrieve",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The setting key to check in ExtensionSettingsStore to retrieve",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 22,
                "source": "   *                 the controlling extension.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "the controlling extension.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 23,
                "source": "   * @param {string} opts.descriptionId",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "opts.descriptionId",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 24,
                "source": "   *                 The id of the element where the description should be displayed.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The id of the element where the description should be displayed.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 25,
                "source": "   * @param {string} opts.descriptionMessageId",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "opts.descriptionMessageId",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 26,
                "source": "   *                 The message id to be used for the description. The translated",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The message id to be used for the description. The translated",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 27,
                "source": "   *                 string will have the add-on's name and icon injected into it.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "string will have the add-on's name and icon injected into it.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 28,
                "source": "   * @param {string} opts.getLocalizedDescription",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "opts.getLocalizedDescription",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 29,
                "source": "   *                 A function to get the localized message string. This",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A function to get the localized message string. This",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 30,
                "source": "   *                 function is passed doc, message and addonDetails (the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "function is passed doc, message and addonDetails (the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 31,
                "source": "   *                 add-on's icon and name). If not provided, then the add-on's",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "add-on's icon and name). If not provided, then the add-on's",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 32,
                "source": "   *                 icon and name are added to the description.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "icon and name are added to the description.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 33,
                "source": "   * @param {string} opts.learnMoreLink",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "opts.learnMoreLink",
                  "postName": "",
                  "type": "{string}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 34,
                "source": "   *                 The name of the SUMO page to link to, this is added to",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The name of the SUMO page to link to, this is added to",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 35,
                "source": "   *                 app.support.baseURL.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "app.support.baseURL.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 36,
                "source": "   * @param optional {string} opts.preferencesLocation",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "optional",
                  "postName": " ",
                  "type": "",
                  "postType": "",
                  "description": "{string} opts.preferencesLocation",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 37,
                "source": "   *                 If included, the name of the preferences tab that will be opened",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If included, the name of the preferences tab that will be opened",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 38,
                "source": "   *                 by the secondary action. If not included, the secondary option will",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "by the secondary action. If not included, the secondary option will",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 39,
                "source": "   *                 disable the addon.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "disable the addon.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 40,
                "source": "   * @param optional {string} opts.preferencesEntrypoint",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "optional",
                  "postName": " ",
                  "type": "",
                  "postType": "",
                  "description": "{string} opts.preferencesEntrypoint",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 41,
                "source": "   *                 The entrypoint to pass to preferences telemetry.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                 ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The entrypoint to pass to preferences telemetry.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 42,
                "source": "   * @param {function} opts.onObserverAdded",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "opts.onObserverAdded",
                  "postName": "",
                  "type": "{function}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 43,
                "source": "   *                   A callback that is triggered when an observer is registered to",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A callback that is triggered when an observer is registered to",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 44,
                "source": "   *                   trigger the popup on the next observerTopic.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "trigger the popup on the next observerTopic.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 45,
                "source": "   * @param {function} opts.onObserverRemoved",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "opts.onObserverRemoved",
                  "postName": "",
                  "type": "{function}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 46,
                "source": "   *                   A callback that is triggered when the observer is removed,",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A callback that is triggered when the observer is removed,",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 47,
                "source": "   *                   either because the popup is opening or it was explicitly",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "either because the popup is opening or it was explicitly",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 48,
                "source": "   *                   cancelled by calling removeObserver.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "cancelled by calling removeObserver.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 49,
                "source": "   * @param {function} opts.beforeDisableAddon",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "opts.beforeDisableAddon",
                  "postName": "",
                  "type": "{function}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 50,
                "source": "   *                   A function that is called before disabling an extension when the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A function that is called before disabling an extension when the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 51,
                "source": "   *                   user decides to disable the extension. If this function is async",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "user decides to disable the extension. If this function is async",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 52,
                "source": "   *                   then the extension won't be disabled until it is fulfilled.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "then the extension won't be disabled until it is fulfilled.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 53,
                "source": "   *                   This function gets two arguments, the ExtensionControlledPopup",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "This function gets two arguments, the ExtensionControlledPopup",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 54,
                "source": "   *                   instance for the panel and the window that the popup appears on.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "                   ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "instance for the panel and the window that the popup appears on.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 55,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 56,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "topWindow",
        "line": 122,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "userHasConfirmed",
        "line": 126,
        "params": [
          {
            "type": "params",
            "id": "id",
            "line": 126
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "setConfirmation",
        "line": 138,
        "params": [
          {
            "type": "params",
            "id": "id",
            "line": 138
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "clearConfirmation",
        "line": 149,
        "params": [
          {
            "type": "params",
            "id": "id",
            "line": 149
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "observe",
        "line": 158,
        "params": [
          {
            "type": "params",
            "id": "subject",
            "line": 158
          },
          {
            "type": "params",
            "id": "topic",
            "line": 158
          },
          {
            "type": "params",
            "id": "data",
            "line": 158
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "removeObserver",
        "line": 173,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "addObserver",
        "line": 183,
        "params": [
          {
            "type": "params",
            "id": "extensionId",
            "line": 183
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "open",
        "line": 197,
        "params": [
          {
            "type": "params",
            "id": "targetWindow",
            "line": 197
          },
          {
            "type": "params",
            "id": "extensionId",
            "line": 197
          }
        ],
        "comments": [
          {
            "description": "The extensionId will be looked up in ExtensionSettingsStore if it is not",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " The extensionId will be looked up in ExtensionSettingsStore if it is not",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The extensionId will be looked up in ExtensionSettingsStore if it is not",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "provided using this.settingType and this.settingKey.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " provided using this.settingType and this.settingKey.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "provided using this.settingType and this.settingKey.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "getAddonDetails",
        "line": 325,
        "params": [
          {
            "type": "params",
            "id": "doc",
            "line": 325
          },
          {
            "type": "params",
            "id": "addon",
            "line": 325
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "populateDescription",
        "line": 339,
        "params": [
          {
            "type": "params",
            "id": "doc",
            "line": 339
          },
          {
            "type": "params",
            "id": "addon",
            "line": 339
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_ensureWindowReady",
        "line": 361,
        "params": [
          {
            "type": "params",
            "id": "win",
            "line": 361
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "_getAndMaybeCreatePanel",
        "line": 412,
        "params": [
          {
            "type": "params",
            "id": "doc",
            "line": 412
          }
        ],
        "kind": "method"
      }
    ]
  }
]