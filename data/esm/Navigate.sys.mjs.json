[
  {
    "type": "variable-declaration",
    "id": "DEFAULT_UNLOAD_TIMEOUT",
    "line": 40,
    "typeEstimation": {
      "type": "number-estimation",
      "defaultValue": 200
    }
  },
  {
    "type": "function-declaration",
    "id": "getUnloadTimeoutMultiplier",
    "line": 46,
    "params": []
  },
  {
    "type": "function-declaration",
    "id": "waitForInitialNavigationCompleted",
    "line": 71,
    "params": [
      "webProgress",
      "options"
    ]
  },
  {
    "type": "class",
    "id": "ProgressListener",
    "line": 116,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 154,
        "params": [
          {
            "type": "params",
            "id": "webProgress",
            "line": 154
          },
          {
            "type": "params",
            "id": "param1",
            "line": 154
          }
        ],
        "comments": [
          {
            "description": "Create a new WebProgressListener instance.",
            "tags": [
              {
                "tag": "param",
                "name": "webProgress",
                "type": "WebProgress",
                "optional": false,
                "description": "The web progress to attach the listener to.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {WebProgress} webProgress",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "webProgress",
                      "postName": "",
                      "type": "{WebProgress}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *     The web progress to attach the listener to.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "The web progress to attach the listener to.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options",
                "type": "object=",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {object=} options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": "",
                      "type": "{object=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.expectNavigation",
                "type": "boolean=",
                "optional": false,
                "description": "Flag to indicate that a navigation is guaranteed to happen. When set to `true`, the ProgressListener will ignore options.unloadTimeout and will only resolve when the expected navigation happens. Defaults to `false`.",
                "problems": [],
                "source": [
                  {
                    "number": 7,
                    "source": "   * @param {boolean=} options.expectNavigation",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.expectNavigation",
                      "postName": "",
                      "type": "{boolean=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   *     Flag to indicate that a navigation is guaranteed to happen.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Flag to indicate that a navigation is guaranteed to happen.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "   *     When set to `true`, the ProgressListener will ignore options.unloadTimeout",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "When set to `true`, the ProgressListener will ignore options.unloadTimeout",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 10,
                    "source": "   *     and will only resolve when the expected navigation happens.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "and will only resolve when the expected navigation happens.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 11,
                    "source": "   *     Defaults to `false`.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Defaults to `false`.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.resolveWhenStarted",
                "type": "boolean=",
                "optional": false,
                "description": "Flag to indicate that the Promise has to be resolved when the page load has been started. Otherwise wait until the page has finished loading. Defaults to `false`.",
                "problems": [],
                "source": [
                  {
                    "number": 12,
                    "source": "   * @param {boolean=} options.resolveWhenStarted",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.resolveWhenStarted",
                      "postName": "",
                      "type": "{boolean=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 13,
                    "source": "   *     Flag to indicate that the Promise has to be resolved when the",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Flag to indicate that the Promise has to be resolved when the",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 14,
                    "source": "   *     page load has been started. Otherwise wait until the page has",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "page load has been started. Otherwise wait until the page has",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 15,
                    "source": "   *     finished loading. Defaults to `false`.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "finished loading. Defaults to `false`.",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.unloadTimeout",
                "type": "number=",
                "optional": false,
                "description": "Time to allow before the page gets unloaded. Defaults to 200ms on regular platforms. A multiplier will be applied on slower platforms (eg. debug, ccov...). Ignored if options.expectNavigation is set to `true`",
                "problems": [],
                "source": [
                  {
                    "number": 16,
                    "source": "   * @param {number=} options.unloadTimeout",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.unloadTimeout",
                      "postName": "",
                      "type": "{number=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 17,
                    "source": "   *     Time to allow before the page gets unloaded. Defaults to 200ms on",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Time to allow before the page gets unloaded. Defaults to 200ms on",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 18,
                    "source": "   *     regular platforms. A multiplier will be applied on slower platforms",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "regular platforms. A multiplier will be applied on slower platforms",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 19,
                    "source": "   *     (eg. debug, ccov...).",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "(eg. debug, ccov...).",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 20,
                    "source": "   *     Ignored if options.expectNavigation is set to `true`",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Ignored if options.expectNavigation is set to `true`",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.waitForExplicitStart",
                "type": "boolean=",
                "optional": false,
                "description": "Flag to indicate that the Promise can only resolve after receiving a STATE_START state change. In other words, if the webProgress is already navigating, the Promise will only resolve for the next navigation. Defaults to `false`.",
                "problems": [],
                "source": [
                  {
                    "number": 21,
                    "source": "   * @param {boolean=} options.waitForExplicitStart",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.waitForExplicitStart",
                      "postName": "",
                      "type": "{boolean=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 22,
                    "source": "   *     Flag to indicate that the Promise can only resolve after receiving a",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Flag to indicate that the Promise can only resolve after receiving a",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 23,
                    "source": "   *     STATE_START state change. In other words, if the webProgress is already",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "STATE_START state change. In other words, if the webProgress is already",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 24,
                    "source": "   *     navigating, the Promise will only resolve for the next navigation.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "navigating, the Promise will only resolve for the next navigation.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 25,
                    "source": "   *     Defaults to `false`.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "Defaults to `false`.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 26,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 27,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Create a new WebProgressListener instance.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Create a new WebProgressListener instance.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {WebProgress} webProgress",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "webProgress",
                  "postName": "",
                  "type": "{WebProgress}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *     The web progress to attach the listener to.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "The web progress to attach the listener to.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {object=} options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": "",
                  "type": "{object=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   * @param {boolean=} options.expectNavigation",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.expectNavigation",
                  "postName": "",
                  "type": "{boolean=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   *     Flag to indicate that a navigation is guaranteed to happen.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Flag to indicate that a navigation is guaranteed to happen.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "   *     When set to `true`, the ProgressListener will ignore options.unloadTimeout",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "When set to `true`, the ProgressListener will ignore options.unloadTimeout",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 10,
                "source": "   *     and will only resolve when the expected navigation happens.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "and will only resolve when the expected navigation happens.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 11,
                "source": "   *     Defaults to `false`.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Defaults to `false`.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 12,
                "source": "   * @param {boolean=} options.resolveWhenStarted",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.resolveWhenStarted",
                  "postName": "",
                  "type": "{boolean=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 13,
                "source": "   *     Flag to indicate that the Promise has to be resolved when the",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Flag to indicate that the Promise has to be resolved when the",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 14,
                "source": "   *     page load has been started. Otherwise wait until the page has",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "page load has been started. Otherwise wait until the page has",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 15,
                "source": "   *     finished loading. Defaults to `false`.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "finished loading. Defaults to `false`.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 16,
                "source": "   * @param {number=} options.unloadTimeout",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.unloadTimeout",
                  "postName": "",
                  "type": "{number=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 17,
                "source": "   *     Time to allow before the page gets unloaded. Defaults to 200ms on",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Time to allow before the page gets unloaded. Defaults to 200ms on",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 18,
                "source": "   *     regular platforms. A multiplier will be applied on slower platforms",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "regular platforms. A multiplier will be applied on slower platforms",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 19,
                "source": "   *     (eg. debug, ccov...).",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "(eg. debug, ccov...).",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 20,
                "source": "   *     Ignored if options.expectNavigation is set to `true`",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Ignored if options.expectNavigation is set to `true`",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 21,
                "source": "   * @param {boolean=} options.waitForExplicitStart",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.waitForExplicitStart",
                  "postName": "",
                  "type": "{boolean=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 22,
                "source": "   *     Flag to indicate that the Promise can only resolve after receiving a",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Flag to indicate that the Promise can only resolve after receiving a",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 23,
                "source": "   *     STATE_START state change. In other words, if the webProgress is already",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "STATE_START state change. In other words, if the webProgress is already",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 24,
                "source": "   *     navigating, the Promise will only resolve for the next navigation.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "navigating, the Promise will only resolve for the next navigation.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 25,
                "source": "   *     Defaults to `false`.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Defaults to `false`.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 26,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 27,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "browsingContext",
        "line": 178,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "currentURI",
        "line": 182,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "isLoadingDocument",
        "line": 186,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "isStarted",
        "line": 190,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "targetURI",
        "line": 194,
        "params": [],
        "kind": "get"
      },
      {
        "type": "method",
        "id": "onStateChange",
        "line": 292,
        "params": [
          {
            "type": "params",
            "id": "progress",
            "line": 292
          },
          {
            "type": "params",
            "id": "request",
            "line": 292
          },
          {
            "type": "params",
            "id": "flag",
            "line": 292
          },
          {
            "type": "params",
            "id": "status",
            "line": 292
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "onLocationChange",
        "line": 300,
        "params": [
          {
            "type": "params",
            "id": "progress",
            "line": 300
          },
          {
            "type": "params",
            "id": "request",
            "line": 300
          },
          {
            "type": "params",
            "id": "location",
            "line": 300
          },
          {
            "type": "params",
            "id": "flag",
            "line": 300
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "start",
        "line": 322,
        "params": [],
        "comments": [
          {
            "description": "Start observing web progress changes.",
            "tags": [
              {
                "tag": "returns",
                "name": "",
                "type": "Promise",
                "optional": false,
                "description": "A promise that will resolve when the navigation has been finished.",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @returns {Promise}",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": "",
                      "postName": "",
                      "type": "{Promise}",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "   *     A promise that will resolve when the navigation has been finished.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "A promise that will resolve when the navigation has been finished.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Start observing web progress changes.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Start observing web progress changes.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @returns {Promise}",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": "",
                  "postName": "",
                  "type": "{Promise}",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   *     A promise that will resolve when the navigation has been finished.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "A promise that will resolve when the navigation has been finished.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "stop",
        "line": 378,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 378
          }
        ],
        "comments": [
          {
            "description": "Stop observing web progress changes.",
            "tags": [
              {
                "tag": "param",
                "name": "options",
                "type": "object=",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "   * @param {object=} options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": "",
                      "type": "{object=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.error",
                "type": "Error=",
                "optional": false,
                "description": "If specified the navigation promise will be rejected with this error.",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {Error=} options.error",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.error",
                      "postName": "",
                      "type": "{Error=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "   *     If specified the navigation promise will be rejected with this error.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "If specified the navigation promise will be rejected with this error.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Stop observing web progress changes.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Stop observing web progress changes.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   * @param {object=} options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": "",
                  "type": "{object=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {Error=} options.error",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.error",
                  "postName": "",
                  "type": "{Error=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   *     If specified the navigation promise will be rejected with this error.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If specified the navigation promise will be rejected with this error.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "stopIfStarted",
        "line": 418,
        "params": [
          {
            "type": "params",
            "id": "options",
            "line": 418
          }
        ],
        "comments": [
          {
            "description": "Stop the progress listener if and only if we already detected a navigation start.",
            "tags": [
              {
                "tag": "param",
                "name": "options",
                "type": "object=",
                "optional": false,
                "description": "",
                "problems": [],
                "source": [
                  {
                    "number": 5,
                    "source": "   * @param {object=} options",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options",
                      "postName": "",
                      "type": "{object=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  }
                ]
              },
              {
                "tag": "param",
                "name": "options.error",
                "type": "Error=",
                "optional": false,
                "description": "If specified the navigation promise will be rejected with this error.",
                "problems": [],
                "source": [
                  {
                    "number": 6,
                    "source": "   * @param {Error=} options.error",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@param",
                      "postTag": " ",
                      "name": "options.error",
                      "postName": "",
                      "type": "{Error=}",
                      "postType": " ",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "   *     If specified the navigation promise will be rejected with this error.",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "*",
                      "postDelimiter": "     ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "If specified the navigation promise will be rejected with this error.",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 8,
                    "source": "   ",
                    "tokens": {
                      "start": "   ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 9,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "   * Stop the progress listener if and only if we already detected a navigation",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Stop the progress listener if and only if we already detected a navigation",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "   * start.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "start.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "   *",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "   * @param {object=} options",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options",
                  "postName": "",
                  "type": "{object=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "   * @param {Error=} options.error",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@param",
                  "postTag": " ",
                  "name": "options.error",
                  "postName": "",
                  "type": "{Error=}",
                  "postType": " ",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "   *     If specified the navigation promise will be rejected with this error.",
                "tokens": {
                  "start": "   ",
                  "delimiter": "*",
                  "postDelimiter": "     ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "If specified the navigation promise will be rejected with this error.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 8,
                "source": "   ",
                "tokens": {
                  "start": "   ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 9,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "toString",
        "line": 425,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "QueryInterface",
        "line": 429,
        "params": [],
        "kind": "get"
      }
    ]
  }
]