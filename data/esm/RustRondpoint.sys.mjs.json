[
  {
    "type": "variable-declaration",
    "id": "UnitTestObjs",
    "line": 9,
    "typeEstimation": {
      "type": "object-estimation",
      "keys": []
    }
  },
  {
    "type": "class",
    "id": "FfiConverterU8",
    "superClass": "FfiConverter",
    "line": 285,
    "methods": [
      {
        "type": "method",
        "id": "checkType",
        "line": 286,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 286
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 295,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lift",
        "line": 298,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 298
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 301,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 301
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 304,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 304
          },
          {
            "type": "params",
            "id": "value",
            "line": 304
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 307,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 307
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterI8",
    "superClass": "FfiConverter",
    "line": 313,
    "methods": [
      {
        "type": "method",
        "id": "checkType",
        "line": 314,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 314
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 323,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lift",
        "line": 326,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 326
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 329,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 329
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 332,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 332
          },
          {
            "type": "params",
            "id": "value",
            "line": 332
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 335,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 335
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterU16",
    "superClass": "FfiConverter",
    "line": 341,
    "methods": [
      {
        "type": "method",
        "id": "checkType",
        "line": 342,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 342
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 351,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lift",
        "line": 354,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 354
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 357,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 357
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 360,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 360
          },
          {
            "type": "params",
            "id": "value",
            "line": 360
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 363,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 363
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterI16",
    "superClass": "FfiConverter",
    "line": 369,
    "methods": [
      {
        "type": "method",
        "id": "checkType",
        "line": 370,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 370
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 379,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lift",
        "line": 382,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 382
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 385,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 385
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 388,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 388
          },
          {
            "type": "params",
            "id": "value",
            "line": 388
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 391,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 391
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterU32",
    "superClass": "FfiConverter",
    "line": 397,
    "methods": [
      {
        "type": "method",
        "id": "checkType",
        "line": 398,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 398
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 407,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lift",
        "line": 410,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 410
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 413,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 413
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 416,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 416
          },
          {
            "type": "params",
            "id": "value",
            "line": 416
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 419,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 419
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterI32",
    "superClass": "FfiConverter",
    "line": 425,
    "methods": [
      {
        "type": "method",
        "id": "checkType",
        "line": 426,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 426
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 435,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lift",
        "line": 438,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 438
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 441,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 441
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 444,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 444
          },
          {
            "type": "params",
            "id": "value",
            "line": 444
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 447,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 447
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterU64",
    "superClass": "FfiConverter",
    "line": 453,
    "methods": [
      {
        "type": "method",
        "id": "checkType",
        "line": 454,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 454
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 463,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lift",
        "line": 466,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 466
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 469,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 469
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 472,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 472
          },
          {
            "type": "params",
            "id": "value",
            "line": 472
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 475,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 475
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterI64",
    "superClass": "FfiConverter",
    "line": 481,
    "methods": [
      {
        "type": "method",
        "id": "checkType",
        "line": 482,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 482
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 488,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lift",
        "line": 491,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 491
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 494,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 494
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 497,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 497
          },
          {
            "type": "params",
            "id": "value",
            "line": 497
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 500,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 500
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterF32",
    "superClass": "FfiConverter",
    "line": 506,
    "methods": [
      {
        "type": "method",
        "id": "computeSize",
        "line": 507,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lift",
        "line": 510,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 510
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 513,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 513
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 516,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 516
          },
          {
            "type": "params",
            "id": "value",
            "line": 516
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 519,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 519
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterF64",
    "superClass": "FfiConverter",
    "line": 525,
    "methods": [
      {
        "type": "method",
        "id": "computeSize",
        "line": 526,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lift",
        "line": 529,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 529
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 532,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 532
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 535,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 535
          },
          {
            "type": "params",
            "id": "value",
            "line": 535
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 538,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 538
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterBool",
    "superClass": "FfiConverter",
    "line": 544,
    "methods": [
      {
        "type": "method",
        "id": "computeSize",
        "line": 545,
        "params": [],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lift",
        "line": 548,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 548
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 551,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 551
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 558,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 558
          },
          {
            "type": "params",
            "id": "value",
            "line": 558
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 561,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 561
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterString",
    "superClass": "FfiConverter",
    "line": 567,
    "methods": [
      {
        "type": "method",
        "id": "checkType",
        "line": 568,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 568
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lift",
        "line": 575,
        "params": [
          {
            "type": "params",
            "id": "buf",
            "line": 575
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 580,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 580
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 585,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 585
          },
          {
            "type": "params",
            "id": "value",
            "line": 585
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 589,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 589
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 593,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 593
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "Optionneur",
    "line": 599,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 602,
        "params": [
          {
            "type": "params",
            "id": "opts",
            "line": 602
          }
        ],
        "comments": [
          {
            "description": "Use `init` to instantiate this class.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Use `init` to instantiate this class.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Use `init` to instantiate this class.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "DO NOT USE THIS CONSTRUCTOR DIRECTLY",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " DO NOT USE THIS CONSTRUCTOR DIRECTLY",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "DO NOT USE THIS CONSTRUCTOR DIRECTLY",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "init",
        "line": 618,
        "params": [],
        "comments": [
          {
            "description": "An async constructor for Optionneur.",
            "tags": [
              {
                "tag": "returns",
                "name": ":",
                "type": "Promise<Optionneur>",
                "optional": false,
                "description": "A promise that resolves to a newly constructed Optionneur",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "     * @returns {Promise<Optionneur>}: A promise that resolves",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": ":",
                      "postName": " ",
                      "type": "{Promise<Optionneur>}",
                      "postType": "",
                      "description": "A promise that resolves",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "     *      to a newly constructed Optionneur",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "*",
                      "postDelimiter": "      ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "to a newly constructed Optionneur",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "     ",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "     * An async constructor for Optionneur.",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An async constructor for Optionneur.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "     * ",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "     * @returns {Promise<Optionneur>}: A promise that resolves",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": ":",
                  "postName": " ",
                  "type": "{Promise<Optionneur>}",
                  "postType": "",
                  "description": "A promise that resolves",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "     *      to a newly constructed Optionneur",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": "      ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "to a newly constructed Optionneur",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "     ",
                "tokens": {
                  "start": "     ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonBoolean",
        "line": 632,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 632
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonString",
        "line": 657,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 657
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonSequence",
        "line": 682,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 682
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonNull",
        "line": 707,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 707
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonZero",
        "line": 732,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 732
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonU8Dec",
        "line": 757,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 757
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonI8Dec",
        "line": 782,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 782
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonU16Dec",
        "line": 807,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 807
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonI16Dec",
        "line": 832,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 832
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonU32Dec",
        "line": 857,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 857
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonI32Dec",
        "line": 882,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 882
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonU64Dec",
        "line": 907,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 907
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonI64Dec",
        "line": 932,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 932
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonU8Hex",
        "line": 957,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 957
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonI8Hex",
        "line": 982,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 982
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonU16Hex",
        "line": 1007,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 1007
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonI16Hex",
        "line": 1032,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 1032
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonU32Hex",
        "line": 1057,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 1057
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonI32Hex",
        "line": 1082,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 1082
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonU64Hex",
        "line": 1107,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 1107
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonI64Hex",
        "line": 1132,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 1132
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonU32Oct",
        "line": 1157,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 1157
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonF32",
        "line": 1182,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 1182
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonF64",
        "line": 1207,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 1207
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "sinonEnum",
        "line": 1232,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 1232
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterTypeOptionneur",
    "superClass": "FfiConverter",
    "line": 1260,
    "methods": [
      {
        "type": "method",
        "id": "lift",
        "line": 1261,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1261
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 1267,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1267
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 1271,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 1271
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 1275,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 1275
          },
          {
            "type": "params",
            "id": "value",
            "line": 1275
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 1279,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1279
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "Retourneur",
    "line": 1284,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 1287,
        "params": [
          {
            "type": "params",
            "id": "opts",
            "line": 1287
          }
        ],
        "comments": [
          {
            "description": "Use `init` to instantiate this class.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Use `init` to instantiate this class.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Use `init` to instantiate this class.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "DO NOT USE THIS CONSTRUCTOR DIRECTLY",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " DO NOT USE THIS CONSTRUCTOR DIRECTLY",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "DO NOT USE THIS CONSTRUCTOR DIRECTLY",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "init",
        "line": 1303,
        "params": [],
        "comments": [
          {
            "description": "An async constructor for Retourneur.",
            "tags": [
              {
                "tag": "returns",
                "name": ":",
                "type": "Promise<Retourneur>",
                "optional": false,
                "description": "A promise that resolves to a newly constructed Retourneur",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "     * @returns {Promise<Retourneur>}: A promise that resolves",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": ":",
                      "postName": " ",
                      "type": "{Promise<Retourneur>}",
                      "postType": "",
                      "description": "A promise that resolves",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "     *      to a newly constructed Retourneur",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "*",
                      "postDelimiter": "      ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "to a newly constructed Retourneur",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "     ",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "     * An async constructor for Retourneur.",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An async constructor for Retourneur.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "     * ",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "     * @returns {Promise<Retourneur>}: A promise that resolves",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": ":",
                  "postName": " ",
                  "type": "{Promise<Retourneur>}",
                  "postType": "",
                  "description": "A promise that resolves",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "     *      to a newly constructed Retourneur",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": "      ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "to a newly constructed Retourneur",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "     ",
                "tokens": {
                  "start": "     ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueI8",
        "line": 1317,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1317
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueU8",
        "line": 1342,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1342
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueI16",
        "line": 1367,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1367
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueU16",
        "line": 1392,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1392
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueI32",
        "line": 1417,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1417
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueU32",
        "line": 1442,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1442
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueI64",
        "line": 1467,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1467
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueU64",
        "line": 1492,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1492
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueFloat",
        "line": 1517,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1517
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueDouble",
        "line": 1542,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1542
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueBoolean",
        "line": 1567,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1567
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueString",
        "line": 1592,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1592
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueNombresSignes",
        "line": 1617,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1617
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueNombres",
        "line": 1642,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1642
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "identiqueOptionneurDictionnaire",
        "line": 1667,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1667
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterTypeRetourneur",
    "superClass": "FfiConverter",
    "line": 1695,
    "methods": [
      {
        "type": "method",
        "id": "lift",
        "line": 1696,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1696
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 1702,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1702
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 1706,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 1706
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 1710,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 1710
          },
          {
            "type": "params",
            "id": "value",
            "line": 1710
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 1714,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1714
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "Stringifier",
    "line": 1719,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 1722,
        "params": [
          {
            "type": "params",
            "id": "opts",
            "line": 1722
          }
        ],
        "comments": [
          {
            "description": "Use `init` to instantiate this class.",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " Use `init` to instantiate this class.",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "Use `init` to instantiate this class.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          },
          {
            "description": "DO NOT USE THIS CONSTRUCTOR DIRECTLY",
            "tags": [],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": " DO NOT USE THIS CONSTRUCTOR DIRECTLY",
                "tokens": {
                  "start": " ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "DO NOT USE THIS CONSTRUCTOR DIRECTLY",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "init",
        "line": 1738,
        "params": [],
        "comments": [
          {
            "description": "An async constructor for Stringifier.",
            "tags": [
              {
                "tag": "returns",
                "name": ":",
                "type": "Promise<Stringifier>",
                "optional": false,
                "description": "A promise that resolves to a newly constructed Stringifier",
                "problems": [],
                "source": [
                  {
                    "number": 4,
                    "source": "     * @returns {Promise<Stringifier>}: A promise that resolves",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "*",
                      "postDelimiter": " ",
                      "tag": "@returns",
                      "postTag": " ",
                      "name": ":",
                      "postName": " ",
                      "type": "{Promise<Stringifier>}",
                      "postType": "",
                      "description": "A promise that resolves",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 5,
                    "source": "     *      to a newly constructed Stringifier",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "*",
                      "postDelimiter": "      ",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "to a newly constructed Stringifier",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 6,
                    "source": "     ",
                    "tokens": {
                      "start": "     ",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "",
                      "lineEnd": ""
                    }
                  },
                  {
                    "number": 7,
                    "source": "*/",
                    "tokens": {
                      "start": "",
                      "delimiter": "",
                      "postDelimiter": "",
                      "tag": "",
                      "postTag": "",
                      "name": "",
                      "postName": "",
                      "type": "",
                      "postType": "",
                      "description": "",
                      "end": "*/",
                      "lineEnd": ""
                    }
                  }
                ]
              }
            ],
            "source": [
              {
                "number": 0,
                "source": "/**",
                "tokens": {
                  "start": "",
                  "delimiter": "/**",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 1,
                "source": "*",
                "tokens": {
                  "start": "",
                  "delimiter": "*",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 2,
                "source": "     * An async constructor for Stringifier.",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "An async constructor for Stringifier.",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 3,
                "source": "     * ",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 4,
                "source": "     * @returns {Promise<Stringifier>}: A promise that resolves",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": " ",
                  "tag": "@returns",
                  "postTag": " ",
                  "name": ":",
                  "postName": " ",
                  "type": "{Promise<Stringifier>}",
                  "postType": "",
                  "description": "A promise that resolves",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 5,
                "source": "     *      to a newly constructed Stringifier",
                "tokens": {
                  "start": "     ",
                  "delimiter": "*",
                  "postDelimiter": "      ",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "to a newly constructed Stringifier",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 6,
                "source": "     ",
                "tokens": {
                  "start": "     ",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "",
                  "lineEnd": ""
                }
              },
              {
                "number": 7,
                "source": "*/",
                "tokens": {
                  "start": "",
                  "delimiter": "",
                  "postDelimiter": "",
                  "tag": "",
                  "postTag": "",
                  "name": "",
                  "postName": "",
                  "type": "",
                  "postType": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": ""
                }
              }
            ],
            "problems": []
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "wellKnownString",
        "line": 1752,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1752
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "toStringI8",
        "line": 1777,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1777
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "toStringU8",
        "line": 1802,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1802
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "toStringI16",
        "line": 1827,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1827
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "toStringU16",
        "line": 1852,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1852
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "toStringI32",
        "line": 1877,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1877
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "toStringU32",
        "line": 1902,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1902
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "toStringI64",
        "line": 1927,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1927
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "toStringU64",
        "line": 1952,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1952
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "toStringFloat",
        "line": 1977,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 1977
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "toStringDouble",
        "line": 2002,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2002
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "toStringBoolean",
        "line": 2027,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2027
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterTypeStringifier",
    "superClass": "FfiConverter",
    "line": 2055,
    "methods": [
      {
        "type": "method",
        "id": "lift",
        "line": 2056,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2056
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "lower",
        "line": 2062,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2062
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 2066,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2066
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 2070,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2070
          },
          {
            "type": "params",
            "id": "value",
            "line": 2070
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 2074,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2074
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "Dictionnaire",
    "line": 2079,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 2080,
        "params": [
          {
            "type": "params",
            "id": "un",
            "line": 2080
          },
          {
            "type": "params",
            "id": "deux",
            "line": 2080
          },
          {
            "type": "params",
            "id": "petitNombre",
            "line": 2080
          },
          {
            "type": "params",
            "id": "grosNombre",
            "line": 2080
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "equals",
        "line": 2118,
        "params": [
          {
            "type": "params",
            "id": "other",
            "line": 2118
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterTypeDictionnaire",
    "superClass": "FfiConverterArrayBuffer",
    "line": 2129,
    "methods": [
      {
        "type": "method",
        "id": "read",
        "line": 2130,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2130
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 2138,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2138
          },
          {
            "type": "params",
            "id": "value",
            "line": 2138
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 2145,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2145
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "checkType",
        "line": 2154,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2154
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "DictionnaireNombres",
    "line": 2191,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 2192,
        "params": [
          {
            "type": "params",
            "id": "petitNombre",
            "line": 2192
          },
          {
            "type": "params",
            "id": "courtNombre",
            "line": 2192
          },
          {
            "type": "params",
            "id": "nombreSimple",
            "line": 2192
          },
          {
            "type": "params",
            "id": "grosNombre",
            "line": 2192
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "equals",
        "line": 2230,
        "params": [
          {
            "type": "params",
            "id": "other",
            "line": 2230
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterTypeDictionnaireNombres",
    "superClass": "FfiConverterArrayBuffer",
    "line": 2241,
    "methods": [
      {
        "type": "method",
        "id": "read",
        "line": 2242,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2242
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 2250,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2250
          },
          {
            "type": "params",
            "id": "value",
            "line": 2250
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 2257,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2257
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "checkType",
        "line": 2266,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2266
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "DictionnaireNombresSignes",
    "line": 2303,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 2304,
        "params": [
          {
            "type": "params",
            "id": "petitNombre",
            "line": 2304
          },
          {
            "type": "params",
            "id": "courtNombre",
            "line": 2304
          },
          {
            "type": "params",
            "id": "nombreSimple",
            "line": 2304
          },
          {
            "type": "params",
            "id": "grosNombre",
            "line": 2304
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "equals",
        "line": 2342,
        "params": [
          {
            "type": "params",
            "id": "other",
            "line": 2342
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterTypeDictionnaireNombresSignes",
    "superClass": "FfiConverterArrayBuffer",
    "line": 2353,
    "methods": [
      {
        "type": "method",
        "id": "read",
        "line": 2354,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2354
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 2362,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2362
          },
          {
            "type": "params",
            "id": "value",
            "line": 2362
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 2369,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2369
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "checkType",
        "line": 2378,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2378
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "OptionneurDictionnaire",
    "line": 2415,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 2416,
        "params": [
          {
            "type": "params",
            "id": "param0",
            "line": 2416
          },
          {
            "type": "params",
            "id": "param1",
            "line": 2416
          },
          {
            "type": "params",
            "id": "param2",
            "line": 2416
          },
          {
            "type": "params",
            "id": "param3",
            "line": 2416
          },
          {
            "type": "params",
            "id": "param4",
            "line": 2416
          },
          {
            "type": "params",
            "id": "param5",
            "line": 2416
          },
          {
            "type": "params",
            "id": "param6",
            "line": 2416
          },
          {
            "type": "params",
            "id": "param7",
            "line": 2416
          },
          {
            "type": "params",
            "id": "param8",
            "line": 2416
          },
          {
            "type": "params",
            "id": "param9",
            "line": 2416
          },
          {
            "type": "params",
            "id": "param10",
            "line": 2416
          },
          {
            "type": "params",
            "id": "param11",
            "line": 2416
          },
          {
            "type": "params",
            "id": "param12",
            "line": 2416
          },
          {
            "type": "params",
            "id": "param13",
            "line": 2416
          },
          {
            "type": "params",
            "id": "param14",
            "line": 2416
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "equals",
        "line": 2553,
        "params": [
          {
            "type": "params",
            "id": "other",
            "line": 2553
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterTypeOptionneurDictionnaire",
    "superClass": "FfiConverterArrayBuffer",
    "line": 2575,
    "methods": [
      {
        "type": "method",
        "id": "read",
        "line": 2576,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2576
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 2595,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2595
          },
          {
            "type": "params",
            "id": "value",
            "line": 2595
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 2613,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2613
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "checkType",
        "line": 2633,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2633
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "MinusculeMajusculeDict",
    "line": 2758,
    "methods": [
      {
        "type": "method",
        "id": "constructor",
        "line": 2759,
        "params": [
          {
            "type": "params",
            "id": "minusculeMajusculeField",
            "line": 2759
          }
        ],
        "kind": "constructor"
      },
      {
        "type": "method",
        "id": "equals",
        "line": 2770,
        "params": [
          {
            "type": "params",
            "id": "other",
            "line": 2770
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterTypeminusculeMajusculeDict",
    "superClass": "FfiConverterArrayBuffer",
    "line": 2778,
    "methods": [
      {
        "type": "method",
        "id": "read",
        "line": 2779,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2779
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 2784,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2784
          },
          {
            "type": "params",
            "id": "value",
            "line": 2784
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 2788,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2788
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "checkType",
        "line": 2794,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2794
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "variable-declaration",
    "id": "Enumeration",
    "line": 2808,
    "typeEstimation": {
      "type": "object-estimation",
      "keys": [
        {
          "type": "object-property",
          "line": 2809,
          "id": "UN",
          "typeEstimation": {
            "type": "number-estimation",
            "defaultValue": 1
          }
        },
        {
          "type": "object-property",
          "line": 2810,
          "id": "DEUX",
          "typeEstimation": {
            "type": "number-estimation",
            "defaultValue": 2
          }
        },
        {
          "type": "object-property",
          "line": 2811,
          "id": "TROIS",
          "typeEstimation": {
            "type": "number-estimation",
            "defaultValue": 3
          }
        }
      ]
    }
  },
  {
    "type": "class",
    "id": "FfiConverterTypeEnumeration",
    "superClass": "FfiConverterArrayBuffer",
    "line": 2816,
    "methods": [
      {
        "type": "method",
        "id": "read",
        "line": 2817,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2817
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 2830,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2830
          },
          {
            "type": "params",
            "id": "value",
            "line": 2830
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 2846,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2846
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "checkType",
        "line": 2850,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2850
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "EnumerationAvecDonnees",
    "line": 2859,
    "methods": []
  },
  {
    "type": "class",
    "id": "FfiConverterTypeEnumerationAvecDonnees",
    "superClass": "FfiConverterArrayBuffer",
    "line": 2886,
    "methods": [
      {
        "type": "method",
        "id": "read",
        "line": 2887,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2887
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 2906,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2906
          },
          {
            "type": "params",
            "id": "value",
            "line": 2906
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 2925,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2925
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "checkType",
        "line": 2943,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2943
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "variable-declaration",
    "id": "MinusculeMajusculeEnum",
    "line": 2952,
    "typeEstimation": {
      "type": "object-estimation",
      "keys": [
        {
          "type": "object-property",
          "line": 2953,
          "id": "MINUSCULE_MAJUSCULE_VARIANT",
          "typeEstimation": {
            "type": "number-estimation",
            "defaultValue": 1
          }
        }
      ]
    }
  },
  {
    "type": "class",
    "id": "FfiConverterTypeminusculeMajusculeEnum",
    "superClass": "FfiConverterArrayBuffer",
    "line": 2958,
    "methods": [
      {
        "type": "method",
        "id": "read",
        "line": 2959,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2959
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 2968,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2968
          },
          {
            "type": "params",
            "id": "value",
            "line": 2968
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 2976,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2976
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "checkType",
        "line": 2980,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2980
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterOptionali32",
    "superClass": "FfiConverterArrayBuffer",
    "line": 2989,
    "methods": [
      {
        "type": "method",
        "id": "checkType",
        "line": 2990,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 2990
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 2996,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 2996
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 3008,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 3008
          },
          {
            "type": "params",
            "id": "value",
            "line": 3008
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 3017,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 3017
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterOptionalstring",
    "superClass": "FfiConverterArrayBuffer",
    "line": 3026,
    "methods": [
      {
        "type": "method",
        "id": "checkType",
        "line": 3027,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 3027
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 3033,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 3033
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 3045,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 3045
          },
          {
            "type": "params",
            "id": "value",
            "line": 3045
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 3054,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 3054
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterOptionalTypeminusculeMajusculeEnum",
    "superClass": "FfiConverterArrayBuffer",
    "line": 3063,
    "methods": [
      {
        "type": "method",
        "id": "checkType",
        "line": 3064,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 3064
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "read",
        "line": 3070,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 3070
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 3082,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 3082
          },
          {
            "type": "params",
            "id": "value",
            "line": 3082
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 3091,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 3091
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterSequencestring",
    "superClass": "FfiConverterArrayBuffer",
    "line": 3100,
    "methods": [
      {
        "type": "method",
        "id": "read",
        "line": 3101,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 3101
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 3110,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 3110
          },
          {
            "type": "params",
            "id": "value",
            "line": 3110
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 3117,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 3117
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "checkType",
        "line": 3126,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 3126
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterSequenceTypeEnumeration",
    "superClass": "FfiConverterArrayBuffer",
    "line": 3144,
    "methods": [
      {
        "type": "method",
        "id": "read",
        "line": 3145,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 3145
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 3154,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 3154
          },
          {
            "type": "params",
            "id": "value",
            "line": 3154
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 3161,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 3161
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "checkType",
        "line": 3170,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 3170
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "class",
    "id": "FfiConverterMapStringTypeEnumerationAvecDonnees",
    "superClass": "FfiConverterArrayBuffer",
    "line": 3188,
    "methods": [
      {
        "type": "method",
        "id": "read",
        "line": 3189,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 3189
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "write",
        "line": 3201,
        "params": [
          {
            "type": "params",
            "id": "dataStream",
            "line": 3201
          },
          {
            "type": "params",
            "id": "value",
            "line": 3201
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "computeSize",
        "line": 3209,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 3209
          }
        ],
        "kind": "method"
      },
      {
        "type": "method",
        "id": "checkType",
        "line": 3219,
        "params": [
          {
            "type": "params",
            "id": "value",
            "line": 3219
          }
        ],
        "kind": "method"
      }
    ]
  },
  {
    "type": "function-declaration",
    "id": "copieDictionnaire",
    "line": 3246,
    "params": [
      "d"
    ]
  },
  {
    "type": "function-declaration",
    "id": "copieEnumeration",
    "line": 3271,
    "params": [
      "e"
    ]
  },
  {
    "type": "function-declaration",
    "id": "copieEnumerations",
    "line": 3296,
    "params": [
      "e"
    ]
  },
  {
    "type": "function-declaration",
    "id": "copieCarte",
    "line": 3321,
    "params": [
      "c"
    ]
  },
  {
    "type": "function-declaration",
    "id": "switcheroo",
    "line": 3346,
    "params": [
      "b"
    ]
  }
]