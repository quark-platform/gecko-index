{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */"
      }
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* vim: set ts=8 sts=2 et sw=2 tw=80: */"
      }
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * nsIThreadRetargetableStreamListener\n *\n * To be used by classes which implement nsIStreamListener and whose\n * OnDataAvailable callback may be retargeted for delivery off the main thread.\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "uuid",
          "param": {
            "kind": "attribute_$0",
            "value": "fb2304b8-f82f-4433-af68-d874a2ebbdc1"
          }
        },
        "other_attributes": []
      },
      "name": "nsIThreadRetargetableStreamListener",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Checks this listener and any next listeners it may have to verify that\n   * they can receive OnDataAvailable off the main thread. It is the\n   * responsibility of the implementing class to decide on the criteria to\n   * determine if retargeted delivery of these methods is possible, but it must\n   * check any and all nsIStreamListener objects that might be called in the\n   * listener chain.\n   *\n   * An exception should be thrown if a listener in the chain does not\n   * support retargeted delivery, i.e. if the next listener does not implement\n   * nsIThreadRetargetableStreamListener, or a call to its checkListenerChain()\n   * fails.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "checkListenerChain",
                  "params": null,
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n\n"
  ]
}