{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*- */"
      }
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * This interface provides a mechanism to control an output stream\n * that takes care not to overwrite an existing target until it is known\n * that all writes to the destination succeeded.\n *\n * An object that supports this interface is intended to also support\n * nsIOutputStream.\n *\n * For example, a file output stream that supports this interface writes to\n * a temporary file, and moves it over the original file when |finish| is\n * called only if the stream can be successfully closed and all writes\n * succeeded.  If |finish| is called but something went wrong during\n * writing, it will delete the temporary file and not touch the original.\n * If the stream is closed by calling |close| directly, or the stream\n * goes away, the original file will not be overwritten, and the temporary\n * file will be deleted.\n *\n * Currently, this interface is implemented only for file output streams.\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "5f914307-5c34-4e1f-8e32-ec749d25b27a"
              }
            }
          }
        ]
      },
      "name": "nsISafeOutputStream",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Call this method to close the stream and cause the original target\n     * to be overwritten. Note: if any call to |write| failed to write out\n     * all of the data given to it, then calling this method will |close| the\n     * stream and return failure. Further, if closing the stream fails, this\n     * method will return failure. The original target will be overwritten only\n     * if all calls to |write| succeeded and the stream was successfully closed.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "finish",
                  "params": null,
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n"
  ]
}