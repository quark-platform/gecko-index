{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */"
      }
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "mozIDOMWindow",
      "base": null,
      "body": null
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "4fe082ae-6ff0-4b41-b24f-eaa664f6e46a"
              }
            }
          }
        ]
      },
      "name": "nsIOSReauthenticator",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * This interface provides an abstract way to request that the user\n   * reauthenticate themselves to the operating system. It may be useful in\n   * conjunction with nsIOSKeyStore, whereby consumers of these APIs may\n   * consider some secrets too sensitive to access without first\n   * reauthenticating the user.\n   *\n   * Usage:\n   *\n   * // obtain the singleton nsIOSReauthenticator instance\n   * const reauthenticator = Cc[\"@mozilla.org/security/osreauthenticator;1\"]\n   *                           .getService(Ci.nsIOSReauthenticator);\n   * if (await reauthenticator.asyncReauthenticate()) {\n   *   // do something only authenticated users are allowed to do...\n   * } else {\n   *   // show a \"sorry, this isn't allowed\" error\n   * }\n   */"
                  },
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Asynchronously cause the operating system to request that the user\n   * reauthenticate. This is typically in the form of a dialog box asking the\n   * user for their login password. The actual behaviour of this depends on the\n   * OS.\n   *\n   * @param prompt A short string that may be incorporated in the dialog\n   * @param caption A short string that may be shown as the dialog caption (usually Product Name)\n   * @param parentWindow Used to associate the OS dialog with the calling window.\n   * @return Promise resolving to true if the user successfully authenticated\n   *         and false otherwise.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "implicit_jscontext",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "must_use",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "Promise",
                  "name": "asyncReauthenticateUser",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "AString",
                      "name": "prompt"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "AString",
                          "name": "caption"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "mozIDOMWindow",
                          "name": "parentWindow"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n"
  ]
}