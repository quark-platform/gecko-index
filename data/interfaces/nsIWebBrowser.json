{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIInterfaceRequestor",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIWebBrowserChrome",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIURIContentListener",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "mozIDOMWindowProxy",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIWeakReference",
      "base": null,
      "body": null
    },
    "\n\n",
    "%{C++\nnamespace mozilla {\nclass OriginAttributes;\n}\n%}\n\n",
    {
      "kind": "native"
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * The nsIWebBrowser interface is implemented by web browser objects.\n * Embedders use this interface during initialisation to associate\n * the new web browser instance with the embedders chrome and\n * to register any listeners. The interface may also be used at runtime\n * to obtain the content DOM window and from that the rest of the DOM.\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "builtinclass",
              "param": null
            }
          },
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "4052b6da-4faa-4646-b3a1-7e16a01c2dc2"
              }
            }
          }
        ]
      },
      "name": "nsIWebBrowser",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * The chrome object associated with the browser instance. The embedder\n     * must create one chrome object for <I>each</I> browser object\n     * that is instantiated. The embedder must associate the two by setting\n     * this property to point to the chrome object before creating the browser\n     * window via the browser's <CODE>nsIBaseWindow</CODE> interface.\n     *\n     * The chrome may optionally implement <CODE>nsIInterfaceRequestor</CODE>,\n     * <CODE>nsIWebBrowserChromeFocus</CODE>,\n     * <CODE>nsIContextMenuListener</CODE> and\n     * <CODE>nsITooltipListener</CODE> to receive additional notifications\n     * from the browser object.\n     *\n     * The chrome object may optionally implement\n     * <CODE>nsIWebProgressListener</CODE> to register a progress listener\n     * object. If the implementation does this, it must also implement\n     * <CODE>nsIWeakReference</CODE>.\n     *\n     * @note The implementation should not refcount the supplied chrome\n     *       object; it should assume that a non <CODE>nullptr</CODE> value is\n     *       always valid. The embedder must explicitly set this value back\n     *       to nullptr if the chrome object is destroyed before the browser\n     *       object.\n     *\n     * @see nsIBaseWindow\n     * @see nsIWebBrowserChrome\n     * @see nsIInterfaceRequestor\n     * @see nsIWebBrowserChromeFocus\n     * @see nsIContextMenuListener\n     * @see nsITooltipListener\n     * @see nsIWeakReference\n     * @see nsIWebProgressListener\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": null,
                  "type": "nsIWebBrowserChrome",
                  "name": "containerWindow"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * The top-level DOM window. The embedder may walk the entire\n     * DOM starting from this value.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "mozIDOMWindowProxy",
                  "name": "contentDOMWindow"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Set Origin Attributes on the nsIWebBrowser.\n     * The Origin Attributes will be passed to the docshell once it has been\n     * created\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "notxpcom",
                          "param": null
                        }
                      },
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "nostdcall",
                          "param": null
                        }
                      },
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "binaryname",
                          "param": {
                            "kind": "attribute_$0",
                            "value": "SetOriginAttributes"
                          }
                        }
                      }
                    ]
                  },
                  "return_type": "void",
                  "name": "binarySetOriginAttributes",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "const_OriginAttributesRef",
                      "name": "aOriginAttrs"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n"
  ]
}