{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */"
      }
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIProxyInfo",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsITLSSocketControl",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "native"
    },
    "\n",
    {
      "kind": "native"
    },
    "\n",
    {
      "kind": "native"
    },
    "\n\n",
    "%{ C++\n#include \"mozilla/BasePrincipal.h\"\n%}\n\n",
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * nsISocketProvider\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "508d5469-9e1e-4a08-b5b0-7cfebba1e51a"
              }
            }
          }
        ]
      },
      "name": "nsISocketProvider",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * newSocket\n     *\n     * @param aFamily\n     *        The address family for this socket (PR_AF_INET or PR_AF_INET6).\n     * @param aHost\n     *        The origin hostname for this connection.\n     * @param aPort\n     *        The origin port for this connection.\n     * @param aProxyHost\n     *        If non-null, the proxy hostname for this connection.\n     * @param aProxyPort\n     *        The proxy port for this connection.\n     * @param aFlags\n     *        Control flags that govern this connection (see below.)\n     * @param aTlsFlags\n     *        An opaque flags for non-standard behavior of the TLS system.\n     *        It is unlikely this will need to be set outside of telemetry\n     *        studies relating to the TLS implementation.\n     * @param aFileDesc\n     *        The resulting PRFileDesc.\n     * @param aTLSSocketControl\n     *        TLS socket control object that should be associated with\n     *        aFileDesc, if applicable.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "void",
                  "name": "newSocket",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "long",
                      "name": "aFamily"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "string",
                          "name": "aHost"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "long",
                          "name": "aPort"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIProxyInfo",
                          "name": "aProxy"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "const_OriginAttributesRef",
                          "name": "aOriginAttributes"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "unsigned long",
                          "name": "aFlags"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "unsigned long",
                          "name": "aTlsFlags"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "out",
                          "type": "PRFileDescStar",
                          "name": "aFileDesc"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "out",
                          "type": "nsITLSSocketControl",
                          "name": "aTLSSocketControl"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * addToSocket\n     *\n     * This function is called to allow the socket provider to layer a\n     * PRFileDesc on top of another PRFileDesc.  For example, SSL via a SOCKS\n     * proxy.\n     *\n     * Parameters are the same as newSocket with the exception of aFileDesc,\n     * which is an in-param instead.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "void",
                  "name": "addToSocket",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "long",
                      "name": "aFamily"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "string",
                          "name": "aHost"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "long",
                          "name": "aPort"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIProxyInfo",
                          "name": "aProxy"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "const_OriginAttributesRef",
                          "name": "aOriginAttributes"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "unsigned long",
                          "name": "aFlags"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "unsigned long",
                          "name": "aTlsFlags"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "PRFileDescStar",
                          "name": "aFileDesc"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "out",
                          "type": "nsITLSSocketControl",
                          "name": "aTLSSocketControl"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * PROXY_RESOLVES_HOST\n     *\n     * This flag is set if the proxy is to perform hostname resolution instead\n     * of the client.  When set, the hostname parameter passed when in this\n     * interface will be used instead of the address structure passed for a\n     * later connect et al. request.\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "long",
                  "name": "PROXY_RESOLVES_HOST",
                  "value": {
                    "kind": "num_$2"
                  }
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * When setting this flag, the socket will not apply any\n     * credentials when establishing a connection. For example,\n     * an SSL connection would not send any client-certificates\n     * if this flag is set.\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "long",
                  "name": "ANONYMOUS_CONNECT",
                  "value": {
                    "kind": "num_$2"
                  }
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * If set, indicates that the connection was initiated from a source\n     * defined as being private in the sense of Private Browsing. Generally,\n     * there should be no state shared between connections that are private\n     * and those that are not; it is OK for multiple private connections\n     * to share state with each other, and it is OK for multiple non-private\n     * connections to share state with each other.\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "NO_PERMANENT_STORAGE",
                  "value": {
                    "kind": "num_$2"
                  }
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * If set, do not use newer protocol features that might have interop problems\n     * on the Internet. Intended only for use with critical infra like the updater.\n     * default is false.\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "BE_CONSERVATIVE",
                  "value": {
                    "kind": "num_$2"
                  }
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * This is used for a temporary workaround for a web-compat issue. The flag is\n     * only set on CORS preflight request to allowed sending client certificates\n     * on a connection for an anonymous request.\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "long",
                  "name": "ANONYMOUS_CONNECT_ALLOW_CLIENT_CERT",
                  "value": {
                    "kind": "num_$2"
                  }
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * If set, do not send an ECH extension (whether GREASE or 'real').\n     * Currently false by default and is set when retrying failed connections.\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "DONT_TRY_ECH",
                  "value": {
                    "kind": "unary_$0"
                  }
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     *  If set, indicates that the connection is a retry.\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "IS_RETRY",
                  "value": {
                    "kind": "unary_$0"
                  }
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * If set, indicates that the connection used a privacy-preserving DNS\n     * transport such as DoH, DoQ, ODOH or similar. Currently this field is\n     * set only when DoH is used via the TRR.\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "USED_PRIVATE_DNS",
                  "value": {
                    "kind": "unary_$0"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "\n"
  ]
}