{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */"
      }
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsITellableStream"
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/*\n * nsISeekableStream\n *\n * Note that a stream might not implement all methods (e.g., a readonly stream\n * won't implement setEOF)\n */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "8429d350-1040-4661-8b71-f2a6ba455980"
              }
            }
          }
        ]
      },
      "name": "nsISeekableStream",
      "base": {
        "kind": "ifacebase",
        "extends": "nsITellableStream"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/*\n     * Sets the stream pointer to the value of the 'offset' parameter\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "int32_t",
                  "name": "NS_SEEK_SET",
                  "value": "0"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/*\n     * Sets the stream pointer to its current location plus the value\n     * of the offset parameter.\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "int32_t",
                  "name": "NS_SEEK_CUR",
                  "value": "1"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/*\n     * Sets the stream pointer to the size of the stream plus the value\n     * of the offset parameter.\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "int32_t",
                  "name": "NS_SEEK_END",
                  "value": "2"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     *  seek\n     *\n     *  This method moves the stream offset of the steam implementing this\n     *  interface.\n     *\n     *   @param whence specifies how to interpret the 'offset' parameter in\n     *                 setting the stream offset associated with the implementing\n     *                 stream.\n     *\n     *   @param offset specifies a value, in bytes, that is used in conjunction\n     *                 with the 'whence' parameter to set the stream offset of the\n     *                 implementing stream.  A negative value causes seeking in\n     *                 the reverse direction.\n     *\n     *   @throws NS_BASE_STREAM_CLOSED if called on a closed stream.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "seek",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "long",
                      "name": "whence"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "long long",
                          "name": "offset"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     *  setEOF\n     *\n     *  This method truncates the stream at the current offset.\n     *\n     *   @throws NS_BASE_STREAM_CLOSED if called on a closed stream.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "setEOF",
                  "params": null,
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n"
  ]
}