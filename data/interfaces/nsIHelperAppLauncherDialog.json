{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */"
      }
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIHelperAppLauncher",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIFile",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIInterfaceRequestor",
      "base": null,
      "body": null
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * This interface is used to display a confirmation dialog before\n * launching a \"helper app\" to handle content not handled by\n * Mozilla.\n *\n * Usage:  Clients (of which there is one: the nsIExternalHelperAppService\n * implementation in mozilla/uriloader/exthandler) create an instance of\n * this interface (using the contract ID) and then call the show() method.\n *\n * The dialog is shown non-modally.  The implementation of the dialog\n * will access methods of the nsIHelperAppLauncher passed in to show()\n * in order to cause a \"save to disk\" or \"open using\" action.\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "bfc739f3-8d75-4034-a6f8-1039a5996bad"
              }
            }
          }
        ]
      },
      "name": "nsIHelperAppLauncherDialog",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * This request is passed to the helper app dialog because Gecko can not\n   * handle content of this type.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "REASON_CANTHANDLE",
                  "value": "0"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * The server requested external handling.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "REASON_SERVERREQUEST",
                  "value": "1"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Gecko detected that the type sent by the server (e.g. text/plain) does\n   * not match the actual type.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "REASON_TYPESNIFFED",
                  "value": "2"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Show confirmation dialog for launching application (or \"save to\n   * disk\") for content specified by aLauncher.\n   *\n   * @param aLauncher\n   *        A nsIHelperAppLauncher to be invoked when a file is selected.\n   * @param aWindowContext\n   *        Window associated with action.\n   * @param aReason\n   *        One of the constants from above. It indicates why the dialog is\n   *        shown. Implementors should treat unknown reasons like\n   *        REASON_CANTHANDLE.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "show",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIHelperAppLauncher",
                      "name": "aLauncher"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIInterfaceRequestor",
                          "name": "aWindowContext"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "unsigned long",
                          "name": "aReason"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Async invoke a save-to-file dialog instead of the full fledged helper app\n   * dialog. When the file is chosen (or the dialog is closed), the callback\n   * in aLauncher (aLauncher.saveDestinationAvailable) is called with the\n   * selected file.\n   *\n   * @param aLauncher\n   *        A nsIHelperAppLauncher to be invoked when a file is selected.\n   * @param aWindowContext\n   *        Window associated with action.\n   * @param aDefaultFileName\n   *        Default file name to provide (can be null)\n   * @param aSuggestedFileExtension\n   *        Sugested file extension\n   * @param aForcePrompt\n   *        Set to true to force prompting the user for thet file\n   *        name/location, otherwise perferences may control if the user is\n   *        prompted.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "promptForSaveToFileAsync",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIHelperAppLauncher",
                      "name": "aLauncher"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIInterfaceRequestor",
                          "name": "aWindowContext"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "wstring",
                          "name": "aDefaultFileName"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "wstring",
                          "name": "aSuggestedFileExtension"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "boolean",
                          "name": "aForcePrompt"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n\n\n",
    "%{C++\n#define NS_HELPERAPPLAUNCHERDLG_CONTRACTID    \"@mozilla.org/helperapplauncherdialog;1\"\n%}\n"
  ]
}