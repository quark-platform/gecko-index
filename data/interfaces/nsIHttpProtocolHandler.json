{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */"
      }
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsIProxiedProtocolHandler"
    },
    "%{C++\nnamespace mozilla {\nnamespace net {\nclass HSTSDataCallbackWrapper;\n}\n}\n%}\n\n",
    {
      "kind": "native"
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "builtinclass",
              "param": null
            }
          },
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "c48126d9-2ddd-485b-a51a-378e917e75f8"
              }
            }
          }
        ]
      },
      "name": "nsIHttpProtocolHandler",
      "base": {
        "kind": "ifacebase",
        "extends": "nsIProxiedProtocolHandler"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get the HTTP advertised user agent string.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "must_use",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": "ACString",
                  "name": "userAgent"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get the HTTP advertised user agent string.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "must_use",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": "ACString",
                  "name": "rfpUserAgent"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get the application name.\n     *\n     * @return The name of this application (eg. \"Mozilla\").\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "must_use",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": "ACString",
                  "name": "appName"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get the application version string.\n     *\n     * @return The complete version (major and minor) string. (eg. \"5.0\")\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "must_use",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": "ACString",
                  "name": "appVersion"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get the current platform.\n     *\n     * @return The platform this application is running on\n     *         (eg. \"Windows\", \"Macintosh\", \"X11\")\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "must_use",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": "ACString",
                  "name": "platform"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get the current oscpu.\n     *\n     * @return The oscpu this application is running on\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "must_use",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": "ACString",
                  "name": "oscpu"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get the application comment misc portion.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "must_use",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": "ACString",
                  "name": "misc"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get the Alt-Svc cache keys (used for testing).\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "must_use",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": {
                    "kind": "IDENTIFIER_$0"
                  },
                  "name": "altSvcCacheKeys"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get the auth cache keys (used for testing).\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "must_use",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": {
                    "kind": "IDENTIFIER_$0"
                  },
                  "name": "authCacheKeys"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * This function is used to ensure HSTS data storage is ready to read after\n     * the returned promise is resolved.\n     * Note that this function should only used for testing.\n     * See bug 1521729 for more details.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "implicit_jscontext",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "Promise",
                  "name": "EnsureHSTSDataReady",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * A C++ friendly version of EnsureHSTSDataReady\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "void",
                  "name": "EnsureHSTSDataReadyNative",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "HSTSDataCallbackWrapperAlreadyAddRefed",
                      "name": "aCallback"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/*\n     * Clears the CORS preflight cache.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "clearCORSPreflightCache",
                  "params": null,
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n\n",
    "%{C++\n// ----------- Categories -----------\n/**\n * At initialization time, the HTTP handler will initialize each service\n * registered under this category:\n */\n#define NS_HTTP_STARTUP_CATEGORY \"http-startup-category\"\n\n// ----------- Observer topics -----------\n/**\n * nsIObserver notification corresponding to startup category.  Services\n * registered under the startup category will receive this observer topic at\n * startup if they implement nsIObserver.  The \"subject\" of the notification\n * is the nsIHttpProtocolHandler instance.\n */\n#define NS_HTTP_STARTUP_TOPIC \"http-startup\"\n\n/**\n * Called when asyncOpen synchronously failes e.g. because of any synchronously\n * performed security checks.  This only fires on the child process, but if\n * needed can be implemented also on the parent process.\n */\n#define NS_HTTP_ON_FAILED_OPENING_REQUEST_TOPIC \"http-on-failed-opening-request\"\n\n /**\n * This observer topic is notified when an HTTP channel is opened.\n * It is similar to http-on-modify-request, except that\n * 1) The notification is guaranteed to occur before on-modify-request, during\n *    the AsyncOpen call itself.\n * 2) It only occurs for the initial open of a channel, not for internal\n *    asyncOpens that happen during redirects, etc.\n * 3) Some information (most notably nsIProxiedChannel.proxyInfo) may not be set\n *    on the channel object yet.\n *\n * The \"subject\" of the notification is the nsIHttpChannel instance.\n *\n * Generally the 'http-on-modify-request' notification is preferred unless the\n * synchronous, during-asyncOpen behavior that this notification provides is\n * required.\n */\n#define NS_HTTP_ON_OPENING_REQUEST_TOPIC \"http-on-opening-request\"\n\n /**\n * This observer topic is notified when a document channel is opened.\n * It is similar to http-on-opening-request.\n */\n#define NS_DOCUMENT_ON_OPENING_REQUEST_TOPIC \"document-on-opening-request\"\n\n/**\n * Before an HTTP request is sent to the server, this observer topic is\n * notified.  The observer of this topic can then choose to set any additional\n * headers for this request before the request is actually sent to the server.\n * The \"subject\" of the notification is the nsIHttpChannel instance.\n */\n#define NS_HTTP_ON_MODIFY_REQUEST_TOPIC \"http-on-modify-request\"\n\n/**\n * Same as http-on-modify-request, but called before the cookie header is set on\n * the channel.\n * This allows observers to set cookies via the cookie service to be included in\n * the request header.\n * http-on-modify-request is too late for this use-case since the cookie header\n * has already been populated at that point.\n */\n#define NS_HTTP_ON_MODIFY_REQUEST_BEFORE_COOKIES_TOPIC \"http-on-modify-request-before-cookies\"\n\n/**\n  * Before an HTTP request is sent to the server via a document channel this\n  * observer topic is notified.\n  * It is similar to http-on-modify-request.\n*/\n#define NS_DOCUMENT_ON_MODIFY_REQUEST_TOPIC \"document-on-modify-request\"\n\n/**\n * Before an HTTP connection to the server is created, this observer topic is\n * notified.  This observer happens after HSTS upgrades, etc. are set, providing\n * access to the full set of request headers. The observer of this topic can\n * choose to set any additional headers for this request before the request is\n * actually sent to the server. The \"subject\" of the notification is the\n * nsIHttpChannel instance.\n */\n#define NS_HTTP_ON_BEFORE_CONNECT_TOPIC \"http-on-before-connect\"\n\n/**\n * After an HTTP server response is received, this observer topic is notified.\n * The observer of this topic can interrogate the response.  The \"subject\" of\n * the notification is the nsIHttpChannel instance.\n */\n#define NS_HTTP_ON_EXAMINE_RESPONSE_TOPIC \"http-on-examine-response\"\n\n/**\n * The observer of this topic is notified after the received HTTP response\n * is merged with data from the browser cache.  This means that, among other\n * things, the Content-Type header will be set correctly.\n */\n#define NS_HTTP_ON_EXAMINE_MERGED_RESPONSE_TOPIC \"http-on-examine-merged-response\"\n\n/**\n * The observer of this topic is notified about a background revalidation that\n * started by hitting a request that fell into stale-while-revalidate window.\n * This notification points to the channel that performed the revalidation and\n * after this notification the cache entry has been validated or updated.\n */\n#define NS_HTTP_ON_BACKGROUND_REVALIDATION \"http-on-background-revalidation\"\n\n/**\n * The observer of this topic is notified before data is read from the cache.\n * The notification is sent if and only if there is no network communication\n * at all.\n */\n#define NS_HTTP_ON_EXAMINE_CACHED_RESPONSE_TOPIC \"http-on-examine-cached-response\"\n\n/**\n * This topic is notified for every http channel right after it called\n * OnStopRequest on its listener, regardless whether it was finished\n * successfully, failed or has been canceled.\n */\n#define NS_HTTP_ON_STOP_REQUEST_TOPIC \"http-on-stop-request\"\n\n%}\n"
  ]
}