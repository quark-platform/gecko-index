{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */"
      }
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    "%{C++\n// {8B042E22-6F87-11d3-B3C8-00805F8A6670}\n#define NS_TEXTTOSUBURI_CID { 0x8b042e22, 0x6f87, 0x11d3, { 0xb3, 0xc8, 0x0, 0x80, 0x5f, 0x8a, 0x66, 0x70 } }\n#define NS_ITEXTTOSUBURI_CONTRACTID \"@mozilla.org/intl/texttosuburi;1\"\n%}\n\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "8B042E24-6F87-11d3-B3C8-00805F8A6670"
              }
            }
          }
        ]
      },
      "name": "nsITextToSubURI",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "ACString",
                  "name": "ConvertAndEscape",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "ACString",
                      "name": "charset"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "AString",
                          "name": "text"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "AString",
                  "name": "UnEscapeAndConvert",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "ACString",
                      "name": "charset"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "ACString",
                          "name": "text"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Unescapes the given URI fragment (for UI purpose only)\n   * Note:\n   * <ul>\n   *  <li> escaping back the result (unescaped string) is not guaranteed to\n   *       give the original escaped string\n   *  <li> The URI fragment (escaped) is assumed to be in UTF-8 and converted\n   *       to AString (UTF-16)\n   *  <li> In case of successful conversion any resulting character listed\n   *       in netwerk/dns/IDNCharacterBlocklist.inc (except space) is escaped\n   *  <li> Always succeeeds (callers don't need to do error checking)\n   * </ul>\n   *\n   * @param aURIFragment the URI (or URI fragment) to unescape\n   * @param aDontEscape whether to escape IDN blocklisted characters\n   * @return Unescaped aURIFragment  converted to unicode\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "AString",
                  "name": "unEscapeURIForUI",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "AUTF8String",
                      "name": "aURIFragment"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": {
                            "kind": "attributes",
                            "first_attribute": {
                              "kind": "attribute",
                              "name": "optional",
                              "param": null
                            },
                            "other_attributes": []
                          },
                          "refType": "in",
                          "type": "boolean",
                          "name": "aDontEscape"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": "%{C++\n  nsresult UnEscapeURIForUI(const nsACString& aURIFragment,\n                            nsAString& _retval) {\n    return UnEscapeURIForUI(aURIFragment, false, _retval);\n  }\n%}\n\n  "
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Unescapes only non ASCII characters in the given URI fragment\n   * note: this method assumes the URI as UTF-8 and fallbacks to the given\n   * charset if the charset is an ASCII superset\n   *\n   * @param aCharset the charset to convert from\n   * @param aURIFragment the URI (or URI fragment) to unescape\n   * @return Unescaped aURIFragment  converted to unicode\n   * @throws NS_ERROR_UCONV_NOCONV when there is no decoder for aCharset\n   *         or NS_ERROR_UDEC_ILLEGALINPUT in case of conversion failure\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "binaryname",
                      "param": {
                        "kind": "attribute_$0",
                        "value": "UnEscapeNonAsciiURIJS"
                      }
                    },
                    "other_attributes": []
                  },
                  "return_type": "AString",
                  "name": "unEscapeNonAsciiURI",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "ACString",
                      "name": "aCharset"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "AUTF8String",
                          "name": "aURIFragment"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n"
  ]
}