{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsICommandLine",
      "base": null,
      "body": null
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * Validates arguments on the command line of an XUL application.\n *\n * Each validator is registered in the category \"command-line-validator\".\n * The entries in this category are read in alphabetical order, and each\n * category value is treated as a service contractid implementing this\n * interface.\n *\n * By convention, validator with ordinary priority should begin with \"m\".\n *\n * Example:\n * Category               Entry          Value\n * command-line-validator b-browser      @mozilla.org/browser/clh;1\n * command-line-validator m-edit         @mozilla.org/composer/clh;1\n * command-line-validator m-irc          @mozilla.org/chatzilla/clh;1\n *\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "5ecaa593-7660-4a3a-957a-92d5770671c7"
              }
            }
          }
        ]
      },
      "name": "nsICommandLineValidator",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Process the command-line validators in the proper order, calling\n   * \"validate()\" on each.\n   *\n   * @throws NS_ERROR_ABORT if any validator throws NS_ERROR_ABORT. All other\n   *         errors thrown by validators will be silently ignored.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "validate",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsICommandLine",
                      "name": "aCommandLine"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n"
  ]
}