{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */"
      }
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsIProtocolHandler"
    },
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIFile",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIURIMutator",
      "base": null,
      "body": null
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "1fb25bd5-4354-4dcd-8d97-621b7b3ed2e4"
              }
            }
          }
        ]
      },
      "name": "nsIFileProtocolHandler",
      "base": {
        "kind": "ifacebase",
        "extends": "nsIProtocolHandler"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * This method constructs a new file URI\n     *\n     * @param aFile nsIFile\n     * @return reference to a new nsIURI object\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "nsIURI",
                  "name": "newFileURI",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIFile",
                      "name": "aFile"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * This method constructs a new file URI, and returns a URI mutator\n     * that has not yet been finalized, allowing the URI to be changed without\n     * being cloned.\n     *\n     * @param aFile nsIFile\n     * @return reference to a new nsIURIMutator object\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "nsIURIMutator",
                  "name": "newFileURIMutator",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIFile",
                      "name": "file"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * DEPRECATED, AVOID IF AT ALL POSSIBLE.\n     *\n     * Calling this will cause IO on the calling thread, to determine\n     * if the file is a directory or file, and based on that behaves as\n     * if you called getURLSpecFromDir or getURLSpecFromActualFile,\n     * respectively. This IO may take multiple seconds (e.g. for network\n     * paths, slow external drives that need to be woken up, etc.).\n     *\n     * Usually, the caller should *know* that the `file` argument is\n     * either a directory (in which case it should call getURLSpecFromDir)\n     * or a non-directory file (in which case it should call\n     * getURLSpecFromActualFile), and not need to call this method.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "AUTF8String",
                  "name": "getURLSpecFromFile",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIFile",
                      "name": "file"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Converts a non-directory nsIFile to the corresponding URL string.\n     * NOTE: under some platforms this is a lossy conversion (e.g., Mac\n     * Carbon build). If the nsIFile is a local file, then the result\n     * will be a file:// URL string.\n     *\n     * The resulting string may contain URL-escaped characters.\n     *\n     * Should only be called on files which are not directories. If\n     * called on directories, the resulting URL may lack a trailing slash\n     * and cause relative URLs in such a document to misbehave.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "AUTF8String",
                  "name": "getURLSpecFromActualFile",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIFile",
                      "name": "file"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Converts a directory nsIFile to the corresponding URL string.\n     * NOTE: under some platforms this is a lossy conversion (e.g., Mac\n     * Carbon build). If the nsIFile is a local file, then the result\n     * will be a file:// URL string.\n     *\n     * The resulting string may contain URL-escaped characters.\n     *\n     * Should only be called on files which are directories (will enforce\n     * the URL ends with a slash).\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "AUTF8String",
                  "name": "getURLSpecFromDir",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIFile",
                      "name": "file"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Converts the URL string into the corresponding nsIFile if possible.\n     * A local file will be created if the URL string begins with file://.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "nsIFile",
                  "name": "getFileFromURLSpec",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "AUTF8String",
                      "name": "url"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Takes a local file and tries to interpret it as an internet shortcut\n     * (e.g. .url files on windows).\n     * @param file The local file to read\n     * @return The URI the file refers to\n     *\n     * @throw NS_ERROR_NOT_AVAILABLE if the OS does not support such files.\n     * @throw NS_ERROR_NOT_AVAILABLE if this file is not an internet shortcut.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "nsIURI",
                  "name": "readURLFile",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIFile",
                      "name": "file"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Takes a local file and tries to interpret it as a shell link file\n     * (.lnk files on Windows)\n     * @param file The local file to read\n     * @return The URI the file refers to\n     *\n     * @throw NS_ERROR_NOT_AVAILABLE if the OS does not support such files.\n     * @throw NS_ERROR_NOT_AVAILABLE if this file is not a shell link.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "nsIURI",
                  "name": "readShellLink",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIFile",
                      "name": "file"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n"
  ]
}