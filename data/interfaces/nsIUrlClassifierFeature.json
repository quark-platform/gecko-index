{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    "%{C++\n#include \"nsStringFwd.h\"\n#include \"nsTArrayForwardDeclare.h\"\n%}\n",
    {
      "kind": "native"
    },
    "\n",
    {
      "kind": "native"
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIChannel",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIURI",
      "base": null,
      "body": null
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * A single URLClassifier feature.\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "builtinclass",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "scriptable",
              "param": null
            }
          },
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "a6c9b24e-b4f1-426e-af58-2c976c3943a8"
              }
            }
          }
        ]
      },
      "name": "nsIUrlClassifierFeature",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "enum_code",
                  "name": "listType",
                  "base": "8",
                  "values": {
                    "kind": "cenumlist",
                    "first_value": {
                      "kind": "cenum",
                      "comment": [],
                      "identifier": "blocklist",
                      "value": {
                        "kind": "cenum_$0",
                        "value": "0"
                      }
                    },
                    "other_values": [
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "entitylist",
                          "value": {
                            "kind": "cenum_$0",
                            "value": "1"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "enum_code",
                  "name": "URIType",
                  "base": "8",
                  "values": {
                    "kind": "cenumlist",
                    "first_value": {
                      "kind": "cenum",
                      "comment": [],
                      "identifier": "blocklistURI",
                      "value": {
                        "kind": "cenum_$0",
                        "value": "0"
                      }
                    },
                    "other_values": [
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "entitylistURI",
                          "value": {
                            "kind": "cenum_$0",
                            "value": "1"
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "pairwiseEntitylistURI",
                          "value": {
                            "kind": "cenum_$0",
                            "value": "2"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * The feature name\n   */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "ACString",
                  "name": "name"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Returns the tables for one of the possible lists.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "StringArrayRef",
                  "name": "getTables",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIUrlClassifierFeature_listType",
                      "name": "aListType"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Returns true if |aTable| is part of the tables of |aListType| type.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "boolean",
                  "name": "hasTable",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "ACString",
                      "name": "aTable"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIUrlClassifierFeature_listType",
                          "name": "aListType"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Returns true if |aHost| is contained in the preference of |aListType| type.\n   * |aPrefTableName| will be set to the table name to use.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "boolean",
                  "name": "hasHostInPreferences",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "ACString",
                      "name": "aHost"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIUrlClassifierFeature_listType",
                          "name": "aListType"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "out",
                          "type": "ACString",
                          "name": "aPrefTableName"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Returns a comma-separated list of hosts to be ignored.\n   */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "ACString",
                  "name": "exceptionHostList"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * When this feature matches the channel, this method is executed to do\n   * 'something' on the channel. For instance, a tracking-annotation feature\n   * would mark the channel as tracker, a tracking-protection feature would\n   * cancel the channel.\n   * Returns if we should process other feature results or not. For instance,\n   * tracking-protection cancel the channel, and after that we should stop\n   * processing other features.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "boolean",
                  "name": "processChannel",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIChannel",
                      "name": "aChannel"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "ConstStringArrayRef",
                          "name": "aList"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "ConstStringArrayRef",
                          "name": "aHashes"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Features can work with different URLs from a channel (channel url, or\n   * top-level, or something else). This method returns what we need to use for\n   * the current list.\n   * If the returned URI is created by CreatePairwiseEntityListURI(), the\n   * URIType is pairwiseEntitylistURI. Otherwise, it depends on the listType.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "nsIURI",
                  "name": "getURIByListType",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIChannel",
                      "name": "channel"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIUrlClassifierFeature_listType",
                          "name": "listType"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "out",
                          "type": "nsIUrlClassifierFeature_URIType",
                          "name": "URIType"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * The result of the classifier operation is this interface.\n * See asyncClassifyLocalWithFeatures() in nsIURIClassifier.idl.\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "builtinclass",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "scriptable",
              "param": null
            }
          },
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "ccb88140-5d66-4873-9815-a1b98d6cdc92"
              }
            }
          }
        ]
      },
      "name": "nsIUrlClassifierFeatureResult",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "nsIURI",
                  "name": "uri"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "nsIUrlClassifierFeature",
                  "name": "feature"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "SINGLE_LINE_COMMENT"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "ACString",
                  "name": "list"
                }
              }
            }
          ]
        }
      }
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * Callback function for nsIURIClassifier lookups.\n * See asyncClassifyLocalWithFeatures() in nsIURIClassifier.idl.\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "function",
              "param": null
            }
          },
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "2ea83c26-dfc9-44ed-9cfc-171d4753d78e"
              }
            }
          }
        ]
      },
      "name": "nsIUrlClassifierFeatureCallback",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Called by the URI classifier service when it is done checking a URI.\n   *\n   * Clients are responsible for associating callback objects with classify()\n   * calls.\n   *\n   * @param aResults\n   *        List of nsIUrlClassifierFeatureResult objects.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "onClassifyComplete",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": {
                        "kind": "IDENTIFIER_$0"
                      },
                      "name": "aResults"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n"
  ]
}