{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "mozIDOMWindowProxy",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIEventTarget",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIRequest",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIWebProgressListener",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "webidl"
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * The nsIWebProgress interface is used to add or remove nsIWebProgressListener\n * instances to observe the loading of asynchronous requests (usually in the\n * context of a DOM window).\n *\n * nsIWebProgress instances may be arranged in a parent-child configuration,\n * corresponding to the parent-child configuration of their respective DOM\n * windows.  However, in some cases a nsIWebProgress instance may not have an\n * associated DOM window.  The parent-child relationship of nsIWebProgress\n * instances is not made explicit by this interface, but the relationship may\n * exist in some implementations.\n *\n * A nsIWebProgressListener instance receives notifications for the\n * nsIWebProgress instance to which it added itself, and it may also receive\n * notifications from any nsIWebProgress instances that are children of that\n * nsIWebProgress instance.\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "builtinclass",
              "param": null
            }
          },
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "c4d64640-b332-4db6-a2a5-e08566000dc9"
              }
            }
          }
        ]
      },
      "name": "nsIWebProgress",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * The following flags may be combined to form the aNotifyMask parameter for\n   * the addProgressListener method.  They limit the set of events that are\n   * delivered to an nsIWebProgressListener instance.\n   */"
                  },
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * These flags indicate the state transistions to observe, corresponding to\n   * nsIWebProgressListener::onStateChange.\n   *\n   * NOTIFY_STATE_REQUEST\n   *   Only receive the onStateChange event if the aStateFlags parameter\n   *   includes nsIWebProgressListener::STATE_IS_REQUEST.\n   *\n   * NOTIFY_STATE_DOCUMENT\n   *   Only receive the onStateChange event if the aStateFlags parameter\n   *   includes nsIWebProgressListener::STATE_IS_DOCUMENT.\n   *\n   * NOTIFY_STATE_NETWORK\n   *   Only receive the onStateChange event if the aStateFlags parameter\n   *   includes nsIWebProgressListener::STATE_IS_NETWORK.\n   *\n   * NOTIFY_STATE_WINDOW\n   *   Only receive the onStateChange event if the aStateFlags parameter\n   *   includes nsIWebProgressListener::STATE_IS_WINDOW.\n   *\n   * NOTIFY_STATE_ALL\n   *   Receive all onStateChange events.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "NOTIFY_STATE_REQUEST",
                  "value": "0x00000001"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "NOTIFY_STATE_DOCUMENT",
                  "value": "0x00000002"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "NOTIFY_STATE_NETWORK",
                  "value": "0x00000004"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "NOTIFY_STATE_WINDOW",
                  "value": "0x00000008"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "NOTIFY_STATE_ALL",
                  "value": "0x0000000f"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * These flags indicate the other events to observe, corresponding to the\n   * other four methods defined on nsIWebProgressListener.\n   *\n   * NOTIFY_PROGRESS\n   *   Receive onProgressChange events.\n   *\n   * NOTIFY_STATUS\n   *   Receive onStatusChange events.\n   *\n   * NOTIFY_SECURITY\n   *   Receive onSecurityChange events.\n   *\n   * NOTIFY_LOCATION\n   *   Receive onLocationChange events.\n   *\n   * NOTIFY_CONTENT_BLOCKING\n   *   Receive onContentBlockingEvent events.\n   *\n   * NOTIFY_REFRESH\n   *   Receive onRefreshAttempted events.\n   *   This is defined on nsIWebProgressListener2.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "NOTIFY_PROGRESS",
                  "value": "0x00000010"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "NOTIFY_STATUS",
                  "value": "0x00000020"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "NOTIFY_SECURITY",
                  "value": "0x00000040"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "NOTIFY_LOCATION",
                  "value": "0x00000080"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "NOTIFY_REFRESH",
                  "value": "0x00000100"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "NOTIFY_CONTENT_BLOCKING",
                  "value": "0x00000200"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * This flag enables all notifications.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "NOTIFY_ALL",
                  "value": "0x000003ff"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Registers a listener to receive web progress events.\n   *\n   * @param aListener\n   *        The listener interface to be called when a progress event occurs.\n   *        This object must also implement nsISupportsWeakReference.\n   * @param aNotifyMask\n   *        The types of notifications to receive.\n   *\n   * @throw NS_ERROR_INVALID_ARG\n   *        Indicates that aListener was either null or that it does not\n   *        support weak references.\n   * @throw NS_ERROR_FAILURE\n   *        Indicates that aListener was already registered.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "addProgressListener",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIWebProgressListener",
                      "name": "aListener"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "unsigned long",
                          "name": "aNotifyMask"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Removes a previously registered listener of progress events.\n   *\n   * @param aListener\n   *        The listener interface previously registered with a call to\n   *        addProgressListener.\n   *\n   * @throw NS_ERROR_FAILURE\n   *        Indicates that aListener was not registered.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "removeProgressListener",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIWebProgressListener",
                      "name": "aListener"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * BrowsingContext associated with this nsIWebProgress instance, or `null` if\n   * there is no BrowsingContext.\n   */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "binaryname",
                      "param": {
                        "kind": "attribute_$0",
                        "value": "BrowsingContextXPCOM"
                      }
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": "BrowsingContext",
                  "name": "browsingContext"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "notxpcom",
                          "param": null
                        }
                      },
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "nostdcall",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "BrowsingContext",
                  "name": "getBrowsingContext",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * The DOM window associated with this nsIWebProgress instance.\n   *\n   * @throw NS_ERROR_FAILURE\n   *        Indicates that there is no associated DOM window.\n   */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "mozIDOMWindowProxy",
                  "name": "DOMWindow"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Indicates whether DOMWindow.top == DOMWindow.\n   */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "boolean",
                  "name": "isTopLevel"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Indicates whether or not a document is currently being loaded\n   * in the context of this nsIWebProgress instance.\n   */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "boolean",
                  "name": "isLoadingDocument"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Contains a load type as specified by the load* constants in\n   * nsIDocShell:LoadCommand.\n   */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "unsigned long",
                  "name": "loadType"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Main thread event target to which progress updates should be\n   * dispatched. This typically will be a SchedulerEventTarget\n   * corresponding to the tab requesting updates.\n   */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": null,
                  "type": "nsIEventTarget",
                  "name": "target"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * The request for the currently loading document. It is null if\n   * isLoadingDocument is false.\n   * Note, the request may not be the actual nsIChannel instance used for\n   * loading, but a dummy RemoteWebProgressRequest. And since redirects are\n   * hidden from the child processes, this may not reflect the complete\n   * redirect state of the load.\n   */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "nsIRequest",
                  "name": "documentRequest"
                }
              }
            }
          ]
        }
      }
    },
    "\n"
  ]
}