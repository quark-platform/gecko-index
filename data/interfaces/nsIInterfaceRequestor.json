{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * The nsIInterfaceRequestor interface defines a generic interface for\n * requesting interfaces that a given object might provide access to.\n * This is very similar to QueryInterface found in nsISupports.\n * The main difference is that interfaces returned from GetInterface()\n * are not required to provide a way back to the object implementing this\n * interface.  The semantics of QI() dictate that given an interface A that\n * you QI() on to get to interface B, you must be able to QI on B to get back\n * to A.  This interface however allows you to obtain an interface C from A\n * that may or most likely will not have the ability to get back to A.\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "033A1470-8B2A-11d3-AF88-00A024FFC08C"
              }
            }
          }
        ]
      },
      "name": "nsIInterfaceRequestor",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n    * Retrieves the specified interface pointer.\n    *\n    * @param uuid The IID of the interface being requested.\n    * @param result [out] The interface pointer to be filled in if\n    *               the interface is accessible.\n    * @throws NS_NOINTERFACE - interface not accessible.\n    * @throws NS_ERROR* - method failure.\n    */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "getInterface",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIIDRef",
                      "name": "uuid"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": {
                            "kind": "attributes",
                            "first_attribute": {
                              "kind": "attribute",
                              "name": "iid_is",
                              "param": {
                                "kind": "attribute_$0",
                                "value": "uuid"
                              }
                            },
                            "other_attributes": [
                              {
                                "kind": "attributes_$0",
                                "attr": {
                                  "kind": "attribute",
                                  "name": "retval",
                                  "param": null
                                }
                              }
                            ]
                          },
                          "refType": "out",
                          "type": "nsQIResult",
                          "name": "result"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n\n"
  ]
}