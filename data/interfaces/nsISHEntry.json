{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */"
      }
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * The interface to nsISHentry. Each document or subframe in\n * Session History will have a nsISHEntry associated with it which will\n * hold all information required to recreate the document from history\n */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIContentSecurityPolicy",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIMutableArray",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsILayoutHistoryState",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIContentViewer",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIURI",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIInputStream",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIDocShellTreeItem",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIStructuredCloneContainer",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIBFCacheEntry",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIPrincipal",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsISHistory",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIReferrerInfo",
      "base": null,
      "body": null
    },
    "\n\n",
    "%{C++\n#include \"nsRect.h\"\nclass nsDocShellEditorData;\n\nnamespace mozilla {\nnamespace dom {\n\nclass SHEntrySharedParentState;\n\n}\n}\nclass nsSHEntryShared;\nclass nsDocShellLoadState;\nstruct EntriesAndBrowsingContextData;\n%}\n",
    {
      "kind": "native"
    },
    "\n",
    {
      "kind": "native"
    },
    "\n",
    {
      "kind": "native"
    },
    "\n",
    {
      "kind": "native"
    },
    "\n",
    {
      "kind": "webidl"
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "builtinclass",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "scriptable",
              "param": null
            }
          },
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "0dad26b8-a259-42c7-93f1-2fa7fc076e45"
              }
            }
          }
        ]
      },
      "name": "nsISHEntry",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * The URI of the current entry.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsIURI",
                  "name": "URI"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * The original URI of the current entry. If an entry is the result of a\n     * redirect this attribute holds the original URI.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsIURI",
                  "name": "originalURI"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * URL as stored from nsILoadInfo.resultPrincipalURI.  See nsILoadInfo\n     * for more details.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsIURI",
                  "name": "resultPrincipalURI"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * If non-null, the URI as it was before query stripping was performed.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsIURI",
                  "name": "unstrippedURI"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     *  This flag remembers whether channel has LOAD_REPLACE set.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "boolean",
                  "name": "loadReplace"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * The title of the current entry.\n     */"
                  },
                  {
                    "kind": "SINGLE_LINE_COMMENT"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": null,
                  "type": "AString",
                  "name": "title"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * The name of the browsing context.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": null,
                  "type": "AString",
                  "name": "name"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Was the entry created as a result of a subframe navigation?\n     * - Will be 'false' when a frameset page is visited for the first time.\n     * - Will be 'true' for all history entries created as a result of a\n     *   subframe navigation.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "boolean",
                  "name": "isSubFrame"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Whether the user interacted with the page while this entry was active.\n     * This includes interactions with subframe documents associated with\n     * child entries that are rooted at this entry.\n     * This field will only be set on top-level entries.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "boolean",
                  "name": "hasUserInteraction"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Whether the load that created this entry was triggered by user activation.\n     * (e.g.: The user clicked a link)\n     * Remembering this flag enables replaying the sec-fetch-* headers.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "boolean",
                  "name": "hasUserActivation"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Referrer Info*/"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsIReferrerInfo",
                  "name": "referrerInfo"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Content viewer, for fast restoration of presentation */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsIContentViewer",
                  "name": "contentViewer"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": "boolean",
                  "name": "isInBFCache"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Whether the content viewer is marked \"sticky\" */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "boolean",
                  "name": "sticky"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Saved state of the global window object */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsISupports",
                  "name": "windowState"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Saved refresh URI list for the content viewer */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsIMutableArray",
                  "name": "refreshURIList"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Post Data for the document */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsIInputStream",
                  "name": "postData"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** LayoutHistoryState for scroll position and form values */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsILayoutHistoryState",
                  "name": "layoutHistoryState"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** parent of this entry */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsISHEntry",
                  "name": "parent"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * The loadType for this entry. This is typically loadHistory except\n     * when reload is pressed, it has the appropriate reload flag\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "unsigned long",
                  "name": "loadType"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * An ID to help identify this entry from others during\n     * subframe navigation\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "unsigned long",
                  "name": "ID"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** The cache key for the entry */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "unsigned long",
                  "name": "cacheKey"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Should the layoutHistoryState be saved? */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "boolean",
                  "name": "saveLayoutStateFlag"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * attribute to indicate the content-type of the document that this\n     * is a session history entry for\n     */"
                  },
                  {
                    "kind": "SINGLE_LINE_COMMENT"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": null,
                  "type": "ACString",
                  "name": "contentType"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * If we created this SHEntry via history.pushState or modified it via\n     * history.replaceState, and if we changed the SHEntry's URI via the\n     * push/replaceState call, and if the SHEntry's new URI differs from its\n     * old URI by more than just the hash, then we set this field to true.\n     *\n     * Additionally, if this SHEntry was created by calling pushState from a\n     * SHEntry whose URI was modified, this SHEntry's URIWasModified field is\n     * true.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "boolean",
                  "name": "URIWasModified"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get the principal, if any, that was associated with the channel\n     * that the document that was loaded to create this history entry\n     * came from.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsIPrincipal",
                  "name": "triggeringPrincipal"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get the principal, if any, that is used when the inherit flag\n     * is set.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsIPrincipal",
                  "name": "principalToInherit"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get the storage principal, if any, that is used when the inherit flag is\n     * set.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsIPrincipal",
                  "name": "partitionedPrincipalToInherit"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get the csp, if any, that was used for this document load. That\n     * is not the CSP that was applied to subresource loads within the\n     * document, but the CSP that was applied to this document load.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsIContentSecurityPolicy",
                  "name": "csp"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get/set data associated with this history state via a pushState() call,\n     * serialized using structured clone.\n     **/"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsIStructuredCloneContainer",
                  "name": "stateData"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * The history ID of the docshell.\n     */"
                  },
                  {
                    "kind": "SINGLE_LINE_COMMENT"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": null,
                  "type": "nsIDRef",
                  "name": "docshellID"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * True if this SHEntry corresponds to a document created by a srcdoc\n     * iframe. Set when a value is assigned to srcdocData.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": "boolean",
                  "name": "isSrcdocEntry"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Contents of the srcdoc attribute in a srcdoc iframe to be loaded instead\n     * of the URI.  Similar to a Data URI, this information is needed to\n     * recreate the document at a later stage.\n     * Setting this sets isSrcdocEntry to true\n     */"
                  },
                  {
                    "kind": "SINGLE_LINE_COMMENT"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": null,
                  "type": "AString",
                  "name": "srcdocData"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * When isSrcdocEntry is true, this contains the baseURI of the srcdoc\n     * document for use in situations where it cannot otherwise be determined,\n     * for example with view-source.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "nsIURI",
                  "name": "baseURI"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Sets/gets the current scroll restoration state,\n     * if true == \"manual\", false == \"auto\".\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "boolean",
                  "name": "scrollRestorationIsManual"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Flag to indicate that the history entry was originally loaded in the\n     * current process. This flag does not survive a browser process switch.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": "boolean",
                  "name": "loadedInThisProcess"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * The session history it belongs to. This is set only on the root entries.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "infallible",
                          "param": null
                        }
                      }
                    ]
                  },
                  "readonly": null,
                  "type": "nsISHistory",
                  "name": "shistory"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * A number that is assigned by the sHistory when the entry is activated\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "infallible",
                          "param": null
                        }
                      }
                    ]
                  },
                  "readonly": null,
                  "type": "unsigned long",
                  "name": "lastTouched"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * The current number of nsISHEntries which are immediate children of this\n     * SHEntry.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": "long",
                  "name": "childCount"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * When an entry is serving is within nsISHistory's array of entries, this\n     * property specifies if it should persist. If not it will be replaced by\n     * new additions to the list.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "boolean",
                  "name": "persist"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Set/Get the visual viewport scroll position if session history is\n     * changed through anchor navigation or pushState.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "setScrollPosition",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "long",
                      "name": "x"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "long",
                          "name": "y"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "getScrollPosition",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "out",
                      "type": "long",
                      "name": "x"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "out",
                          "type": "long",
                          "name": "y"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Saved position and dimensions of the content viewer; we must adjust the\n     * root view's widget accordingly if this has changed when the presentation\n     * is restored.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "notxpcom",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "void",
                  "name": "getViewerBounds",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIntRect",
                      "name": "bounds"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "notxpcom",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "void",
                  "name": "setViewerBounds",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": {
                        "kind": "attributes",
                        "first_attribute": {
                          "kind": "attribute",
                          "name": "const",
                          "param": null
                        },
                        "other_attributes": []
                      },
                      "refType": "in",
                      "type": "nsIntRect",
                      "name": "bounds"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Saved child docshells corresponding to contentViewer.  The child shells\n     * are restored as children of the parent docshell, in this order, when the\n     * parent docshell restores a saved presentation.\n     */"
                  },
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Append a child shell to the end of our list. */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "notxpcom",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "void",
                  "name": "addChildShell",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIDocShellTreeItem",
                      "name": "shell"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get the child shell at |index|; returns null if |index| is out of bounds.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "nsIDocShellTreeItem",
                  "name": "childShellAt",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "long",
                      "name": "index"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Clear the child shell list.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "notxpcom",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "void",
                  "name": "clearChildShells",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Ensure that the cached presentation members are self-consistent.\n     * If either |contentViewer| or |windowState| are null, then all of the\n     * following members are cleared/reset:\n     *  contentViewer, sticky, windowState, viewerBounds, childShells,\n     *  refreshURIList.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "notxpcom",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "void",
                  "name": "syncPresentationState",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Initialises `layoutHistoryState` if it doesn't already exist\n     * and returns a reference to it.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "nsILayoutHistoryState",
                  "name": "initLayoutHistoryState",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Additional ways to create an entry */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "void",
                  "name": "create",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIURI",
                      "name": "URI"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "AString",
                          "name": "title"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIInputStream",
                          "name": "inputStream"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "unsigned long",
                          "name": "cacheKey"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "ACString",
                          "name": "contentType"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIPrincipal",
                          "name": "triggeringPrincipal"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIPrincipal",
                          "name": "principalToInherit"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIPrincipal",
                          "name": "partitionedPrincipalToInherit"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIContentSecurityPolicy",
                          "name": "aCsp"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDRef",
                          "name": "docshellID"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "boolean",
                          "name": "dynamicCreation"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIURI",
                          "name": "originalURI"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIURI",
                          "name": "resultPrincipalURI"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIURI",
                          "name": "unstrippedURI"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "bool",
                          "name": "loadReplace"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIReferrerInfo",
                          "name": "referrerInfo"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "AString",
                          "name": "srcdoc"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "bool",
                          "name": "srcdocEntry"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIURI",
                          "name": "baseURI"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "bool",
                          "name": "saveLayoutState"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "bool",
                          "name": "expired"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "bool",
                          "name": "userActivation"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "nsISHEntry",
                  "name": "clone",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Gets the owning pointer to the editor data assosicated with\n     * this shistory entry. This forgets its pointer, so free it when\n     * you're done.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "notxpcom",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "nsDocShellEditorDataPtr",
                  "name": "forgetEditorData",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Sets the owning pointer to the editor data assosicated with\n     * this shistory entry. Unless forgetEditorData() is called, this\n     * shentry will destroy the editor data when it's destroyed.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "notxpcom",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "void",
                  "name": "setEditorData",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsDocShellEditorDataPtr",
                      "name": "aData"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Returns true if this shistory entry is storing a detached editor. */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "notxpcom",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "boolean",
                  "name": "hasDetachedEditor",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Returns true if the related docshell was added because of\n     * dynamic addition of an iframe/frame.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "notxpcom",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "boolean",
                  "name": "isDynamicallyAdded",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Returns true if any of the child entries returns true\n     * when isDynamicallyAdded is called on it.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "boolean",
                  "name": "hasDynamicallyAddedChild",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Does this SHEntry point to the given BFCache entry? If so, evicting\n     * the BFCache entry will evict the SHEntry, since the two entries\n     * correspond to the same document.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "notxpcom",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "boolean",
                  "name": "hasBFCacheEntry",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "SHEntrySharedParentStatePtr",
                      "name": "aEntry"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Adopt aEntry's BFCacheEntry, so now both this and aEntry point to\n     * aEntry's BFCacheEntry.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "adoptBFCacheEntry",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsISHEntry",
                      "name": "aEntry"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Create a new BFCache entry and drop our reference to our old one. This\n     * call unlinks this SHEntry from any other SHEntries for its document.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "abandonBFCacheEntry",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Does this SHEntry correspond to the same document as aEntry? This is\n     * true iff the two SHEntries have the same BFCacheEntry. So in particular,\n     * sharesDocumentWith(aEntry) is guaranteed to return true if it's\n     * preceded by a call to adoptBFCacheEntry(aEntry).\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "boolean",
                  "name": "sharesDocumentWith",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsISHEntry",
                      "name": "aEntry"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Sets an SHEntry to reflect that it is a history type load. This is the\n     * equivalent to doing\n     *\n     * shEntry.loadType = 4;\n     *\n     * in js, but is easier to maintain and less opaque.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "setLoadTypeAsHistory",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Add a new child SHEntry. If offset is -1 adds to the end of the list.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "AddChild",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsISHEntry",
                      "name": "aChild"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "long",
                          "name": "aOffset"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": {
                            "kind": "attributes",
                            "first_attribute": {
                              "kind": "attribute",
                              "name": "optional",
                              "param": null
                            },
                            "other_attributes": [
                              {
                                "kind": "attributes_$0",
                                "attr": {
                                  "kind": "attribute",
                                  "name": "default",
                                  "param": {
                                    "kind": "attribute_$0",
                                    "value": "false"
                                  }
                                }
                              }
                            ]
                          },
                          "refType": "in",
                          "type": "bool",
                          "name": "aUseRemoteSubframes"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Remove a child SHEntry.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "void",
                  "name": "RemoveChild",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsISHEntry",
                      "name": "aChild"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Get child at an index.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "nsISHEntry",
                  "name": "GetChildAt",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "long",
                      "name": "aIndex"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * If this entry has no dynamically added child, get the child SHEntry\n     * at the given offset. The loadtype of the returned entry is set\n     * to its parent's loadtype.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "notxpcom",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "void",
                  "name": "GetChildSHEntryIfHasNoDynamicallyAddedChild",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "long",
                      "name": "aChildOffset"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "out",
                          "type": "nsISHEntry",
                          "name": "aChild"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Replaces a child which is for the same docshell as aNewChild\n     * with aNewChild.\n     * @throw if nothing was replaced.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "void",
                  "name": "ReplaceChild",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsISHEntry",
                      "name": "aNewChild"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n    * Remove all children of this entry and call abandonBFCacheEntry.\n    */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "notxpcom",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "void",
                  "name": "ClearEntry",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Create nsDocShellLoadState and fill it with information.\n     * Don't set nsSHEntry here to avoid serializing it.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "nsDocShellLoadStatePtr",
                  "name": "CreateLoadInfo",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "infallible",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": "unsigned long long",
                  "name": "bfcacheID"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Sync up the docshell and session history trees for subframe navigation.\n     *\n     * @param aEntry                    new entry\n     * @param aTopBC                    top BC corresponding to the root ancestor\n                                        of the docshell that called this method\n     * @param aIgnoreBC                 current BC\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "notxpcom",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "void",
                  "name": "SyncTreesForSubframeNavigation",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsISHEntry",
                      "name": "aEntry"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "BrowsingContext",
                          "name": "aTopBC"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "BrowsingContext",
                          "name": "aIgnoreBC"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * If browser.history.collectWireframes is true, this will get populated\n     * with a Wireframe upon document navigation / pushState. This will only\n     * be set for nsISHEntry's accessed in the parent process with\n     * sessionHistoryInParent enabled. See Document.webidl for more details on\n     * what a Wireframe is.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "implicit_jscontext",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": null,
                  "type": "jsval",
                  "name": "wireframe"
                }
              }
            }
          ]
        }
      }
    },
    "\n"
  ]
}