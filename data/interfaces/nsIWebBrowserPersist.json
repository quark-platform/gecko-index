{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsICancelable"
    },
    {
      "kind": "INCLUDE",
      "ident": "nsIContentPolicy"
    },
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIURI",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIInputStream",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIWebProgressListener",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIFile",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIChannel",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsILoadContext",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIPrincipal",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIReferrerInfo",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsICookieJarSettings",
      "base": null,
      "body": null
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * Interface for persisting DOM documents and URIs to local or remote storage.\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "8cd752a4-60b1-42c3-a819-65c7a1138a28"
              }
            }
          }
        ]
      },
      "name": "nsIWebBrowserPersist",
      "base": {
        "kind": "ifacebase",
        "extends": "nsICancelable"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** No special persistence behaviour. */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_NONE",
                  "value": "0"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Use cached data if present (skipping validation), else load from network */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_FROM_CACHE",
                  "value": "1"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Bypass the cached data. */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_BYPASS_CACHE",
                  "value": "2"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Ignore any redirected data (usually adverts). */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_IGNORE_REDIRECTED_DATA",
                  "value": "4"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Ignore IFRAME content (usually adverts). */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_IGNORE_IFRAMES",
                  "value": "8"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Do not run the incoming data through a content converter e.g. to decompress it */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_NO_CONVERSION",
                  "value": "16"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Replace existing files on the disk (use with due diligence!) */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_REPLACE_EXISTING_FILES",
                  "value": "32"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Don't modify or add base tags */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_NO_BASE_TAG_MODIFICATIONS",
                  "value": "64"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Make changes to original dom rather than cloning nodes */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_FIXUP_ORIGINAL_DOM",
                  "value": "128"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Fix links relative to destination location (not origin) */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_FIXUP_LINKS_TO_DESTINATION",
                  "value": "256"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Don't make any adjustments to links */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_DONT_FIXUP_LINKS",
                  "value": "512"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Force serialization of output (one file at a time; not concurrent) */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_SERIALIZE_OUTPUT",
                  "value": "1024"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Don't make any adjustments to filenames */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_DONT_CHANGE_FILENAMES",
                  "value": "2048"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Fail on broken inline links */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_FAIL_ON_BROKEN_LINKS",
                  "value": "4096"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Automatically cleanup after a failed or cancelled operation, deleting all\n   * created files and directories. This flag does nothing for failed upload\n   * operations to remote servers.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_CLEANUP_ON_FAILURE",
                  "value": "8192"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Let the WebBrowserPersist decide whether the incoming data is encoded\n   * and whether it needs to go through a content converter e.g. to\n   * decompress it.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_AUTODETECT_APPLY_CONVERSION",
                  "value": "16384"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Append the downloaded data to the target file.\n   * This can only be used when persisting to a local file.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_FLAGS_APPEND_TO_FILE",
                  "value": "32768"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Flags governing how data is fetched and saved from the network.\n   * It is best to set this value explicitly unless you are prepared\n   * to accept the default values.\n   */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": null,
                  "type": "unsigned long",
                  "name": "persistFlags"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Persister is ready to save data */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_STATE_READY",
                  "value": "1"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Persister is saving data */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_STATE_SAVING",
                  "value": "2"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Persister has finished saving data */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "PERSIST_STATE_FINISHED",
                  "value": "3"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Current state of the persister object.\n   */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "unsigned long",
                  "name": "currentState"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Value indicating the success or failure of the persist\n   * operation.\n   *\n   * @throws NS_BINDING_ABORTED Operation cancelled.\n   * @throws NS_ERROR_FAILURE Non-specific failure.\n   */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "nsresult",
                  "name": "result"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Callback listener for progress notifications. The object that the\n   * embbedder supplies may also implement nsIInterfaceRequestor and be\n   * prepared to return nsIAuthPrompt or other interfaces that may be required\n   * to download data.\n   *\n   * @see nsIAuthPrompt\n   * @see nsIInterfaceRequestor\n   */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": null,
                  "type": "nsIWebProgressListener",
                  "name": "progressListener"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Save the specified URI to file.\n   *\n   * @param aURI       URI to save to file. Some implementations of this interface\n   *                   may also support <CODE>nullptr</CODE> to imply the currently\n   *                   loaded URI.\n   * @param aTriggeringPrincipal\n   *                   The triggering principal for the URI we're saving.\n   * @param aCacheKey  The necko cache key integer.\n   * @param aReferrerInfo  The referrer info for compute and send referrer via\n   *                   HTTP Referer header.\n   * @param aCookieJarSettings The cookieJarSettings for the HTTP channel which\n   *                   is saving the URI.\n   * @param aPostData  Post data to pass with an HTTP request or\n   *                   <CODE>nullptr</CODE>.\n   * @param aExtraHeaders Additional headers to supply with an HTTP request\n   *                   or <CODE>nullptr</CODE>.\n   * @param aFile      Target file. This may be a nsIFile object or an\n   *                   nsIURI object with a file scheme or a scheme that\n   *                   supports uploading (e.g. ftp).\n   * @param aContentPolicyType The type of content we're saving.\n   * @param aPrivacyContext A context from which the privacy status of this\n   *                   save operation can be determined. Must only be null\n   *                   in situations in which no such context is available\n   *                   (eg. the operation has no logical association with any\n   *                   window or document)\n   *\n   * @see nsIFile\n   * @see nsIURI\n   * @see nsIInputStream\n   *\n   * @throws NS_ERROR_INVALID_ARG One or more arguments was invalid.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "saveURI",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIURI",
                      "name": "aURI"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIPrincipal",
                          "name": "aTriggeringPrincipal"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "unsigned long",
                          "name": "aCacheKey"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIReferrerInfo",
                          "name": "aReferrerInfo"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsICookieJarSettings",
                          "name": "aCookieJarSettings"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIInputStream",
                          "name": "aPostData"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "string",
                          "name": "aExtraHeaders"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsISupports",
                          "name": "aFile"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsContentPolicyType",
                          "name": "aContentPolicyType"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsILoadContext",
                          "name": "aPrivacyContext"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * @param aIsPrivate Treat the save operation as private (ie. with\n   *                   regards to networking operations and persistence\n   *                   of intermediate data, etc.)\n   * @see saveURI for all other parameter descriptions\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "savePrivacyAwareURI",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIURI",
                      "name": "aURI"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIPrincipal",
                          "name": "aTriggeringPrincipal"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "unsigned long",
                          "name": "aCacheKey"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIReferrerInfo",
                          "name": "aReferrerInfo"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsICookieJarSettings",
                          "name": "aCookieJarSettings"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIInputStream",
                          "name": "aPostData"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "string",
                          "name": "aExtraHeaders"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsISupports",
                          "name": "aFile"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsContentPolicyType",
                          "name": "aContentPolicyType"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "boolean",
                          "name": "aIsPrivate"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Save a channel to a file. It must not be opened yet.\n   * @see saveURI\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "saveChannel",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIChannel",
                      "name": "aChannel"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsISupports",
                          "name": "aFile"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Output only the current selection as opposed to the whole document. */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "ENCODE_FLAGS_SELECTION_ONLY",
                  "value": "1"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * For plaintext output. Convert html to plaintext that looks like the html.\n   * Implies wrap (except inside &lt;pre&gt;), since html wraps.\n   * HTML output: always do prettyprinting, ignoring existing formatting.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "ENCODE_FLAGS_FORMATTED",
                  "value": "2"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Output without formatting or wrapping the content. This flag\n   * may be used to preserve the original formatting as much as possible.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "ENCODE_FLAGS_RAW",
                  "value": "4"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Output only the body section, no HTML tags. */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "ENCODE_FLAGS_BODY_ONLY",
                  "value": "8"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Wrap even if when not doing formatted output (e.g. for text fields). */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "ENCODE_FLAGS_PREFORMATTED",
                  "value": "16"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Wrap documents at the specified column. */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "ENCODE_FLAGS_WRAP",
                  "value": "32"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * For plaintext output. Output for format flowed (RFC 2646). This is used\n   * when converting to text for mail sending. This differs just slightly\n   * but in an important way from normal formatted, and that is that\n   * lines are space stuffed. This can't (correctly) be done later.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "ENCODE_FLAGS_FORMAT_FLOWED",
                  "value": "64"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Convert links to absolute links where possible. */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "ENCODE_FLAGS_ABSOLUTE_LINKS",
                  "value": "128"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Output with carriage return line breaks. May also be combined with\n   * ENCODE_FLAGS_LF_LINEBREAKS and if neither is specified, the platform\n   * default format is used.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "ENCODE_FLAGS_CR_LINEBREAKS",
                  "value": "512"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Output with linefeed line breaks. May also be combined with\n   * ENCODE_FLAGS_CR_LINEBREAKS and if neither is specified, the platform\n   * default format is used.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "ENCODE_FLAGS_LF_LINEBREAKS",
                  "value": "1024"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** For plaintext output. Output the content of noscript elements. */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "ENCODE_FLAGS_NOSCRIPT_CONTENT",
                  "value": "2048"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** For plaintext output. Output the content of noframes elements. */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "ENCODE_FLAGS_NOFRAMES_CONTENT",
                  "value": "4096"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Encode basic entities, e.g. output &nbsp; instead of character code 0xa0.\n   * The basic set is just &nbsp; &amp; &lt; &gt; &quot; for interoperability\n   * with older products that don't support &alpha; and friends.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "ENCODE_FLAGS_ENCODE_BASIC_ENTITIES",
                  "value": "8192"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Save the specified DOM document to file and optionally all linked files\n   * (e.g. images, CSS, JS & subframes). Do not call this method until the\n   * document has finished loading!\n   *\n   * @param aDocument          Document to save to file. Some implementations of\n   *                           this interface may also support <CODE>nullptr</CODE>\n   *                           to imply the currently loaded document.  Can be an\n   *                           nsIWebBrowserPersistDocument or Document.\n   * @param aFile              Target local file. This may be a nsIFile object or an\n   *                           nsIURI object with a file scheme or a scheme that\n   *                           supports uploading (e.g. ftp).\n   * @param aDataPath          Path to directory where URIs linked to the document\n   *                           are saved or nullptr if no linked URIs should be saved.\n   *                           This may be a nsIFile object or an nsIURI object\n   *                           with a file scheme.\n   * @param aOutputContentType The desired MIME type format to save the\n   *                           document and all subdocuments into or nullptr to use\n   *                           the default behaviour.\n   * @param aEncodingFlags     Flags to pass to the encoder.\n   * @param aWrapColumn        For text documents, indicates the desired width to\n   *                           wrap text at. Parameter is ignored if wrapping is not\n   *                           specified by the encoding flags.\n   *\n   * @see nsIWebBrowserPersistDocument\n   * @see WebBrowserPersistable\n   * @see nsIFile\n   * @see nsIURI\n   *\n   * @throws NS_ERROR_INVALID_ARG One or more arguments was invalid.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "saveDocument",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsISupports",
                      "name": "aDocument"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsISupports",
                          "name": "aFile"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsISupports",
                          "name": "aDataPath"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "string",
                          "name": "aOutputContentType"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "unsigned long",
                          "name": "aEncodingFlags"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "unsigned long",
                          "name": "aWrapColumn"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Cancels the current operation. The caller is responsible for cleaning up\n   * partially written files or directories. This has the same effect as calling\n   * cancel with an argument of NS_BINDING_ABORTED.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "cancelSave",
                  "params": null,
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n\n",
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * We don't export nsWebBrowserPersist.h as a public header, so we need a place\n * to put the CID/ContractID. All places uses the WebBrowserPersist include\n * nsIWebBrowserPersist.h, so we define our contract IDs here for now.\n */"
      }
    },
    "%{ C++\n// {7E677795-C582-4cd1-9E8D-8271B3474D2A}\n#define NS_WEBBROWSERPERSIST_CID \\\n  { 0x7e677795, 0xc582, 0x4cd1, { 0x9e, 0x8d, 0x82, 0x71, 0xb3, 0x47, 0x4d, 0x2a } }\n#define NS_WEBBROWSERPERSIST_CONTRACTID \\\n  \"@mozilla.org/embedding/browser/nsWebBrowserPersist;1\"\n%}\n"
  ]
}