{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * nsIWindowCreator is a callback interface used by Gecko to create\n * new browser windows. The application, either Mozilla or an embedding app,\n * must provide an implementation of the Window Watcher component and\n * notify the WindowWatcher during application initialization.\n *\n * @see nsIWindowWatcher\n */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIOpenWindowInfo",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIRemoteTab",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIURI",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIWebBrowserChrome",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "mozIDOMWindowProxy",
      "base": null,
      "body": null
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "30465632-A777-44cc-90F9-8145475EF999"
              }
            }
          }
        ]
      },
      "name": "nsIWindowCreator",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/** Create a new window. Gecko will/may call this method, if made\n      available to it, to create new windows.\n      @param parent Parent window, if any. Null if not. The newly created\n                    window should be made a child/dependent window of\n                    the parent, if any (and if the concept applies\n                    to the underlying OS).\n      @param chromeFlags Chrome features from nsIWebBrowserChrome\n      @param aOpenWindowInfo Information used to open initial content in\n                             the new chrome window. Can be nullptr.\n      @param cancel Return |true| to reject window creation. If true the\n                    implementation has determined the window should not\n                    be created at all. The caller should not default\n                    to any possible backup scheme for creating the window.\n      @return the new window. Will be null if canceled or an error occurred.\n  */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "nsIWebBrowserChrome",
                  "name": "createChromeWindow",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIWebBrowserChrome",
                      "name": "parent"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "uint32_t",
                          "name": "chromeFlags"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIOpenWindowInfo",
                          "name": "aOpenWindowInfo"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "out",
                          "type": "boolean",
                          "name": "cancel"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n\n",
    "%{C++\n// {30465632-A777-44cc-90F9-8145475EF999}\n#define NS_WINDOWCREATOR_IID \\\n {0x30465632, 0xa777, 0x44cc, {0x90, 0xf9, 0x81, 0x45, 0x47, 0x5e, 0xf9, 0x99}}\n%}\n\n"
  ]
}