{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* THIS IS A PUBLIC EMBEDDING API */"
      }
    },
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * The nsIEmbeddingSiteWindow is implemented by the embedder to provide\n * Gecko with the means to call up to the host to resize the window,\n * hide or show it and set/get its title.\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "0b976267-4aaa-4f36-a2d4-27b5ca8d73bb"
              }
            }
          }
        ]
      },
      "name": "nsIEmbeddingSiteWindow",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Flag indicates that position of the top left corner of the outer area\n     * is required/specified.\n     *\n     * @see setDimensions\n     * @see getDimensions\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "DIM_FLAGS_POSITION",
                  "value": "1"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Flag indicates that the size of the inner area is required/specified.\n     *\n     * @note The inner and outer flags are mutually exclusive and it is\n     *       invalid to combine them.\n     *\n     * @see setDimensions\n     * @see getDimensions\n     * @see DIM_FLAGS_SIZE_OUTER\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "DIM_FLAGS_SIZE_INNER",
                  "value": "2"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Flag indicates that the size of the outer area is required/specified.\n     *\n     * @see setDimensions\n     * @see getDimensions\n     * @see DIM_FLAGS_SIZE_INNER\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "DIM_FLAGS_SIZE_OUTER",
                  "value": "4"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Flag indicates that the x parameter should be ignored.\n     *\n     * @see setDimensions\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "DIM_FLAGS_IGNORE_X",
                  "value": "8"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Flag indicates that the y parameter should be ignored.\n     *\n     * @see setDimensions\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "DIM_FLAGS_IGNORE_Y",
                  "value": "16"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Flag indicates that the cx parameter should be ignored.\n     *\n     * @see setDimensions\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "DIM_FLAGS_IGNORE_CX",
                  "value": "32"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Flag indicates that the cy parameter should be ignored.\n     *\n     * @see setDimensions\n     */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "DIM_FLAGS_IGNORE_CY",
                  "value": "64"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Sets the dimensions for the window; the position & size. The\n     * flags to indicate what the caller wants to set and whether the size\n     * refers to the inner or outer area. The inner area refers to just\n     * the embedded area, wheras the outer area can also include any\n     * surrounding chrome, window frame, title bar, and so on.\n     *\n     * @param flags  Combination of position, inner and outer size flags.\n     *               The ignore flags are telling the parent to use the\n     *               current values for those dimensions and ignore the\n     *               corresponding parameters the child sends.\n     * @param x      Left hand corner of the outer area.\n     * @param y      Top corner of the outer area.\n     * @param cx     Width of the inner or outer area.\n     * @param cy     Height of the inner or outer area.\n     *\n     * @return <code>NS_OK</code> if operation was performed correctly;\n     *         <code>NS_ERROR_UNEXPECTED</code> if window could not be\n     *           destroyed;\n     *         <code>NS_ERROR_INVALID_ARG</code> for bad flag combination\n     *           or illegal dimensions.\n     *\n     * @see getDimensions\n     * @see DIM_FLAGS_POSITION\n     * @see DIM_FLAGS_SIZE_OUTER\n     * @see DIM_FLAGS_SIZE_INNER\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "setDimensions",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "unsigned long",
                      "name": "flags"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "long",
                          "name": "x"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "long",
                          "name": "y"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "long",
                          "name": "cx"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "long",
                          "name": "cy"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Gets the dimensions of the window. The caller may pass\n     * <CODE>nullptr</CODE> for any value it is uninterested in receiving.\n     *\n     * @param flags  Combination of position, inner and outer size flag .\n     * @param x      Left hand corner of the outer area; or <CODE>nullptr</CODE>.\n     * @param y      Top corner of the outer area; or <CODE>nullptr</CODE>.\n     * @param cx     Width of the inner or outer area; or <CODE>nullptr</CODE>.\n     * @param cy     Height of the inner or outer area; or <CODE>nullptr</CODE>.\n     *\n     * @see setDimensions\n     * @see DIM_FLAGS_POSITION\n     * @see DIM_FLAGS_SIZE_OUTER\n     * @see DIM_FLAGS_SIZE_INNER\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "getDimensions",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "unsigned long",
                      "name": "flags"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "out",
                          "type": "long",
                          "name": "x"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "out",
                          "type": "long",
                          "name": "y"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "out",
                          "type": "long",
                          "name": "cx"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "out",
                          "type": "long",
                          "name": "cy"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Visibility of the window.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": null,
                  "type": "boolean",
                  "name": "visibility"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Title of the window.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": null,
                  "type": "AString",
                  "name": "title"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Native window for the site's window. The implementor should copy the\n     * native window object into the address supplied by the caller. The\n     * type of the native window that the address refers to is  platform\n     * and OS specific as follows:\n     *\n     * <ul>\n     *   <li>On Win32 it is an <CODE>HWND</CODE>.</li>\n     *   <li>On MacOS this is a <CODE>WindowPtr</CODE>.</li>\n     *   <li>On GTK this is a <CODE>GtkWidget*</CODE>.</li>\n     * </ul>\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "readonly": "readonly",
                  "type": "voidPtr",
                  "name": "siteWindow"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Blur the window. This should unfocus the window and send an onblur event.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "blur",
                  "params": null,
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n"
  ]
}