{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "INCLUDE",
      "ident": "nsIRequest"
    },
    {
      "kind": "INCLUDE",
      "ident": "nsITRRSkipReason"
    },
    "%{ C++\n#include \"mozilla/BasePrincipal.h\"\n#include \"mozilla/TypedEnumBits.h\"\n%}\n\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsICancelable",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIEventTarget",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIDNSRecord",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIDNSListener",
      "base": null,
      "body": null
    },
    "\n",
    {
      "kind": "interface_main",
      "doc_comment": null,
      "attrs": null,
      "name": "nsIDNSAdditionalInfo",
      "base": null,
      "body": null
    },
    "\n\n",
    "%{C++\n#include \"nsTArrayForwardDeclare.h\"\nnamespace mozilla { namespace net {\n    struct DNSCacheEntries;\n} }\n%}\n\n",
    {
      "kind": "native"
    },
    "\n",
    {
      "kind": "native"
    },
    "\n\n",
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * nsIDNSService\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "builtinclass",
              "param": null
            }
          },
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "de5642c6-61fc-4fcf-9a47-03226b0d4e21"
              }
            }
          }
        ]
      },
      "name": "nsIDNSService",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * These are the dns request types that are currently supported.\n     * RESOLVE_TYPE_DEFAULT is standard A/AAAA lookup\n     */"
                  }
                ],
                "code": {
                  "kind": "enum_code",
                  "name": "ResolveType",
                  "base": "16",
                  "values": {
                    "kind": "cenumlist",
                    "first_value": {
                      "kind": "cenum",
                      "comment": [],
                      "identifier": "RESOLVE_TYPE_DEFAULT",
                      "value": {
                        "kind": "cenum_$0",
                        "value": "0"
                      }
                    },
                    "other_values": [
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_TYPE_TXT",
                          "value": {
                            "kind": "cenum_$0",
                            "value": "16"
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_TYPE_HTTPSSVC",
                          "value": {
                            "kind": "cenum_$0",
                            "value": "65"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "enum_code",
                  "name": "ResolverMode",
                  "base": "32",
                  "values": {
                    "kind": "cenumlist",
                    "first_value": {
                      "kind": "cenum",
                      "comment": [],
                      "identifier": "MODE_NATIVEONLY",
                      "value": {
                        "kind": "cenum_$0",
                        "value": "0"
                      }
                    },
                    "other_values": [
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "MODE_RESERVED1",
                          "value": {
                            "kind": "cenum_$0",
                            "value": "1"
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "MODE_TRRFIRST",
                          "value": {
                            "kind": "cenum_$0",
                            "value": "2"
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "MODE_TRRONLY",
                          "value": {
                            "kind": "cenum_$0",
                            "value": "3"
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "MODE_RESERVED4",
                          "value": {
                            "kind": "cenum_$0",
                            "value": "4"
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "MODE_TRROFF",
                          "value": {
                            "kind": "cenum_$0",
                            "value": "5"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "enum_code",
                  "name": "DNSFlags",
                  "base": "32",
                  "values": {
                    "kind": "cenumlist",
                    "first_value": {
                      "kind": "cenum",
                      "comment": [],
                      "identifier": "RESOLVE_DEFAULT_FLAGS",
                      "value": {
                        "kind": "cenum_$0",
                        "value": "0"
                      }
                    },
                    "other_values": [
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_BYPASS_CACHE",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_CANONICAL_NAME",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_PRIORITY_MEDIUM",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_PRIORITY_LOW",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_SPECULATE",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_DISABLE_IPV6",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_OFFLINE",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_DISABLE_IPV4",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_ALLOW_NAME_COLLISION",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_DISABLE_TRR",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_REFRESH_CACHE",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_TRR_MODE_MASK",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "num_$1"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_TRR_DISABLED_MODE",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_IGNORE_SOCKS_DNS",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_IP_HINT",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_DISABLE_ODOH",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "RESOLVE_WANT_RECORD_ON_ERROR",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      },
                      {
                        "kind": "cenumlist_$0",
                        "value": {
                          "kind": "cenum",
                          "comment": [],
                          "identifier": "ALL_DNSFLAGS_BITS",
                          "value": {
                            "kind": "cenum_$0",
                            "value": {
                              "kind": "unary_$0"
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * kicks off an asynchronous host lookup.\n     *\n     * @param aHostName\n     *        the hostname or IP-address-literal to resolve.\n     * @param aType\n     *        one of RESOLVE_TYPE_*.\n     * @param aFlags\n     *        a bitwise OR of the RESOLVE_ prefixed constants defined below.\n     * @param aInfo\n     *        a AdditionalInfo object that holds information about:\n     *         - the resolver to be used such as TRR URL\n     *         - the port number that could be used to construct a QNAME\n     *           for HTTPS RR\n     *        If null we use the default configuration.\n     * @param aListener\n     *        the listener to be notified when the result is available.\n     * @param aListenerTarget\n     *        optional parameter (may be null).  if non-null, this parameter\n     *        specifies the nsIEventTarget of the thread on which the\n     *        listener's onLookupComplete should be called.  however, if this\n     *        parameter is null, then onLookupComplete will be called on an\n     *        unspecified thread (possibly recursively).\n     * @param aOriginAttributes\n     *        the originAttribute for this resolving, the DNS cache will be\n     *        separated according to this originAttributes. This attribute is\n     *        optional to avoid breaking add-ons.\n     *\n     * @return An object that can be used to cancel the host lookup.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "implicit_jscontext",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "optional_argc",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "nsICancelable",
                  "name": "asyncResolve",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "AUTF8String",
                      "name": "aHostName"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSService_ResolveType",
                          "name": "aType"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSService_DNSFlags",
                          "name": "aFlags"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSAdditionalInfo",
                          "name": "aInfo"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSListener",
                          "name": "aListener"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIEventTarget",
                          "name": "aListenerTarget"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": {
                            "kind": "attributes",
                            "first_attribute": {
                              "kind": "attribute",
                              "name": "optional",
                              "param": null
                            },
                            "other_attributes": []
                          },
                          "refType": "in",
                          "type": "jsval",
                          "name": "aOriginAttributes"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "notxpcom",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "nsresult",
                  "name": "asyncResolveNative",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "AUTF8String",
                      "name": "aHostName"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSService_ResolveType",
                          "name": "aType"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSService_DNSFlags",
                          "name": "aFlags"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSAdditionalInfo",
                          "name": "aInfo"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSListener",
                          "name": "aListener"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIEventTarget",
                          "name": "aListenerTarget"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "OriginAttributes",
                          "name": "aOriginAttributes"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "out",
                          "type": "nsICancelable",
                          "name": "aResult"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Returns a new nsIDNSAdditionalInfo object containing the URL we pass to it.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "nsIDNSAdditionalInfo",
                  "name": "newAdditionalInfo",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "AUTF8String",
                      "name": "aTrrURL"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "int32_t",
                          "name": "aPort"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Attempts to cancel a previously requested async DNS lookup\n     *\n     * @param aHostName\n     *        the hostname or IP-address-literal to resolve.\n     * @param aType\n     *        one of RESOLVE_TYPE_*.\n     * @param aFlags\n     *        a bitwise OR of the RESOLVE_ prefixed constants defined below.\n     * @param aInfo\n     *        a AdditionalInfo object that holds information about:\n     *         - the resolver to be used such as TRR URL\n     *         - the port number that could be used to construct a QNAME\n     *           for HTTPS RR\n     *        If null we use the default configuration.\n     * @param aListener\n     *        the original listener which was to be notified about the host lookup\n     *        result - used to match request information to requestor.\n     * @param aReason\n     *        nsresult reason for the cancellation\n     * @param aOriginAttributes\n     *        the originAttribute for this resolving. This attribute is optional\n     *        to avoid breaking add-ons.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "implicit_jscontext",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "optional_argc",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "void",
                  "name": "cancelAsyncResolve",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "AUTF8String",
                      "name": "aHostName"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSService_ResolveType",
                          "name": "aType"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSService_DNSFlags",
                          "name": "aFlags"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSAdditionalInfo",
                          "name": "aResolver"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSListener",
                          "name": "aListener"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsresult",
                          "name": "aReason"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": {
                            "kind": "attributes",
                            "first_attribute": {
                              "kind": "attribute",
                              "name": "optional",
                              "param": null
                            },
                            "other_attributes": []
                          },
                          "refType": "in",
                          "type": "jsval",
                          "name": "aOriginAttributes"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "notxpcom",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "nsresult",
                  "name": "cancelAsyncResolveNative",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "AUTF8String",
                      "name": "aHostName"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSService_ResolveType",
                          "name": "aType"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSService_DNSFlags",
                          "name": "aFlags"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSAdditionalInfo",
                          "name": "aResolver"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSListener",
                          "name": "aListener"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsresult",
                          "name": "aReason"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "OriginAttributes",
                          "name": "aOriginAttributes"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * called to synchronously resolve a hostname.\n     *\n     * Since this method may block the calling thread for a long period of\n     * time, it may not be accessed from the main thread.\n     *\n     * @param aHostName\n     *        the hostname or IP-address-literal to resolve.\n     * @param aFlags\n     *        a bitwise OR of the RESOLVE_ prefixed constants defined below.\n     * @param aOriginAttributes\n     *        the originAttribute for this resolving, the DNS cache will be\n     *        separated according to this originAttributes. This attribute is\n     *        optional to avoid breaking add-ons.\n     *\n     * @return DNS record corresponding to the given hostname.\n     * @throws NS_ERROR_UNKNOWN_HOST if host could not be resolved.\n     * @throws NS_ERROR_NOT_AVAILABLE if accessed from the main thread.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "implicit_jscontext",
                      "param": null
                    },
                    "other_attributes": [
                      {
                        "kind": "attributes_$0",
                        "attr": {
                          "kind": "attribute",
                          "name": "optional_argc",
                          "param": null
                        }
                      }
                    ]
                  },
                  "return_type": "nsIDNSRecord",
                  "name": "resolve",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "AUTF8String",
                      "name": "aHostName"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSService_DNSFlags",
                          "name": "aFlags"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": {
                            "kind": "attributes",
                            "first_attribute": {
                              "kind": "attribute",
                              "name": "optional",
                              "param": null
                            },
                            "other_attributes": []
                          },
                          "refType": "in",
                          "type": "jsval",
                          "name": "aOriginAttributes"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "notxpcom",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "nsresult",
                  "name": "resolveNative",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "AUTF8String",
                      "name": "aHostName"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "nsIDNSService_DNSFlags",
                          "name": "aFlags"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "OriginAttributes",
                          "name": "aOriginAttributes"
                        }
                      },
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "out",
                          "type": "nsIDNSRecord",
                          "name": "aResult"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * The method takes a pointer to an nsTArray\n     * and fills it with cache entry data\n     * Called by the networking dashboard\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "void",
                  "name": "getDNSCacheEntries",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "EntriesArray",
                      "name": "args"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Clears the DNS cache.\n     * @param aTrrToo\n     *        If true we will clear TRR cached entries too. Since these\n     *        are resolved remotely it's not necessary to clear them when\n     *        the network status changes, but it's sometimes useful to do so\n     *        for tests or other situations.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "clearCache",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "boolean",
                      "name": "aTrrToo"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * The method is used only for test purpose. We use this to recheck if\n     * parental control is enabled or not.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "reloadParentalControlEnabled",
                  "params": null,
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Notifies the TRR service of a TRR that was automatically detected based\n     * on network preferences.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "setDetectedTrrURI",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "AUTF8String",
                      "name": "aURI"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Stores the result of the TRR heuristic detection.\n     * Will be TRR_OK if no heuristics failed.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "setHeuristicDetectionResult",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsITRRSkipReason_value",
                      "name": "value"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Returns the result of the last TRR heuristic detection.\n     * Will be TRR_OK if no heuristics failed.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "nsITRRSkipReason_value",
                  "name": "heuristicDetectionResult"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "ACString",
                  "name": "getTRRSkipReasonName",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsITRRSkipReason_value",
                      "name": "value"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Notifies the DNS service that we failed to connect to this alternative\n     * endpoint.\n     * @param aOwnerName\n     *        The owner name of this HTTPS RRs.\n     * @param aSVCDomainName\n     *        The domain name of this alternative endpoint.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "void",
                  "name": "ReportFailedSVCDomainName",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "ACString",
                      "name": "aOwnerName"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "ACString",
                          "name": "aSVCDomainName"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Check if the given domain name was failed to connect to before.\n     * @param aOwnerName\n     *        The owner name of this HTTPS RRs.\n     * @param aSVCDomainName\n     *        The domain name of this alternative endpoint.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "boolean",
                  "name": "IsSVCDomainNameFailed",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "ACString",
                      "name": "aOwnerName"
                    },
                    "other": [
                      {
                        "kind": "paramlist_$0",
                        "param": {
                          "kind": "param",
                          "attribute": null,
                          "refType": "in",
                          "type": "ACString",
                          "name": "aSVCDomainName"
                        }
                      }
                    ]
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Reset the exclusion list.\n     * @param aOwnerName\n     *        The owner name of this HTTPS RRs.\n     */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": {
                    "kind": "attributes",
                    "first_attribute": {
                      "kind": "attribute",
                      "name": "noscript",
                      "param": null
                    },
                    "other_attributes": []
                  },
                  "return_type": "void",
                  "name": "ResetExcludedSVCDomainName",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "ACString",
                      "name": "aOwnerName"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Returns a string containing the URI currently used by the TRR service.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "AUTF8String",
                  "name": "currentTrrURI"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Returns the value of the TRR Service's current default mode.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "nsIDNSService_ResolverMode",
                  "name": "currentTrrMode"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "void",
                  "name": "setTRRModeInChild",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "nsIDNSService_ResolverMode",
                      "name": "mode"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * The TRRService's current confirmation state.\n     * This is mostly for testing purposes.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "unsigned long",
                  "name": "currentTrrConfirmationState"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * @return the hostname of the operating system.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "AUTF8String",
                  "name": "myHostName"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * returns the current TRR domain.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "ACString",
                  "name": "trrDomain"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n     * Returns true when we have valid ODoHConfigs to encrypt/decrypt oblivious\n     * DNS packets.\n     */"
                  }
                ],
                "code": {
                  "kind": "attribute_code",
                  "attributes": null,
                  "readonly": "readonly",
                  "type": "boolean",
                  "name": "ODoHActivated"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/*************************************************************************\n     * Listed below are the various flags that may be OR'd together to form\n     * the aFlags parameter passed to asyncResolve() and resolve().\n     */"
                  }
                ],
                "code": "%{C++\n    static nsIDNSService::DNSFlags GetFlagsFromTRRMode(nsIRequest::TRRMode aMode) {\n        return static_cast<nsIDNSService::DNSFlags>(static_cast<uint32_t>(aMode) << 11);\n    }\n\n    static nsIRequest::TRRMode GetTRRModeFromFlags(nsIDNSService::DNSFlags aFlags) {\n        return static_cast<nsIRequest::TRRMode>((aFlags & RESOLVE_TRR_MODE_MASK) >> 11);\n    }\n%}\n\n"
              }
            }
          ]
        }
      }
    },
    "\n\n",
    "%{C++\n\n/**\n * An observer notification for this topic is sent whenever the URI that the\n * TRR service is using has changed.\n */\n#define NS_NETWORK_TRR_URI_CHANGED_TOPIC \"network:trr-uri-changed\"\n\n/**\n * An observer notification for this topic is sent whenever the mode that the\n * TRR service is using has changed.\n */\n#define NS_NETWORK_TRR_MODE_CHANGED_TOPIC \"network:trr-mode-changed\"\n\nMOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS(nsIDNSService::DNSFlags)\n\n%}\n"
  ]
}