{
  "kind": "idlfile",
  "contents": [
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */"
      }
    },
    {
      "kind": "ANY_COMMENT_$0",
      "doc": {
        "kind": "DOC_COMMENT",
        "contents": "/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */"
      }
    },
    {
      "kind": "INCLUDE",
      "ident": "nsISupports"
    },
    {
      "kind": "interface_main",
      "doc_comment": {
        "kind": "DOC_COMMENT",
        "contents": "/**\n * The nsIWebNavigationInfo interface exposes a way to get information\n * on the capabilities of Gecko webnavigation objects.\n */"
      },
      "attrs": {
        "kind": "attributes",
        "first_attribute": {
          "kind": "attribute",
          "name": "scriptable",
          "param": null
        },
        "other_attributes": [
          {
            "kind": "attributes_$0",
            "attr": {
              "kind": "attribute",
              "name": "uuid",
              "param": {
                "kind": "attribute_$0",
                "value": "62a93afb-93a1-465c-84c8-0432264229de"
              }
            }
          }
        ]
      },
      "name": "nsIWebNavigationInfo",
      "base": {
        "kind": "ifacebase",
        "extends": "nsISupports"
      },
      "body": {
        "kind": "ifacebody",
        "contents": {
          "kind": "ifacebody_$0",
          "contents": [
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Returned by isTypeSupported to indicate lack of support for a type.\n   * @note this is guaranteed not to change, so that boolean tests can be done\n   * on the return value if isTypeSupported to detect whether a type is\n   * supported at all.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "UNSUPPORTED",
                  "value": "0"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Returned by isTypeSupported to indicate that a type is supported as an\n   * image.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "IMAGE",
                  "value": "1"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Returned by isTypeSupported to indicate that a type is a special NPAPI\n   * plugin that render as a transparent region (we do not support NPAPI\n   * plugins).\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "FALLBACK",
                  "value": "2"
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * @note Other return types may be added here in the future as they become\n   * relevant.\n   */"
                  },
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Returned by isTypeSupported to indicate that a type is supported via some\n   * other means.\n   */"
                  }
                ],
                "code": {
                  "kind": "const_code",
                  "type": "unsigned long",
                  "name": "OTHER",
                  "value": {
                    "kind": "num_$2"
                  }
                }
              }
            },
            {
              "kind": "ifacebody_$0_$0",
              "contents": {
                "kind": "member_$0",
                "docComment": [
                  {
                    "kind": "DOC_COMMENT",
                    "contents": "/**\n   * Query whether aType is supported.\n   * @param aType the MIME type in question.\n   * @return an enum value indicating whether and how aType is supported.\n   * @note This method may rescan plugins to ensure that they're properly\n   *       registered for the types they support.\n   */"
                  }
                ],
                "code": {
                  "kind": "func",
                  "attributes": null,
                  "return_type": "unsigned long",
                  "name": "isTypeSupported",
                  "params": {
                    "kind": "paramlist",
                    "first_param": {
                      "kind": "param",
                      "attribute": null,
                      "refType": "in",
                      "type": "ACString",
                      "name": "aType"
                    },
                    "other": []
                  },
                  "raises": null
                }
              }
            }
          ]
        }
      }
    },
    "\n"
  ]
}